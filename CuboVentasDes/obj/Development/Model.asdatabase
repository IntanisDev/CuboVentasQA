{
  "name": "CuboVentas",
  "compatibilityLevel": 1500,
  "model": {
    "name": "Modelo",
    "culture": "es-CL",
    "discourageImplicitMeasures": true,
    "dataSources": [
      {
        "name": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev",
        "connectionString": "Data Source=edw-prd.sql.azuresynapse.net;Initial Catalog=edw_prd;User ID=sqladminuser;Persist Security Info=true;Encrypt=true;TrustServerCertificate=false",
        "impersonationMode": "impersonateServiceAccount",
        "provider": "System.Data.SqlClient",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlAzure"
          }
        ]
      },
      {
        "type": "structured",
        "name": "SQL/edw-prd-ondemand sql azuresynapse net;consumption",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "edw-prd-ondemand.sql.azuresynapse.net",
            "database": "consumption"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "OAuth2",
          "kind": "SQL",
          "path": "edw-prd-ondemand.sql.azuresynapse.net;consumption",
          "Expires": "Wed, 23 Nov 2022 17:40:12 GMT",
          "RefreshToken": "********"
        }
      }
    ],
    "tables": [
      {
        "name": "Sale Channel Store",
        "columns": [
          {
            "name": "SaleChannelId",
            "dataType": "int64",
            "sourceColumn": "SaleChannelId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "StoreId",
            "dataType": "int64",
            "sourceColumn": "StoreId",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "Consulta",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT  ",
                "   CASE WHEN StoreCode IN ('J033', 'J034', 'J035') THEN 8 ",
                "   ELSE CASE WHEN Store.Type IN ('Levis', 'Dockers') THEN 1 ",
                "   WHEN Store.Type IN ('Multimarca') THEN 1446 ",
                "   WHEN Store.Type IN ('Outlet')  THEN 2 ",
                "   ELSE SaleChannel.SaleChannelId ",
                "   END END AS SaleChannelId, ",
                "",
                "   SaleChannel_Store.StoreId",
                "",
                "FROM   sales.SaleChannel_Store LEFT OUTER JOIN sales.SaleChannel ",
                "              ON SaleChannel.SaleChannelId = SaleChannel_Store.SaleChannelId ",
                "            LEFT OUTER JOIN   Sales.Store ",
                "              ON Store.StoreId = SaleChannel_Store.StoreId",
                "WHERE        (Store.Visible = 1)"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT  ",
                  "   CASE WHEN StoreCode IN ('J033', 'J034', 'J035') THEN 8 ",
                  "   ELSE CASE WHEN Store.Type IN ('Levis', 'Dockers') THEN 1 ",
                  "   WHEN Store.Type IN ('Multimarca') THEN 1446 ",
                  "   WHEN Store.Type IN ('Outlet')  THEN 2 ",
                  "   ELSE SaleChannel.SaleChannelId ",
                  "   END END AS SaleChannelId, ",
                  "",
                  "   SaleChannel_Store.StoreId",
                  "",
                  "FROM   sales.SaleChannel_Store LEFT OUTER JOIN sales.SaleChannel ",
                  "              ON SaleChannel.SaleChannelId = SaleChannel_Store.SaleChannelId ",
                  "            LEFT OUTER JOIN   Sales.Store ",
                  "              ON Store.StoreId = SaleChannel_Store.StoreId",
                  "WHERE        (Store.Visible = 1)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Sale Channel Store Count",
            "expression": "COUNTROWS('Sale Channel Store')"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT  ",
              "   CASE WHEN StoreCode IN ('J033', 'J034', 'J035') THEN 8 ",
              "   ELSE CASE WHEN Store.Type IN ('Levis', 'Dockers') THEN 1 ",
              "   WHEN Store.Type IN ('Multimarca') THEN 1446 ",
              "   WHEN Store.Type IN ('Outlet')  THEN 2 ",
              "   ELSE SaleChannel.SaleChannelId ",
              "   END END AS SaleChannelId, ",
              "",
              "   SaleChannel_Store.StoreId",
              "",
              "FROM   sales.SaleChannel_Store LEFT OUTER JOIN sales.SaleChannel ",
              "              ON SaleChannel.SaleChannelId = SaleChannel_Store.SaleChannelId ",
              "            LEFT OUTER JOIN   Sales.Store ",
              "              ON Store.StoreId = SaleChannel_Store.StoreId",
              "WHERE        (Store.Visible = 1)"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Consulta"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT  ",
              "   CASE WHEN StoreCode IN ('J033', 'J034', 'J035') THEN 8 ",
              "   ELSE CASE WHEN Store.Type IN ('Levis', 'Dockers') THEN 1 ",
              "   WHEN Store.Type IN ('Multimarca') THEN 1446 ",
              "   WHEN Store.Type IN ('Outlet')  THEN 2 ",
              "   ELSE SaleChannel.SaleChannelId ",
              "   END END AS SaleChannelId, ",
              "",
              "   SaleChannel_Store.StoreId",
              "",
              "FROM   sales.SaleChannel_Store LEFT OUTER JOIN sales.SaleChannel ",
              "              ON SaleChannel.SaleChannelId = SaleChannel_Store.SaleChannelId ",
              "            LEFT OUTER JOIN   Sales.Store ",
              "              ON Store.StoreId = SaleChannel_Store.StoreId",
              "WHERE        (Store.Visible = 1)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Negocio",
        "columns": [
          {
            "name": "Business Clasification Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "BusinessClasificationId",
            "sourceProviderType": "int"
          },
          {
            "name": "Negocio",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "BusinessClasification",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[BusinessClasification].* FROM [sales].[BusinessClasification] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[BusinessClasification].* FROM [sales].[BusinessClasification] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "BusinessClasification"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Calce",
        "columns": [
          {
            "name": "ShimId",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "ShimId",
            "sourceProviderType": "int"
          },
          {
            "name": "Calce",
            "dataType": "string",
            "sourceColumn": "Descripcion",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "_Calce",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[Shim].* FROM [sales].[Shim] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[Shim].* FROM [sales].[Shim] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Shim"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Genero",
        "columns": [
          {
            "name": "Gender Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "GenderId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "GeneroOld",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Genero",
            "dataType": "string",
            "sourceColumn": "GenderType",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Codigo Genero",
            "dataType": "string",
            "sourceColumn": "GenderCode",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "_Genero",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT  GenderId, ",
                "             Description, ",
                "             ISNULL(GenderType, Description) AS GenderType, ",
                "             GenderCode",
                "FROM    sales.Gender"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT  GenderId, ",
                  "             Description, ",
                  "             ISNULL(GenderType, Description) AS GenderType, ",
                  "             GenderCode",
                  "FROM    sales.Gender</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT  GenderId, ",
              "             Description, ",
              "             ISNULL(GenderType, Description) AS GenderType, ",
              "             GenderCode",
              "FROM    sales.Gender"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "_Genero"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT  GenderId, ",
              "             Description, ",
              "             ISNULL(GenderType, Description) AS GenderType, ",
              "             GenderCode",
              "FROM    sales.Gender</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Canal",
        "columns": [
          {
            "name": "Sale Channel Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "SaleChannelId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Canal",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Codigo Canal",
            "dataType": "string",
            "sourceColumn": "ChannelCode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Negocio",
            "dataType": "string",
            "sourceColumn": "BusinessType",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Order By",
            "dataType": "int64",
            "sourceColumn": "OrderBy",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "Canal",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ",
                "  SaleChannelId, ",
                "  Description, ",
                "  ChannelCode, ",
                "  BusinessType, ",
                "  CASE WHEN ChannelCode = '10' THEN 1 ",
                "     WHEN ChannelCode = '12' THEN 2 ",
                "     WHEN ChannelCode = '11' THEN 3 ",
                "     WHEN ChannelCode = '90' THEN 4 ",
                "     WHEN ChannelCode = '20' THEN 5 ",
                "     WHEN ChannelCode = '50' THEN 6 ",
                "     WHEN ChannelCode = '60' THEN 7 ",
                "     ELSE 8 END AS OrderBy",
                "",
                "FROM   sales.SaleChannel"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "  SaleChannelId, ",
                  "  Description, ",
                  "  ChannelCode, ",
                  "  BusinessType, ",
                  "  CASE WHEN ChannelCode = '10' THEN 1 ",
                  "     WHEN ChannelCode = '12' THEN 2 ",
                  "     WHEN ChannelCode = '11' THEN 3 ",
                  "     WHEN ChannelCode = '90' THEN 4 ",
                  "     WHEN ChannelCode = '20' THEN 5 ",
                  "     WHEN ChannelCode = '50' THEN 6 ",
                  "     WHEN ChannelCode = '60' THEN 7 ",
                  "     ELSE 8 END AS OrderBy",
                  "",
                  "FROM   sales.SaleChannel</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "  SaleChannelId, ",
              "  Description, ",
              "  ChannelCode, ",
              "  BusinessType, ",
              "  CASE WHEN ChannelCode = '10' THEN 1 ",
              "     WHEN ChannelCode = '12' THEN 2 ",
              "     WHEN ChannelCode = '11' THEN 3 ",
              "     WHEN ChannelCode = '90' THEN 4 ",
              "     WHEN ChannelCode = '20' THEN 5 ",
              "     WHEN ChannelCode = '50' THEN 6 ",
              "     WHEN ChannelCode = '60' THEN 7 ",
              "     ELSE 8 END AS OrderBy",
              "",
              "FROM   sales.SaleChannel"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Canal"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "  SaleChannelId, ",
              "  Description, ",
              "  ChannelCode, ",
              "  BusinessType, ",
              "  CASE WHEN ChannelCode = '10' THEN 1 ",
              "     WHEN ChannelCode = '12' THEN 2 ",
              "     WHEN ChannelCode = '11' THEN 3 ",
              "     WHEN ChannelCode = '90' THEN 4 ",
              "     WHEN ChannelCode = '20' THEN 5 ",
              "     WHEN ChannelCode = '50' THEN 6 ",
              "     WHEN ChannelCode = '60' THEN 7 ",
              "     ELSE 8 END AS OrderBy",
              "",
              "FROM   sales.SaleChannel</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Cliente",
        "columns": [
          {
            "name": "Customer Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "CustomerId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Cliente",
            "dataType": "string",
            "sourceColumn": "BusinessName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Rut Cliente",
            "dataType": "string",
            "sourceColumn": "TaxCode",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "_Cliente",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT CustomerId, ",
                "            BusinessName, ",
                "            TaxCode",
                "",
                "FROM    sales.Customer",
                "where customerid in (select distinct customerid from sales.sale)"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT CustomerId, ",
                  "            BusinessName, ",
                  "            TaxCode",
                  "",
                  "FROM    sales.Customer",
                  "where customerid in (select distinct customerid from sales.sale)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT CustomerId, ",
              "            BusinessName, ",
              "            TaxCode",
              "",
              "FROM    sales.Customer",
              "where customerid in (select distinct customerid from sales.sale)"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "_Cliente"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT CustomerId, ",
              "            BusinessName, ",
              "            TaxCode",
              "",
              "FROM    sales.Customer",
              "where customerid in (select distinct customerid from sales.sale)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Tipo",
        "columns": [
          {
            "name": "Clothing Piece Type Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "ClothingPieceTypeId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Tipo Old",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Tipo",
            "dataType": "string",
            "sourceColumn": "DescriptionType",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "_Tipo",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ",
                "    ClothingPieceTypeId, ",
                "    Description, ",
                "    LongDescription AS DescriptionType",
                "FROM  sales.ClothingPieceType"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "    ClothingPieceTypeId, ",
                  "    Description, ",
                  "    LongDescription AS DescriptionType",
                  "FROM  sales.ClothingPieceType</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "    ClothingPieceTypeId, ",
              "    Description, ",
              "    LongDescription AS DescriptionType",
              "FROM  sales.ClothingPieceType"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "_Tipo"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "    ClothingPieceTypeId, ",
              "    Description, ",
              "    LongDescription AS DescriptionType",
              "FROM  sales.ClothingPieceType</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Linea",
        "columns": [
          {
            "name": "Line Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "LineId",
            "sourceProviderType": "int"
          },
          {
            "name": "LineaOld",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Linea",
            "dataType": "string",
            "sourceColumn": "LongDescription",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Codigo Linea",
            "dataType": "string",
            "sourceColumn": "LineCode",
            "sourceProviderType": "varchar"
          },
          {
            "name": "LineType",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LineType",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "_Linea",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[Line].* FROM [sales].[Line] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[Line].* FROM [sales].[Line] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Line"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Calidad",
        "columns": [
          {
            "name": "Quality Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "QualityId",
            "sourceProviderType": "int"
          },
          {
            "name": "Calidad",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "varchar"
          },
          {
            "name": "LongDescription",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LongDescription",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Codigo Canal",
            "dataType": "string",
            "sourceColumn": "QualityCode",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "_Calidad",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[Quality].* FROM [sales].[Quality] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[Quality].* FROM [sales].[Quality] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Quality"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Marca",
        "columns": [
          {
            "name": "Brand Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "BrandId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Marca",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LongDescription",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LongDescription",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Codigo Marca",
            "dataType": "string",
            "sourceColumn": "BrandCode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Order By Brand",
            "dataType": "string",
            "sourceColumn": "OrderByBrand",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "_Marca",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ",
                "   BrandId, ",
                "   Description, ",
                "   LongDescription, ",
                "   BrandCode, ",
                "   OrderByBrand",
                "",
                "FROM   Sales.Brand",
                "",
                "WHERE  BrandId IN (1006, 1007)"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "   BrandId, ",
                  "   Description, ",
                  "   LongDescription, ",
                  "   BrandCode, ",
                  "   OrderByBrand",
                  "",
                  "FROM   Sales.Brand",
                  "",
                  "WHERE  BrandId IN (1006, 1007)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "   BrandId, ",
              "   Description, ",
              "   LongDescription, ",
              "   BrandCode, ",
              "   OrderByBrand",
              "",
              "FROM   Sales.Brand",
              "",
              "WHERE  BrandId IN (1006, 1007)"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "_Marca"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "   BrandId, ",
              "   Description, ",
              "   LongDescription, ",
              "   BrandCode, ",
              "   OrderByBrand",
              "",
              "FROM   Sales.Brand",
              "",
              "WHERE  BrandId IN (1006, 1007)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Producto",
        "columns": [
          {
            "name": "Product Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "ProductId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "VariantCode",
            "dataType": "string",
            "sourceColumn": "VariantCode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Variante",
            "dataType": "string",
            "sourceColumn": "Variant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "VariantGroup",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "VariantGroup",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Color",
            "dataType": "string",
            "sourceColumn": "Color",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Talla",
            "dataType": "string",
            "sourceColumn": "Size",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Largo",
            "dataType": "string",
            "sourceColumn": "Large",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Año Estacion",
            "dataType": "string",
            "sourceColumn": "StationYear",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "GTIN-UPC",
            "dataType": "string",
            "sourceColumn": "UPCCode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PC13",
            "dataType": "string",
            "sourceColumn": "PC13",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Capsulas WAM Codigo",
            "dataType": "string",
            "sourceColumn": "CapWamCod"
          },
          {
            "name": "Capsulas WAM Descripcion",
            "dataType": "string",
            "sourceColumn": "CapWamDes"
          },
          {
            "name": "Consumer Group Codigo",
            "dataType": "string",
            "sourceColumn": "ConsGrp2Cod"
          },
          {
            "name": "Consumer Group Descripcion",
            "dataType": "string",
            "sourceColumn": "ConsGrp2Des"
          },
          {
            "name": "Consumer Target Codigo",
            "dataType": "string",
            "sourceColumn": "ConsTrgCod"
          },
          {
            "name": "Consumer Target Descripcion",
            "dataType": "string",
            "sourceColumn": "ConsTrgDes"
          },
          {
            "name": "Fit Reference Codigo",
            "dataType": "string",
            "sourceColumn": "FitRefCod"
          },
          {
            "name": "Fit Reference Descripcion",
            "dataType": "string",
            "sourceColumn": "FitRefDes"
          },
          {
            "name": "GlFitPlat",
            "dataType": "string",
            "sourceColumn": "GlFitPlat"
          },
          {
            "name": "Product Line Codigo",
            "dataType": "string",
            "sourceColumn": "ProdLineCod"
          },
          {
            "name": "Product Line Descripcion",
            "dataType": "string",
            "sourceColumn": "ProdLineDes"
          },
          {
            "name": "ProdName",
            "dataType": "string",
            "sourceColumn": "ProdName"
          },
          {
            "name": "Program Codigo",
            "dataType": "string",
            "sourceColumn": "ProgCod"
          },
          {
            "name": "Program Descripcion",
            "dataType": "string",
            "sourceColumn": "ProgDes"
          },
          {
            "name": "SubClass",
            "dataType": "string",
            "sourceColumn": "SubClass"
          },
          {
            "name": "Sustentabilidad Codigo",
            "dataType": "string",
            "sourceColumn": "SustCod"
          },
          {
            "name": "Sustentabilidad Descripcion",
            "dataType": "string",
            "sourceColumn": "SustDes"
          },
          {
            "name": "Tecno Codigo",
            "dataType": "string",
            "sourceColumn": "TecnoCod"
          },
          {
            "name": "Tecno Descripcion",
            "dataType": "string",
            "sourceColumn": "TecnoDes"
          },
          {
            "name": "Tier Codigo",
            "dataType": "string",
            "sourceColumn": "TierCod"
          },
          {
            "name": "Tier Descripcion",
            "dataType": "string",
            "sourceColumn": "TierDes"
          },
          {
            "name": "Class Codigo",
            "dataType": "string",
            "sourceColumn": "ClassCod"
          },
          {
            "name": "Class Descripcion",
            "dataType": "string",
            "sourceColumn": "ClassDes"
          }
        ],
        "partitions": [
          {
            "name": "_Producto",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT\tDISTINCT ",
                "\t\tProductId, ",
                "\t\tVariantCode, ",
                "\t\tVariant, ",
                "\t\tVariantGroup, ",
                "\t\tColor, ",
                "\t\tCASE\tWHEN len(rtrim(ltrim(Size))) < 3 THEN\tCASE\tWHEN len(rtrim(ltrim(Size))) = 1 THEN '00' + CONVERT(varchar, rtrim(ltrim(Size))) ",
                "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN len(rtrim(ltrim(Size))) = 2 THEN '0' + CONVERT(varchar, rtrim(ltrim(Size))) ",
                "\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND ",
                "\t\t\t\tELSE rtrim(ltrim(Size)) ",
                "\t\tEND AS Size, ",
                "\t\tLarge, ",
                "\t\tStationYear, ",
                "\t\tUPCCode, ",
                "\t\tCASE\tWHEN ltrim(rtrim(isnull(PC13, ''))) = '' THEN NULL ",
                "\t\t\t\tELSE PC13 ",
                "\t\tEND AS PC13,",
                "\t\tCase When CapWamCod is Null Then '0' Else CapWamCod End CapWamCod,",
                "\t\tCase When CapWamDes is Null Then 'S-I' Else CapWamDes End CapWamDes,",
                "\t\tCase When ConsGrp2Cod is Null Then '0' Else  ConsGrp2Cod End ConsGrp2Cod,",
                "\t\tCase When ConsGrp2Des is Null Then 'S-I' Else ConsGrp2Des End ConsGrp2Des,",
                "\t\tCase When ConsTrgCod is Null Then '0' Else ConsTrgCod End ConsTrgCod,",
                "\t\tCase When ConsTrgDes is Null Then 'S-I' Else ConsTrgDes End ConsTrgDes,",
                "\t\tCase When FitRefCod is Null Then '0' Else FitRefCod End FitRefCod,",
                "\t\tCase When FitRefDes is Null Then 'S-I' Else FitRefDes End FitRefDes,",
                "\t\tGlFitPlat,",
                "\t\tCase When ProdLineCod is Null Then '0' Else ProdLineCod End ProdLineCod,",
                "\t\tCase When ProdLineDes is Null Then 'S-I' Else ProdLineDes End ProdLineDes,",
                "\t\tProdName,",
                "\t\tCase When ProgCod is Null Then '0' Else ProgCod End ProgCod,",
                "\t\tCase When ProgDes is Null Then 'S-I' Else ProgDes End ProgDes,",
                "\t\tSubClass,",
                "\t\tCase When SustCod is Null Then '0' Else SustCod End SustCod,",
                "\t\tCase When SustDes is Null Then 'S-I' Else SustDes End SustDes,",
                "\t\tCase When TecnoCod is Null Then '0' Else TecnoCod End TecnoCod,",
                "\t\tCase When TecnoDes is Null Then 'S-I' Else TecnoDes End TecnoDes,",
                "\t\tCase When TierCod is Null Then '0' Else TierCod End TierCod,",
                "\t\tCase When TierDes is Null Then 'S-I' Else TierDes End TierDes,",
                "\t\tCase When ClassCod is Null Then '0' Else ClassCod End ClassCod,",
                "\t\tCase When ClassDes is Null Then 'S-I' Else ClassDes End ClassDes",
                "FROM   (",
                "\t\t\t\tSELECT\tDISTINCT ",
                "\t\t\t\t\t\tProduct_4.ProductId, ",
                "\t\t\t\t\t\tProduct_4.VariantCode, ",
                "\t\t\t\t\t\tProduct_4.Variant, ",
                "\t\t\t\t\t\tProduct_4.VariantGroup, ",
                "\t\t\t\t\t\tProduct_4.Color, ",
                "\t\t\t\t\t\tProduct_4.Size, ",
                "\t\t\t\t\t\tProduct_4.Large, ",
                "\t\t\t\t\t\tProduct_4.StationYear, ",
                "\t\t\t\t\t\tProduct_4.UPCCode, ",
                "\t\t\t\t\t\tProduct_4.PC13,",
                "\t\t\t\t\t\tProduct_4.CapWamCod,",
                "\t\t\t\t\t\tProduct_4.CapWamDes,",
                "\t\t\t\t\t\tProduct_4.ConsGrp2Cod,",
                "\t\t\t\t\t\tProduct_4.ConsGrp2Des,",
                "\t\t\t\t\t\tProduct_4.ConsTrgCod,",
                "\t\t\t\t\t\tProduct_4.ConsTrgDes,",
                "\t\t\t\t\t\tProduct_4.FitRefCod,",
                "\t\t\t\t\t\tProduct_4.FitRefDes,",
                "\t\t\t\t\t\tProduct_4.GlFitPlat,",
                "\t\t\t\t\t\tProduct_4.ProdLineCod,",
                "\t\t\t\t\t\tProduct_4.ProdLineDes,",
                "\t\t\t\t\t\tProduct_4.ProdName,",
                "\t\t\t\t\t\tProduct_4.ProgCod,",
                "\t\t\t\t\t\tProduct_4.ProgDes,",
                "\t\t\t\t\t\tProduct_4.SubClass,",
                "\t\t\t\t\t\tProduct_4.SustCod,",
                "\t\t\t\t\t\tProduct_4.SustDes,",
                "\t\t\t\t\t\tProduct_4.TecnoCod,",
                "\t\t\t\t\t\tProduct_4.TecnoDes,",
                "\t\t\t\t\t\tProduct_4.TierCod,",
                "\t\t\t\t\t\tProduct_4.TierDes,",
                "\t\t\t\t\t\tProduct_4.ClassCod,",
                "\t\t\t\t\t\tProduct_4.ClassDes",
                "\t\t\t\tFROM\tsales.Product AS Product_4 INNER JOIN sales.Sale ",
                "\t\t\t\t\t\tON Product_4.ProductId = Sale.ProductId",
                "\t\t\t\tUNION",
                "                 ",
                "\t\t\t\tSELECT\tDISTINCT ",
                "\t\t\t\t\t\tProduct_1.ProductId, ",
                "\t\t\t\t\t\tProduct_1.VariantCode, ",
                "\t\t\t\t\t\tProduct_1.Variant, ",
                "\t\t\t\t\t\tProduct_1.VariantGroup, ",
                "\t\t\t\t\t\tProduct_1.Color, ",
                "\t\t\t\t\t\tProduct_1.Size, ",
                "\t\t\t\t\t\tProduct_1.Large, ",
                "\t\t\t\t\t\tProduct_1.StationYear, ",
                "\t\t\t\t\t\tProduct_1.UPCCode, ",
                "\t\t\t\t\t\tProduct_1.PC13,",
                "\t\t\t\t\t\tProduct_1.CapWamCod,",
                "\t\t\t\t\t\tProduct_1.CapWamDes,",
                "\t\t\t\t\t\tProduct_1.ConsGrp2Cod,",
                "\t\t\t\t\t\tProduct_1.ConsGrp2Des,",
                "\t\t\t\t\t\tProduct_1.ConsTrgCod,",
                "\t\t\t\t\t\tProduct_1.ConsTrgDes,",
                "\t\t\t\t\t\tProduct_1.FitRefCod,",
                "\t\t\t\t\t\tProduct_1.FitRefDes,",
                "\t\t\t\t\t\tProduct_1.GlFitPlat,",
                "\t\t\t\t\t\tProduct_1.ProdLineCod,",
                "\t\t\t\t\t\tProduct_1.ProdLineDes,",
                "\t\t\t\t\t\tProduct_1.ProdName,",
                "\t\t\t\t\t\tProduct_1.ProgCod,",
                "\t\t\t\t\t\tProduct_1.ProgDes,",
                "\t\t\t\t\t\tProduct_1.SubClass,",
                "\t\t\t\t\t\tProduct_1.SustCod,",
                "\t\t\t\t\t\tProduct_1.SustDes,",
                "\t\t\t\t\t\tProduct_1.TecnoCod,",
                "\t\t\t\t\t\tProduct_1.TecnoDes,",
                "\t\t\t\t\t\tProduct_1.TierCod,",
                "\t\t\t\t\t\tProduct_1.TierDes,",
                "\t\t\t\t\t\tProduct_1.ClassCod,",
                "\t\t\t\t\t\tProduct_1.ClassDes",
                "\t\t\t\tFROM\tsales.Product AS Product_1",
                "                WHERE\t(VariantCode = '0000')",
                "                   ",
                "\t\t\t\tUNION",
                "             ",
                "\t\t\t\tSELECT\tDISTINCT ",
                "\t\t\t\t\t\tProduct_3.ProductId, ",
                "\t\t\t\t\t\tProduct_3.VariantCode, ",
                "\t\t\t\t\t\tProduct_3.Variant, ",
                "\t\t\t\t\t\tProduct_3.VariantGroup, ",
                "\t\t\t\t\t\tProduct_3.Color, ",
                "\t\t\t\t\t\tProduct_3.Size, ",
                "\t\t\t\t\t\tProduct_3.Large, ",
                "\t\t\t\t\t\tProduct_3.StationYear, ",
                "\t\t\t\t\t\tProduct_3.UPCCode, ",
                "\t\t\t\t\t\tProduct_3.PC13,",
                "\t\t\t\t\t\tProduct_3.CapWamCod,",
                "\t\t\t\t\t\tProduct_3.CapWamDes,",
                "\t\t\t\t\t\tProduct_3.ConsGrp2Cod,",
                "\t\t\t\t\t\tProduct_3.ConsGrp2Des,",
                "\t\t\t\t\t\tProduct_3.ConsTrgCod,",
                "\t\t\t\t\t\tProduct_3.ConsTrgDes,",
                "\t\t\t\t\t\tProduct_3.FitRefCod,",
                "\t\t\t\t\t\tProduct_3.FitRefDes,",
                "\t\t\t\t\t\tProduct_3.GlFitPlat,",
                "\t\t\t\t\t\tProduct_3.ProdLineCod,",
                "\t\t\t\t\t\tProduct_3.ProdLineDes,",
                "\t\t\t\t\t\tProduct_3.ProdName,",
                "\t\t\t\t\t\tProduct_3.ProgCod,",
                "\t\t\t\t\t\tProduct_3.ProgDes,",
                "\t\t\t\t\t\tProduct_3.SubClass,",
                "\t\t\t\t\t\tProduct_3.SustCod,",
                "\t\t\t\t\t\tProduct_3.SustDes,",
                "\t\t\t\t\t\tProduct_3.TecnoCod,",
                "\t\t\t\t\t\tProduct_3.TecnoDes,",
                "\t\t\t\t\t\tProduct_3.TierCod,",
                "\t\t\t\t\t\tProduct_3.TierDes,",
                "\t\t\t\t\t\tProduct_3.ClassCod,",
                "\t\t\t\t\t\tProduct_3.ClassDes",
                "                 FROM\tsales.Product AS Product_3 INNER JOIN sales.SaleABP ",
                "\t\t\t\t\t\tON Product_3.ProductId = SaleABP.ProductId",
                "                          ",
                "\t\t\t\tUNION",
                "                   ",
                "\t\t\t\tSELECT\tDISTINCT ",
                "\t\t\t\t\t\tProduct_2.ProductId, ",
                "\t\t\t\t\t\tProduct_2.VariantCode, ",
                "\t\t\t\t\t\tProduct_2.Variant, ",
                "\t\t\t\t\t\tProduct_2.VariantGroup, ",
                "\t\t\t\t\t\tProduct_2.Color, ",
                "\t\t\t\t\t\tProduct_2.Size, ",
                "\t\t\t\t\t\tProduct_2.Large, ",
                "\t\t\t\t\t\tProduct_2.StationYear, ",
                "\t\t\t\t\t\tProduct_2.UPCCode, ",
                "\t\t\t\t\t\tProduct_2.PC13,",
                "\t\t\t\t\t\tProduct_2.CapWamCod,",
                "\t\t\t\t\t\tProduct_2.CapWamDes,",
                "\t\t\t\t\t\tProduct_2.ConsGrp2Cod,",
                "\t\t\t\t\t\tProduct_2.ConsGrp2Des,",
                "\t\t\t\t\t\tProduct_2.ConsTrgCod,",
                "\t\t\t\t\t\tProduct_2.ConsTrgDes,",
                "\t\t\t\t\t\tProduct_2.FitRefCod,",
                "\t\t\t\t\t\tProduct_2.FitRefDes,",
                "\t\t\t\t\t\tProduct_2.GlFitPlat,",
                "\t\t\t\t\t\tProduct_2.ProdLineCod,",
                "\t\t\t\t\t\tProduct_2.ProdLineDes,",
                "\t\t\t\t\t\tProduct_2.ProdName,",
                "\t\t\t\t\t\tProduct_2.ProgCod,",
                "\t\t\t\t\t\tProduct_2.ProgDes,",
                "\t\t\t\t\t\tProduct_2.SubClass,",
                "\t\t\t\t\t\tProduct_2.SustCod,",
                "\t\t\t\t\t\tProduct_2.SustDes,",
                "\t\t\t\t\t\tProduct_2.TecnoCod,",
                "\t\t\t\t\t\tProduct_2.TecnoDes,",
                "\t\t\t\t\t\tProduct_2.TierCod,",
                "\t\t\t\t\t\tProduct_2.TierDes,",
                "\t\t\t\t\t\tProduct_2.ClassCod,",
                "\t\t\t\t\t\tProduct_2.ClassDes",
                "\t\t\t\tFROM\tsales.Product AS Product_2 INNER JOIN sales.StoreCoverage ",
                "\t\t\t\t\t\tON Product_2.ProductId = StoreCoverage.ProductId",
                "\t\t\t\tUNION",
                "                          ",
                "\t\t\t\tSELECT\tDISTINCT ",
                "\t\t\t\t\t\tProduct_2.ProductId, ",
                "\t\t\t\t\t\tProduct_2.VariantCode, ",
                "\t\t\t\t\t\tProduct_2.Variant, ",
                "\t\t\t\t\t\tProduct_2.VariantGroup, ",
                "\t\t\t\t\t\tProduct_2.Color, ",
                "\t\t\t\t\t\tProduct_2.Size, ",
                "\t\t\t\t\t\tProduct_2.Large, ",
                "\t\t\t\t\t\tProduct_2.StationYear, ",
                "\t\t\t\t\t\tProduct_2.UPCCode, ",
                "\t\t\t\t\t\tProduct_2.PC13,",
                "\t\t\t\t\t\tProduct_2.CapWamCod,",
                "\t\t\t\t\t\tProduct_2.CapWamDes,",
                "\t\t\t\t\t\tProduct_2.ConsGrp2Cod,",
                "\t\t\t\t\t\tProduct_2.ConsGrp2Des,",
                "\t\t\t\t\t\tProduct_2.ConsTrgCod,",
                "\t\t\t\t\t\tProduct_2.ConsTrgDes,",
                "\t\t\t\t\t\tProduct_2.FitRefCod,",
                "\t\t\t\t\t\tProduct_2.FitRefDes,",
                "\t\t\t\t\t\tProduct_2.GlFitPlat,",
                "\t\t\t\t\t\tProduct_2.ProdLineCod,",
                "\t\t\t\t\t\tProduct_2.ProdLineDes,",
                "\t\t\t\t\t\tProduct_2.ProdName,",
                "\t\t\t\t\t\tProduct_2.ProgCod,",
                "\t\t\t\t\t\tProduct_2.ProgDes,",
                "\t\t\t\t\t\tProduct_2.SubClass,",
                "\t\t\t\t\t\tProduct_2.SustCod,",
                "\t\t\t\t\t\tProduct_2.SustDes,",
                "\t\t\t\t\t\tProduct_2.TecnoCod,",
                "\t\t\t\t\t\tProduct_2.TecnoDes,",
                "\t\t\t\t\t\tProduct_2.TierCod,",
                "\t\t\t\t\t\tProduct_2.TierDes,",
                "\t\t\t\t\t\tProduct_2.ClassCod,",
                "\t\t\t\t\t\tProduct_2.ClassDes",
                "\t\t\t\tFROM\tsales.Product AS Product_2 INNER JOIN  sales.SellOut ",
                "\t\t\t\t\t\tON Product_2.ProductId = SellOut.ProductId",
                ") AS Product"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT\tDISTINCT ",
                  "\t\tProductId, ",
                  "\t\tVariantCode, ",
                  "\t\tVariant, ",
                  "\t\tVariantGroup, ",
                  "\t\tColor, ",
                  "\t\tCASE\tWHEN len(rtrim(ltrim(Size))) < 3 THEN\tCASE\tWHEN len(rtrim(ltrim(Size))) = 1 THEN '00' + CONVERT(varchar, rtrim(ltrim(Size))) ",
                  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN len(rtrim(ltrim(Size))) = 2 THEN '0' + CONVERT(varchar, rtrim(ltrim(Size))) ",
                  "\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND ",
                  "\t\t\t\tELSE rtrim(ltrim(Size)) ",
                  "\t\tEND AS Size, ",
                  "\t\tLarge, ",
                  "\t\tStationYear, ",
                  "\t\tUPCCode, ",
                  "\t\tCASE\tWHEN ltrim(rtrim(isnull(PC13, ''))) = '' THEN NULL ",
                  "\t\t\t\tELSE PC13 ",
                  "\t\tEND AS PC13,",
                  "\t\tCase When CapWamCod is Null Then '0' Else CapWamCod End CapWamCod,",
                  "\t\tCase When CapWamDes is Null Then 'S-I' Else CapWamDes End CapWamDes,",
                  "\t\tCase When ConsGrp2Cod is Null Then '0' Else  ConsGrp2Cod End ConsGrp2Cod,",
                  "\t\tCase When ConsGrp2Des is Null Then 'S-I' Else ConsGrp2Des End ConsGrp2Des,",
                  "\t\tCase When ConsTrgCod is Null Then '0' Else ConsTrgCod End ConsTrgCod,",
                  "\t\tCase When ConsTrgDes is Null Then 'S-I' Else ConsTrgDes End ConsTrgDes,",
                  "\t\tCase When FitRefCod is Null Then '0' Else FitRefCod End FitRefCod,",
                  "\t\tCase When FitRefDes is Null Then 'S-I' Else FitRefDes End FitRefDes,",
                  "\t\tGlFitPlat,",
                  "\t\tCase When ProdLineCod is Null Then '0' Else ProdLineCod End ProdLineCod,",
                  "\t\tCase When ProdLineDes is Null Then 'S-I' Else ProdLineDes End ProdLineDes,",
                  "\t\tProdName,",
                  "\t\tCase When ProgCod is Null Then '0' Else ProgCod End ProgCod,",
                  "\t\tCase When ProgDes is Null Then 'S-I' Else ProgDes End ProgDes,",
                  "\t\tSubClass,",
                  "\t\tCase When SustCod is Null Then '0' Else SustCod End SustCod,",
                  "\t\tCase When SustDes is Null Then 'S-I' Else SustDes End SustDes,",
                  "\t\tCase When TecnoCod is Null Then '0' Else TecnoCod End TecnoCod,",
                  "\t\tCase When TecnoDes is Null Then 'S-I' Else TecnoDes End TecnoDes,",
                  "\t\tCase When TierCod is Null Then '0' Else TierCod End TierCod,",
                  "\t\tCase When TierDes is Null Then 'S-I' Else TierDes End TierDes,",
                  "\t\tCase When ClassCod is Null Then '0' Else ClassCod End ClassCod,",
                  "\t\tCase When ClassDes is Null Then 'S-I' Else ClassDes End ClassDes",
                  "FROM   (",
                  "\t\t\t\tSELECT\tDISTINCT ",
                  "\t\t\t\t\t\tProduct_4.ProductId, ",
                  "\t\t\t\t\t\tProduct_4.VariantCode, ",
                  "\t\t\t\t\t\tProduct_4.Variant, ",
                  "\t\t\t\t\t\tProduct_4.VariantGroup, ",
                  "\t\t\t\t\t\tProduct_4.Color, ",
                  "\t\t\t\t\t\tProduct_4.Size, ",
                  "\t\t\t\t\t\tProduct_4.Large, ",
                  "\t\t\t\t\t\tProduct_4.StationYear, ",
                  "\t\t\t\t\t\tProduct_4.UPCCode, ",
                  "\t\t\t\t\t\tProduct_4.PC13,",
                  "\t\t\t\t\t\tProduct_4.CapWamCod,",
                  "\t\t\t\t\t\tProduct_4.CapWamDes,",
                  "\t\t\t\t\t\tProduct_4.ConsGrp2Cod,",
                  "\t\t\t\t\t\tProduct_4.ConsGrp2Des,",
                  "\t\t\t\t\t\tProduct_4.ConsTrgCod,",
                  "\t\t\t\t\t\tProduct_4.ConsTrgDes,",
                  "\t\t\t\t\t\tProduct_4.FitRefCod,",
                  "\t\t\t\t\t\tProduct_4.FitRefDes,",
                  "\t\t\t\t\t\tProduct_4.GlFitPlat,",
                  "\t\t\t\t\t\tProduct_4.ProdLineCod,",
                  "\t\t\t\t\t\tProduct_4.ProdLineDes,",
                  "\t\t\t\t\t\tProduct_4.ProdName,",
                  "\t\t\t\t\t\tProduct_4.ProgCod,",
                  "\t\t\t\t\t\tProduct_4.ProgDes,",
                  "\t\t\t\t\t\tProduct_4.SubClass,",
                  "\t\t\t\t\t\tProduct_4.SustCod,",
                  "\t\t\t\t\t\tProduct_4.SustDes,",
                  "\t\t\t\t\t\tProduct_4.TecnoCod,",
                  "\t\t\t\t\t\tProduct_4.TecnoDes,",
                  "\t\t\t\t\t\tProduct_4.TierCod,",
                  "\t\t\t\t\t\tProduct_4.TierDes,",
                  "\t\t\t\t\t\tProduct_4.ClassCod,",
                  "\t\t\t\t\t\tProduct_4.ClassDes",
                  "\t\t\t\tFROM\tsales.Product AS Product_4 INNER JOIN sales.Sale ",
                  "\t\t\t\t\t\tON Product_4.ProductId = Sale.ProductId",
                  "\t\t\t\tUNION",
                  "                 ",
                  "\t\t\t\tSELECT\tDISTINCT ",
                  "\t\t\t\t\t\tProduct_1.ProductId, ",
                  "\t\t\t\t\t\tProduct_1.VariantCode, ",
                  "\t\t\t\t\t\tProduct_1.Variant, ",
                  "\t\t\t\t\t\tProduct_1.VariantGroup, ",
                  "\t\t\t\t\t\tProduct_1.Color, ",
                  "\t\t\t\t\t\tProduct_1.Size, ",
                  "\t\t\t\t\t\tProduct_1.Large, ",
                  "\t\t\t\t\t\tProduct_1.StationYear, ",
                  "\t\t\t\t\t\tProduct_1.UPCCode, ",
                  "\t\t\t\t\t\tProduct_1.PC13,",
                  "\t\t\t\t\t\tProduct_1.CapWamCod,",
                  "\t\t\t\t\t\tProduct_1.CapWamDes,",
                  "\t\t\t\t\t\tProduct_1.ConsGrp2Cod,",
                  "\t\t\t\t\t\tProduct_1.ConsGrp2Des,",
                  "\t\t\t\t\t\tProduct_1.ConsTrgCod,",
                  "\t\t\t\t\t\tProduct_1.ConsTrgDes,",
                  "\t\t\t\t\t\tProduct_1.FitRefCod,",
                  "\t\t\t\t\t\tProduct_1.FitRefDes,",
                  "\t\t\t\t\t\tProduct_1.GlFitPlat,",
                  "\t\t\t\t\t\tProduct_1.ProdLineCod,",
                  "\t\t\t\t\t\tProduct_1.ProdLineDes,",
                  "\t\t\t\t\t\tProduct_1.ProdName,",
                  "\t\t\t\t\t\tProduct_1.ProgCod,",
                  "\t\t\t\t\t\tProduct_1.ProgDes,",
                  "\t\t\t\t\t\tProduct_1.SubClass,",
                  "\t\t\t\t\t\tProduct_1.SustCod,",
                  "\t\t\t\t\t\tProduct_1.SustDes,",
                  "\t\t\t\t\t\tProduct_1.TecnoCod,",
                  "\t\t\t\t\t\tProduct_1.TecnoDes,",
                  "\t\t\t\t\t\tProduct_1.TierCod,",
                  "\t\t\t\t\t\tProduct_1.TierDes,",
                  "\t\t\t\t\t\tProduct_1.ClassCod,",
                  "\t\t\t\t\t\tProduct_1.ClassDes",
                  "\t\t\t\tFROM\tsales.Product AS Product_1",
                  "                WHERE\t(VariantCode = '0000')",
                  "                   ",
                  "\t\t\t\tUNION",
                  "             ",
                  "\t\t\t\tSELECT\tDISTINCT ",
                  "\t\t\t\t\t\tProduct_3.ProductId, ",
                  "\t\t\t\t\t\tProduct_3.VariantCode, ",
                  "\t\t\t\t\t\tProduct_3.Variant, ",
                  "\t\t\t\t\t\tProduct_3.VariantGroup, ",
                  "\t\t\t\t\t\tProduct_3.Color, ",
                  "\t\t\t\t\t\tProduct_3.Size, ",
                  "\t\t\t\t\t\tProduct_3.Large, ",
                  "\t\t\t\t\t\tProduct_3.StationYear, ",
                  "\t\t\t\t\t\tProduct_3.UPCCode, ",
                  "\t\t\t\t\t\tProduct_3.PC13,",
                  "\t\t\t\t\t\tProduct_3.CapWamCod,",
                  "\t\t\t\t\t\tProduct_3.CapWamDes,",
                  "\t\t\t\t\t\tProduct_3.ConsGrp2Cod,",
                  "\t\t\t\t\t\tProduct_3.ConsGrp2Des,",
                  "\t\t\t\t\t\tProduct_3.ConsTrgCod,",
                  "\t\t\t\t\t\tProduct_3.ConsTrgDes,",
                  "\t\t\t\t\t\tProduct_3.FitRefCod,",
                  "\t\t\t\t\t\tProduct_3.FitRefDes,",
                  "\t\t\t\t\t\tProduct_3.GlFitPlat,",
                  "\t\t\t\t\t\tProduct_3.ProdLineCod,",
                  "\t\t\t\t\t\tProduct_3.ProdLineDes,",
                  "\t\t\t\t\t\tProduct_3.ProdName,",
                  "\t\t\t\t\t\tProduct_3.ProgCod,",
                  "\t\t\t\t\t\tProduct_3.ProgDes,",
                  "\t\t\t\t\t\tProduct_3.SubClass,",
                  "\t\t\t\t\t\tProduct_3.SustCod,",
                  "\t\t\t\t\t\tProduct_3.SustDes,",
                  "\t\t\t\t\t\tProduct_3.TecnoCod,",
                  "\t\t\t\t\t\tProduct_3.TecnoDes,",
                  "\t\t\t\t\t\tProduct_3.TierCod,",
                  "\t\t\t\t\t\tProduct_3.TierDes,",
                  "\t\t\t\t\t\tProduct_3.ClassCod,",
                  "\t\t\t\t\t\tProduct_3.ClassDes",
                  "                 FROM\tsales.Product AS Product_3 INNER JOIN sales.SaleABP ",
                  "\t\t\t\t\t\tON Product_3.ProductId = SaleABP.ProductId",
                  "                          ",
                  "\t\t\t\tUNION",
                  "                   ",
                  "\t\t\t\tSELECT\tDISTINCT ",
                  "\t\t\t\t\t\tProduct_2.ProductId, ",
                  "\t\t\t\t\t\tProduct_2.VariantCode, ",
                  "\t\t\t\t\t\tProduct_2.Variant, ",
                  "\t\t\t\t\t\tProduct_2.VariantGroup, ",
                  "\t\t\t\t\t\tProduct_2.Color, ",
                  "\t\t\t\t\t\tProduct_2.Size, ",
                  "\t\t\t\t\t\tProduct_2.Large, ",
                  "\t\t\t\t\t\tProduct_2.StationYear, ",
                  "\t\t\t\t\t\tProduct_2.UPCCode, ",
                  "\t\t\t\t\t\tProduct_2.PC13,",
                  "\t\t\t\t\t\tProduct_2.CapWamCod,",
                  "\t\t\t\t\t\tProduct_2.CapWamDes,",
                  "\t\t\t\t\t\tProduct_2.ConsGrp2Cod,",
                  "\t\t\t\t\t\tProduct_2.ConsGrp2Des,",
                  "\t\t\t\t\t\tProduct_2.ConsTrgCod,",
                  "\t\t\t\t\t\tProduct_2.ConsTrgDes,",
                  "\t\t\t\t\t\tProduct_2.FitRefCod,",
                  "\t\t\t\t\t\tProduct_2.FitRefDes,",
                  "\t\t\t\t\t\tProduct_2.GlFitPlat,",
                  "\t\t\t\t\t\tProduct_2.ProdLineCod,",
                  "\t\t\t\t\t\tProduct_2.ProdLineDes,",
                  "\t\t\t\t\t\tProduct_2.ProdName,",
                  "\t\t\t\t\t\tProduct_2.ProgCod,",
                  "\t\t\t\t\t\tProduct_2.ProgDes,",
                  "\t\t\t\t\t\tProduct_2.SubClass,",
                  "\t\t\t\t\t\tProduct_2.SustCod,",
                  "\t\t\t\t\t\tProduct_2.SustDes,",
                  "\t\t\t\t\t\tProduct_2.TecnoCod,",
                  "\t\t\t\t\t\tProduct_2.TecnoDes,",
                  "\t\t\t\t\t\tProduct_2.TierCod,",
                  "\t\t\t\t\t\tProduct_2.TierDes,",
                  "\t\t\t\t\t\tProduct_2.ClassCod,",
                  "\t\t\t\t\t\tProduct_2.ClassDes",
                  "\t\t\t\tFROM\tsales.Product AS Product_2 INNER JOIN sales.StoreCoverage ",
                  "\t\t\t\t\t\tON Product_2.ProductId = StoreCoverage.ProductId",
                  "\t\t\t\tUNION",
                  "                          ",
                  "\t\t\t\tSELECT\tDISTINCT ",
                  "\t\t\t\t\t\tProduct_2.ProductId, ",
                  "\t\t\t\t\t\tProduct_2.VariantCode, ",
                  "\t\t\t\t\t\tProduct_2.Variant, ",
                  "\t\t\t\t\t\tProduct_2.VariantGroup, ",
                  "\t\t\t\t\t\tProduct_2.Color, ",
                  "\t\t\t\t\t\tProduct_2.Size, ",
                  "\t\t\t\t\t\tProduct_2.Large, ",
                  "\t\t\t\t\t\tProduct_2.StationYear, ",
                  "\t\t\t\t\t\tProduct_2.UPCCode, ",
                  "\t\t\t\t\t\tProduct_2.PC13,",
                  "\t\t\t\t\t\tProduct_2.CapWamCod,",
                  "\t\t\t\t\t\tProduct_2.CapWamDes,",
                  "\t\t\t\t\t\tProduct_2.ConsGrp2Cod,",
                  "\t\t\t\t\t\tProduct_2.ConsGrp2Des,",
                  "\t\t\t\t\t\tProduct_2.ConsTrgCod,",
                  "\t\t\t\t\t\tProduct_2.ConsTrgDes,",
                  "\t\t\t\t\t\tProduct_2.FitRefCod,",
                  "\t\t\t\t\t\tProduct_2.FitRefDes,",
                  "\t\t\t\t\t\tProduct_2.GlFitPlat,",
                  "\t\t\t\t\t\tProduct_2.ProdLineCod,",
                  "\t\t\t\t\t\tProduct_2.ProdLineDes,",
                  "\t\t\t\t\t\tProduct_2.ProdName,",
                  "\t\t\t\t\t\tProduct_2.ProgCod,",
                  "\t\t\t\t\t\tProduct_2.ProgDes,",
                  "\t\t\t\t\t\tProduct_2.SubClass,",
                  "\t\t\t\t\t\tProduct_2.SustCod,",
                  "\t\t\t\t\t\tProduct_2.SustDes,",
                  "\t\t\t\t\t\tProduct_2.TecnoCod,",
                  "\t\t\t\t\t\tProduct_2.TecnoDes,",
                  "\t\t\t\t\t\tProduct_2.TierCod,",
                  "\t\t\t\t\t\tProduct_2.TierDes,",
                  "\t\t\t\t\t\tProduct_2.ClassCod,",
                  "\t\t\t\t\t\tProduct_2.ClassDes",
                  "\t\t\t\tFROM\tsales.Product AS Product_2 INNER JOIN  sales.SellOut ",
                  "\t\t\t\t\t\tON Product_2.ProductId = SellOut.ProductId",
                  ") AS Product</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT\tDISTINCT ",
              "\t\tProductId, ",
              "\t\tVariantCode, ",
              "\t\tVariant, ",
              "\t\tVariantGroup, ",
              "\t\tColor, ",
              "\t\tCASE\tWHEN len(rtrim(ltrim(Size))) < 3 THEN\tCASE\tWHEN len(rtrim(ltrim(Size))) = 1 THEN '00' + CONVERT(varchar, rtrim(ltrim(Size))) ",
              "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN len(rtrim(ltrim(Size))) = 2 THEN '0' + CONVERT(varchar, rtrim(ltrim(Size))) ",
              "\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND ",
              "\t\t\t\tELSE rtrim(ltrim(Size)) ",
              "\t\tEND AS Size, ",
              "\t\tLarge, ",
              "\t\tStationYear, ",
              "\t\tUPCCode, ",
              "\t\tCASE\tWHEN ltrim(rtrim(isnull(PC13, ''))) = '' THEN NULL ",
              "\t\t\t\tELSE PC13 ",
              "\t\tEND AS PC13,",
              "\t\tCase When CapWamCod is Null Then '0' Else CapWamCod End CapWamCod,",
              "\t\tCase When CapWamDes is Null Then 'S-I' Else CapWamDes End CapWamDes,",
              "\t\tCase When ConsGrp2Cod is Null Then '0' Else  ConsGrp2Cod End ConsGrp2Cod,",
              "\t\tCase When ConsGrp2Des is Null Then 'S-I' Else ConsGrp2Des End ConsGrp2Des,",
              "\t\tCase When ConsTrgCod is Null Then '0' Else ConsTrgCod End ConsTrgCod,",
              "\t\tCase When ConsTrgDes is Null Then 'S-I' Else ConsTrgDes End ConsTrgDes,",
              "\t\tCase When FitRefCod is Null Then '0' Else FitRefCod End FitRefCod,",
              "\t\tCase When FitRefDes is Null Then 'S-I' Else FitRefDes End FitRefDes,",
              "\t\tGlFitPlat,",
              "\t\tCase When ProdLineCod is Null Then '0' Else ProdLineCod End ProdLineCod,",
              "\t\tCase When ProdLineDes is Null Then 'S-I' Else ProdLineDes End ProdLineDes,",
              "\t\tProdName,",
              "\t\tCase When ProgCod is Null Then '0' Else ProgCod End ProgCod,",
              "\t\tCase When ProgDes is Null Then 'S-I' Else ProgDes End ProgDes,",
              "\t\tSubClass,",
              "\t\tCase When SustCod is Null Then '0' Else SustCod End SustCod,",
              "\t\tCase When SustDes is Null Then 'S-I' Else SustDes End SustDes,",
              "\t\tCase When TecnoCod is Null Then '0' Else TecnoCod End TecnoCod,",
              "\t\tCase When TecnoDes is Null Then 'S-I' Else TecnoDes End TecnoDes,",
              "\t\tCase When TierCod is Null Then '0' Else TierCod End TierCod,",
              "\t\tCase When TierDes is Null Then 'S-I' Else TierDes End TierDes,",
              "\t\tCase When ClassCod is Null Then '0' Else ClassCod End ClassCod,",
              "\t\tCase When ClassDes is Null Then 'S-I' Else ClassDes End ClassDes",
              "FROM   (",
              "\t\t\t\tSELECT\tDISTINCT ",
              "\t\t\t\t\t\tProduct_4.ProductId, ",
              "\t\t\t\t\t\tProduct_4.VariantCode, ",
              "\t\t\t\t\t\tProduct_4.Variant, ",
              "\t\t\t\t\t\tProduct_4.VariantGroup, ",
              "\t\t\t\t\t\tProduct_4.Color, ",
              "\t\t\t\t\t\tProduct_4.Size, ",
              "\t\t\t\t\t\tProduct_4.Large, ",
              "\t\t\t\t\t\tProduct_4.StationYear, ",
              "\t\t\t\t\t\tProduct_4.UPCCode, ",
              "\t\t\t\t\t\tProduct_4.PC13,",
              "\t\t\t\t\t\tProduct_4.CapWamCod,",
              "\t\t\t\t\t\tProduct_4.CapWamDes,",
              "\t\t\t\t\t\tProduct_4.ConsGrp2Cod,",
              "\t\t\t\t\t\tProduct_4.ConsGrp2Des,",
              "\t\t\t\t\t\tProduct_4.ConsTrgCod,",
              "\t\t\t\t\t\tProduct_4.ConsTrgDes,",
              "\t\t\t\t\t\tProduct_4.FitRefCod,",
              "\t\t\t\t\t\tProduct_4.FitRefDes,",
              "\t\t\t\t\t\tProduct_4.GlFitPlat,",
              "\t\t\t\t\t\tProduct_4.ProdLineCod,",
              "\t\t\t\t\t\tProduct_4.ProdLineDes,",
              "\t\t\t\t\t\tProduct_4.ProdName,",
              "\t\t\t\t\t\tProduct_4.ProgCod,",
              "\t\t\t\t\t\tProduct_4.ProgDes,",
              "\t\t\t\t\t\tProduct_4.SubClass,",
              "\t\t\t\t\t\tProduct_4.SustCod,",
              "\t\t\t\t\t\tProduct_4.SustDes,",
              "\t\t\t\t\t\tProduct_4.TecnoCod,",
              "\t\t\t\t\t\tProduct_4.TecnoDes,",
              "\t\t\t\t\t\tProduct_4.TierCod,",
              "\t\t\t\t\t\tProduct_4.TierDes,",
              "\t\t\t\t\t\tProduct_4.ClassCod,",
              "\t\t\t\t\t\tProduct_4.ClassDes",
              "\t\t\t\tFROM\tsales.Product AS Product_4 INNER JOIN sales.Sale ",
              "\t\t\t\t\t\tON Product_4.ProductId = Sale.ProductId",
              "\t\t\t\tUNION",
              "                 ",
              "\t\t\t\tSELECT\tDISTINCT ",
              "\t\t\t\t\t\tProduct_1.ProductId, ",
              "\t\t\t\t\t\tProduct_1.VariantCode, ",
              "\t\t\t\t\t\tProduct_1.Variant, ",
              "\t\t\t\t\t\tProduct_1.VariantGroup, ",
              "\t\t\t\t\t\tProduct_1.Color, ",
              "\t\t\t\t\t\tProduct_1.Size, ",
              "\t\t\t\t\t\tProduct_1.Large, ",
              "\t\t\t\t\t\tProduct_1.StationYear, ",
              "\t\t\t\t\t\tProduct_1.UPCCode, ",
              "\t\t\t\t\t\tProduct_1.PC13,",
              "\t\t\t\t\t\tProduct_1.CapWamCod,",
              "\t\t\t\t\t\tProduct_1.CapWamDes,",
              "\t\t\t\t\t\tProduct_1.ConsGrp2Cod,",
              "\t\t\t\t\t\tProduct_1.ConsGrp2Des,",
              "\t\t\t\t\t\tProduct_1.ConsTrgCod,",
              "\t\t\t\t\t\tProduct_1.ConsTrgDes,",
              "\t\t\t\t\t\tProduct_1.FitRefCod,",
              "\t\t\t\t\t\tProduct_1.FitRefDes,",
              "\t\t\t\t\t\tProduct_1.GlFitPlat,",
              "\t\t\t\t\t\tProduct_1.ProdLineCod,",
              "\t\t\t\t\t\tProduct_1.ProdLineDes,",
              "\t\t\t\t\t\tProduct_1.ProdName,",
              "\t\t\t\t\t\tProduct_1.ProgCod,",
              "\t\t\t\t\t\tProduct_1.ProgDes,",
              "\t\t\t\t\t\tProduct_1.SubClass,",
              "\t\t\t\t\t\tProduct_1.SustCod,",
              "\t\t\t\t\t\tProduct_1.SustDes,",
              "\t\t\t\t\t\tProduct_1.TecnoCod,",
              "\t\t\t\t\t\tProduct_1.TecnoDes,",
              "\t\t\t\t\t\tProduct_1.TierCod,",
              "\t\t\t\t\t\tProduct_1.TierDes,",
              "\t\t\t\t\t\tProduct_1.ClassCod,",
              "\t\t\t\t\t\tProduct_1.ClassDes",
              "\t\t\t\tFROM\tsales.Product AS Product_1",
              "                WHERE\t(VariantCode = '0000')",
              "                   ",
              "\t\t\t\tUNION",
              "             ",
              "\t\t\t\tSELECT\tDISTINCT ",
              "\t\t\t\t\t\tProduct_3.ProductId, ",
              "\t\t\t\t\t\tProduct_3.VariantCode, ",
              "\t\t\t\t\t\tProduct_3.Variant, ",
              "\t\t\t\t\t\tProduct_3.VariantGroup, ",
              "\t\t\t\t\t\tProduct_3.Color, ",
              "\t\t\t\t\t\tProduct_3.Size, ",
              "\t\t\t\t\t\tProduct_3.Large, ",
              "\t\t\t\t\t\tProduct_3.StationYear, ",
              "\t\t\t\t\t\tProduct_3.UPCCode, ",
              "\t\t\t\t\t\tProduct_3.PC13,",
              "\t\t\t\t\t\tProduct_3.CapWamCod,",
              "\t\t\t\t\t\tProduct_3.CapWamDes,",
              "\t\t\t\t\t\tProduct_3.ConsGrp2Cod,",
              "\t\t\t\t\t\tProduct_3.ConsGrp2Des,",
              "\t\t\t\t\t\tProduct_3.ConsTrgCod,",
              "\t\t\t\t\t\tProduct_3.ConsTrgDes,",
              "\t\t\t\t\t\tProduct_3.FitRefCod,",
              "\t\t\t\t\t\tProduct_3.FitRefDes,",
              "\t\t\t\t\t\tProduct_3.GlFitPlat,",
              "\t\t\t\t\t\tProduct_3.ProdLineCod,",
              "\t\t\t\t\t\tProduct_3.ProdLineDes,",
              "\t\t\t\t\t\tProduct_3.ProdName,",
              "\t\t\t\t\t\tProduct_3.ProgCod,",
              "\t\t\t\t\t\tProduct_3.ProgDes,",
              "\t\t\t\t\t\tProduct_3.SubClass,",
              "\t\t\t\t\t\tProduct_3.SustCod,",
              "\t\t\t\t\t\tProduct_3.SustDes,",
              "\t\t\t\t\t\tProduct_3.TecnoCod,",
              "\t\t\t\t\t\tProduct_3.TecnoDes,",
              "\t\t\t\t\t\tProduct_3.TierCod,",
              "\t\t\t\t\t\tProduct_3.TierDes,",
              "\t\t\t\t\t\tProduct_3.ClassCod,",
              "\t\t\t\t\t\tProduct_3.ClassDes",
              "                 FROM\tsales.Product AS Product_3 INNER JOIN sales.SaleABP ",
              "\t\t\t\t\t\tON Product_3.ProductId = SaleABP.ProductId",
              "                          ",
              "\t\t\t\tUNION",
              "                   ",
              "\t\t\t\tSELECT\tDISTINCT ",
              "\t\t\t\t\t\tProduct_2.ProductId, ",
              "\t\t\t\t\t\tProduct_2.VariantCode, ",
              "\t\t\t\t\t\tProduct_2.Variant, ",
              "\t\t\t\t\t\tProduct_2.VariantGroup, ",
              "\t\t\t\t\t\tProduct_2.Color, ",
              "\t\t\t\t\t\tProduct_2.Size, ",
              "\t\t\t\t\t\tProduct_2.Large, ",
              "\t\t\t\t\t\tProduct_2.StationYear, ",
              "\t\t\t\t\t\tProduct_2.UPCCode, ",
              "\t\t\t\t\t\tProduct_2.PC13,",
              "\t\t\t\t\t\tProduct_2.CapWamCod,",
              "\t\t\t\t\t\tProduct_2.CapWamDes,",
              "\t\t\t\t\t\tProduct_2.ConsGrp2Cod,",
              "\t\t\t\t\t\tProduct_2.ConsGrp2Des,",
              "\t\t\t\t\t\tProduct_2.ConsTrgCod,",
              "\t\t\t\t\t\tProduct_2.ConsTrgDes,",
              "\t\t\t\t\t\tProduct_2.FitRefCod,",
              "\t\t\t\t\t\tProduct_2.FitRefDes,",
              "\t\t\t\t\t\tProduct_2.GlFitPlat,",
              "\t\t\t\t\t\tProduct_2.ProdLineCod,",
              "\t\t\t\t\t\tProduct_2.ProdLineDes,",
              "\t\t\t\t\t\tProduct_2.ProdName,",
              "\t\t\t\t\t\tProduct_2.ProgCod,",
              "\t\t\t\t\t\tProduct_2.ProgDes,",
              "\t\t\t\t\t\tProduct_2.SubClass,",
              "\t\t\t\t\t\tProduct_2.SustCod,",
              "\t\t\t\t\t\tProduct_2.SustDes,",
              "\t\t\t\t\t\tProduct_2.TecnoCod,",
              "\t\t\t\t\t\tProduct_2.TecnoDes,",
              "\t\t\t\t\t\tProduct_2.TierCod,",
              "\t\t\t\t\t\tProduct_2.TierDes,",
              "\t\t\t\t\t\tProduct_2.ClassCod,",
              "\t\t\t\t\t\tProduct_2.ClassDes",
              "\t\t\t\tFROM\tsales.Product AS Product_2 INNER JOIN sales.StoreCoverage ",
              "\t\t\t\t\t\tON Product_2.ProductId = StoreCoverage.ProductId",
              "\t\t\t\tUNION",
              "                          ",
              "\t\t\t\tSELECT\tDISTINCT ",
              "\t\t\t\t\t\tProduct_2.ProductId, ",
              "\t\t\t\t\t\tProduct_2.VariantCode, ",
              "\t\t\t\t\t\tProduct_2.Variant, ",
              "\t\t\t\t\t\tProduct_2.VariantGroup, ",
              "\t\t\t\t\t\tProduct_2.Color, ",
              "\t\t\t\t\t\tProduct_2.Size, ",
              "\t\t\t\t\t\tProduct_2.Large, ",
              "\t\t\t\t\t\tProduct_2.StationYear, ",
              "\t\t\t\t\t\tProduct_2.UPCCode, ",
              "\t\t\t\t\t\tProduct_2.PC13,",
              "\t\t\t\t\t\tProduct_2.CapWamCod,",
              "\t\t\t\t\t\tProduct_2.CapWamDes,",
              "\t\t\t\t\t\tProduct_2.ConsGrp2Cod,",
              "\t\t\t\t\t\tProduct_2.ConsGrp2Des,",
              "\t\t\t\t\t\tProduct_2.ConsTrgCod,",
              "\t\t\t\t\t\tProduct_2.ConsTrgDes,",
              "\t\t\t\t\t\tProduct_2.FitRefCod,",
              "\t\t\t\t\t\tProduct_2.FitRefDes,",
              "\t\t\t\t\t\tProduct_2.GlFitPlat,",
              "\t\t\t\t\t\tProduct_2.ProdLineCod,",
              "\t\t\t\t\t\tProduct_2.ProdLineDes,",
              "\t\t\t\t\t\tProduct_2.ProdName,",
              "\t\t\t\t\t\tProduct_2.ProgCod,",
              "\t\t\t\t\t\tProduct_2.ProgDes,",
              "\t\t\t\t\t\tProduct_2.SubClass,",
              "\t\t\t\t\t\tProduct_2.SustCod,",
              "\t\t\t\t\t\tProduct_2.SustDes,",
              "\t\t\t\t\t\tProduct_2.TecnoCod,",
              "\t\t\t\t\t\tProduct_2.TecnoDes,",
              "\t\t\t\t\t\tProduct_2.TierCod,",
              "\t\t\t\t\t\tProduct_2.TierDes,",
              "\t\t\t\t\t\tProduct_2.ClassCod,",
              "\t\t\t\t\t\tProduct_2.ClassDes",
              "\t\t\t\tFROM\tsales.Product AS Product_2 INNER JOIN  sales.SellOut ",
              "\t\t\t\t\t\tON Product_2.ProductId = SellOut.ProductId",
              ") AS Product"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "_Producto"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT\tDISTINCT ",
              "\t\tProductId, ",
              "\t\tVariantCode, ",
              "\t\tVariant, ",
              "\t\tVariantGroup, ",
              "\t\tColor, ",
              "\t\tCASE\tWHEN len(rtrim(ltrim(Size))) < 3 THEN\tCASE\tWHEN len(rtrim(ltrim(Size))) = 1 THEN '00' + CONVERT(varchar, rtrim(ltrim(Size))) ",
              "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN len(rtrim(ltrim(Size))) = 2 THEN '0' + CONVERT(varchar, rtrim(ltrim(Size))) ",
              "\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND ",
              "\t\t\t\tELSE rtrim(ltrim(Size)) ",
              "\t\tEND AS Size, ",
              "\t\tLarge, ",
              "\t\tStationYear, ",
              "\t\tUPCCode, ",
              "\t\tCASE\tWHEN ltrim(rtrim(isnull(PC13, ''))) = '' THEN NULL ",
              "\t\t\t\tELSE PC13 ",
              "\t\tEND AS PC13,",
              "\t\tCase When CapWamCod is Null Then '0' Else CapWamCod End CapWamCod,",
              "\t\tCase When CapWamDes is Null Then 'S-I' Else CapWamDes End CapWamDes,",
              "\t\tCase When ConsGrp2Cod is Null Then '0' Else  ConsGrp2Cod End ConsGrp2Cod,",
              "\t\tCase When ConsGrp2Des is Null Then 'S-I' Else ConsGrp2Des End ConsGrp2Des,",
              "\t\tCase When ConsTrgCod is Null Then '0' Else ConsTrgCod End ConsTrgCod,",
              "\t\tCase When ConsTrgDes is Null Then 'S-I' Else ConsTrgDes End ConsTrgDes,",
              "\t\tCase When FitRefCod is Null Then '0' Else FitRefCod End FitRefCod,",
              "\t\tCase When FitRefDes is Null Then 'S-I' Else FitRefDes End FitRefDes,",
              "\t\tGlFitPlat,",
              "\t\tCase When ProdLineCod is Null Then '0' Else ProdLineCod End ProdLineCod,",
              "\t\tCase When ProdLineDes is Null Then 'S-I' Else ProdLineDes End ProdLineDes,",
              "\t\tProdName,",
              "\t\tCase When ProgCod is Null Then '0' Else ProgCod End ProgCod,",
              "\t\tCase When ProgDes is Null Then 'S-I' Else ProgDes End ProgDes,",
              "\t\tSubClass,",
              "\t\tCase When SustCod is Null Then '0' Else SustCod End SustCod,",
              "\t\tCase When SustDes is Null Then 'S-I' Else SustDes End SustDes,",
              "\t\tCase When TecnoCod is Null Then '0' Else TecnoCod End TecnoCod,",
              "\t\tCase When TecnoDes is Null Then 'S-I' Else TecnoDes End TecnoDes,",
              "\t\tCase When TierCod is Null Then '0' Else TierCod End TierCod,",
              "\t\tCase When TierDes is Null Then 'S-I' Else TierDes End TierDes,",
              "\t\tCase When ClassCod is Null Then '0' Else ClassCod End ClassCod,",
              "\t\tCase When ClassDes is Null Then 'S-I' Else ClassDes End ClassDes",
              "FROM   (",
              "\t\t\t\tSELECT\tDISTINCT ",
              "\t\t\t\t\t\tProduct_4.ProductId, ",
              "\t\t\t\t\t\tProduct_4.VariantCode, ",
              "\t\t\t\t\t\tProduct_4.Variant, ",
              "\t\t\t\t\t\tProduct_4.VariantGroup, ",
              "\t\t\t\t\t\tProduct_4.Color, ",
              "\t\t\t\t\t\tProduct_4.Size, ",
              "\t\t\t\t\t\tProduct_4.Large, ",
              "\t\t\t\t\t\tProduct_4.StationYear, ",
              "\t\t\t\t\t\tProduct_4.UPCCode, ",
              "\t\t\t\t\t\tProduct_4.PC13,",
              "\t\t\t\t\t\tProduct_4.CapWamCod,",
              "\t\t\t\t\t\tProduct_4.CapWamDes,",
              "\t\t\t\t\t\tProduct_4.ConsGrp2Cod,",
              "\t\t\t\t\t\tProduct_4.ConsGrp2Des,",
              "\t\t\t\t\t\tProduct_4.ConsTrgCod,",
              "\t\t\t\t\t\tProduct_4.ConsTrgDes,",
              "\t\t\t\t\t\tProduct_4.FitRefCod,",
              "\t\t\t\t\t\tProduct_4.FitRefDes,",
              "\t\t\t\t\t\tProduct_4.GlFitPlat,",
              "\t\t\t\t\t\tProduct_4.ProdLineCod,",
              "\t\t\t\t\t\tProduct_4.ProdLineDes,",
              "\t\t\t\t\t\tProduct_4.ProdName,",
              "\t\t\t\t\t\tProduct_4.ProgCod,",
              "\t\t\t\t\t\tProduct_4.ProgDes,",
              "\t\t\t\t\t\tProduct_4.SubClass,",
              "\t\t\t\t\t\tProduct_4.SustCod,",
              "\t\t\t\t\t\tProduct_4.SustDes,",
              "\t\t\t\t\t\tProduct_4.TecnoCod,",
              "\t\t\t\t\t\tProduct_4.TecnoDes,",
              "\t\t\t\t\t\tProduct_4.TierCod,",
              "\t\t\t\t\t\tProduct_4.TierDes,",
              "\t\t\t\t\t\tProduct_4.ClassCod,",
              "\t\t\t\t\t\tProduct_4.ClassDes",
              "\t\t\t\tFROM\tsales.Product AS Product_4 INNER JOIN sales.Sale ",
              "\t\t\t\t\t\tON Product_4.ProductId = Sale.ProductId",
              "\t\t\t\tUNION",
              "                 ",
              "\t\t\t\tSELECT\tDISTINCT ",
              "\t\t\t\t\t\tProduct_1.ProductId, ",
              "\t\t\t\t\t\tProduct_1.VariantCode, ",
              "\t\t\t\t\t\tProduct_1.Variant, ",
              "\t\t\t\t\t\tProduct_1.VariantGroup, ",
              "\t\t\t\t\t\tProduct_1.Color, ",
              "\t\t\t\t\t\tProduct_1.Size, ",
              "\t\t\t\t\t\tProduct_1.Large, ",
              "\t\t\t\t\t\tProduct_1.StationYear, ",
              "\t\t\t\t\t\tProduct_1.UPCCode, ",
              "\t\t\t\t\t\tProduct_1.PC13,",
              "\t\t\t\t\t\tProduct_1.CapWamCod,",
              "\t\t\t\t\t\tProduct_1.CapWamDes,",
              "\t\t\t\t\t\tProduct_1.ConsGrp2Cod,",
              "\t\t\t\t\t\tProduct_1.ConsGrp2Des,",
              "\t\t\t\t\t\tProduct_1.ConsTrgCod,",
              "\t\t\t\t\t\tProduct_1.ConsTrgDes,",
              "\t\t\t\t\t\tProduct_1.FitRefCod,",
              "\t\t\t\t\t\tProduct_1.FitRefDes,",
              "\t\t\t\t\t\tProduct_1.GlFitPlat,",
              "\t\t\t\t\t\tProduct_1.ProdLineCod,",
              "\t\t\t\t\t\tProduct_1.ProdLineDes,",
              "\t\t\t\t\t\tProduct_1.ProdName,",
              "\t\t\t\t\t\tProduct_1.ProgCod,",
              "\t\t\t\t\t\tProduct_1.ProgDes,",
              "\t\t\t\t\t\tProduct_1.SubClass,",
              "\t\t\t\t\t\tProduct_1.SustCod,",
              "\t\t\t\t\t\tProduct_1.SustDes,",
              "\t\t\t\t\t\tProduct_1.TecnoCod,",
              "\t\t\t\t\t\tProduct_1.TecnoDes,",
              "\t\t\t\t\t\tProduct_1.TierCod,",
              "\t\t\t\t\t\tProduct_1.TierDes,",
              "\t\t\t\t\t\tProduct_1.ClassCod,",
              "\t\t\t\t\t\tProduct_1.ClassDes",
              "\t\t\t\tFROM\tsales.Product AS Product_1",
              "                WHERE\t(VariantCode = '0000')",
              "                   ",
              "\t\t\t\tUNION",
              "             ",
              "\t\t\t\tSELECT\tDISTINCT ",
              "\t\t\t\t\t\tProduct_3.ProductId, ",
              "\t\t\t\t\t\tProduct_3.VariantCode, ",
              "\t\t\t\t\t\tProduct_3.Variant, ",
              "\t\t\t\t\t\tProduct_3.VariantGroup, ",
              "\t\t\t\t\t\tProduct_3.Color, ",
              "\t\t\t\t\t\tProduct_3.Size, ",
              "\t\t\t\t\t\tProduct_3.Large, ",
              "\t\t\t\t\t\tProduct_3.StationYear, ",
              "\t\t\t\t\t\tProduct_3.UPCCode, ",
              "\t\t\t\t\t\tProduct_3.PC13,",
              "\t\t\t\t\t\tProduct_3.CapWamCod,",
              "\t\t\t\t\t\tProduct_3.CapWamDes,",
              "\t\t\t\t\t\tProduct_3.ConsGrp2Cod,",
              "\t\t\t\t\t\tProduct_3.ConsGrp2Des,",
              "\t\t\t\t\t\tProduct_3.ConsTrgCod,",
              "\t\t\t\t\t\tProduct_3.ConsTrgDes,",
              "\t\t\t\t\t\tProduct_3.FitRefCod,",
              "\t\t\t\t\t\tProduct_3.FitRefDes,",
              "\t\t\t\t\t\tProduct_3.GlFitPlat,",
              "\t\t\t\t\t\tProduct_3.ProdLineCod,",
              "\t\t\t\t\t\tProduct_3.ProdLineDes,",
              "\t\t\t\t\t\tProduct_3.ProdName,",
              "\t\t\t\t\t\tProduct_3.ProgCod,",
              "\t\t\t\t\t\tProduct_3.ProgDes,",
              "\t\t\t\t\t\tProduct_3.SubClass,",
              "\t\t\t\t\t\tProduct_3.SustCod,",
              "\t\t\t\t\t\tProduct_3.SustDes,",
              "\t\t\t\t\t\tProduct_3.TecnoCod,",
              "\t\t\t\t\t\tProduct_3.TecnoDes,",
              "\t\t\t\t\t\tProduct_3.TierCod,",
              "\t\t\t\t\t\tProduct_3.TierDes,",
              "\t\t\t\t\t\tProduct_3.ClassCod,",
              "\t\t\t\t\t\tProduct_3.ClassDes",
              "                 FROM\tsales.Product AS Product_3 INNER JOIN sales.SaleABP ",
              "\t\t\t\t\t\tON Product_3.ProductId = SaleABP.ProductId",
              "                          ",
              "\t\t\t\tUNION",
              "                   ",
              "\t\t\t\tSELECT\tDISTINCT ",
              "\t\t\t\t\t\tProduct_2.ProductId, ",
              "\t\t\t\t\t\tProduct_2.VariantCode, ",
              "\t\t\t\t\t\tProduct_2.Variant, ",
              "\t\t\t\t\t\tProduct_2.VariantGroup, ",
              "\t\t\t\t\t\tProduct_2.Color, ",
              "\t\t\t\t\t\tProduct_2.Size, ",
              "\t\t\t\t\t\tProduct_2.Large, ",
              "\t\t\t\t\t\tProduct_2.StationYear, ",
              "\t\t\t\t\t\tProduct_2.UPCCode, ",
              "\t\t\t\t\t\tProduct_2.PC13,",
              "\t\t\t\t\t\tProduct_2.CapWamCod,",
              "\t\t\t\t\t\tProduct_2.CapWamDes,",
              "\t\t\t\t\t\tProduct_2.ConsGrp2Cod,",
              "\t\t\t\t\t\tProduct_2.ConsGrp2Des,",
              "\t\t\t\t\t\tProduct_2.ConsTrgCod,",
              "\t\t\t\t\t\tProduct_2.ConsTrgDes,",
              "\t\t\t\t\t\tProduct_2.FitRefCod,",
              "\t\t\t\t\t\tProduct_2.FitRefDes,",
              "\t\t\t\t\t\tProduct_2.GlFitPlat,",
              "\t\t\t\t\t\tProduct_2.ProdLineCod,",
              "\t\t\t\t\t\tProduct_2.ProdLineDes,",
              "\t\t\t\t\t\tProduct_2.ProdName,",
              "\t\t\t\t\t\tProduct_2.ProgCod,",
              "\t\t\t\t\t\tProduct_2.ProgDes,",
              "\t\t\t\t\t\tProduct_2.SubClass,",
              "\t\t\t\t\t\tProduct_2.SustCod,",
              "\t\t\t\t\t\tProduct_2.SustDes,",
              "\t\t\t\t\t\tProduct_2.TecnoCod,",
              "\t\t\t\t\t\tProduct_2.TecnoDes,",
              "\t\t\t\t\t\tProduct_2.TierCod,",
              "\t\t\t\t\t\tProduct_2.TierDes,",
              "\t\t\t\t\t\tProduct_2.ClassCod,",
              "\t\t\t\t\t\tProduct_2.ClassDes",
              "\t\t\t\tFROM\tsales.Product AS Product_2 INNER JOIN sales.StoreCoverage ",
              "\t\t\t\t\t\tON Product_2.ProductId = StoreCoverage.ProductId",
              "\t\t\t\tUNION",
              "                          ",
              "\t\t\t\tSELECT\tDISTINCT ",
              "\t\t\t\t\t\tProduct_2.ProductId, ",
              "\t\t\t\t\t\tProduct_2.VariantCode, ",
              "\t\t\t\t\t\tProduct_2.Variant, ",
              "\t\t\t\t\t\tProduct_2.VariantGroup, ",
              "\t\t\t\t\t\tProduct_2.Color, ",
              "\t\t\t\t\t\tProduct_2.Size, ",
              "\t\t\t\t\t\tProduct_2.Large, ",
              "\t\t\t\t\t\tProduct_2.StationYear, ",
              "\t\t\t\t\t\tProduct_2.UPCCode, ",
              "\t\t\t\t\t\tProduct_2.PC13,",
              "\t\t\t\t\t\tProduct_2.CapWamCod,",
              "\t\t\t\t\t\tProduct_2.CapWamDes,",
              "\t\t\t\t\t\tProduct_2.ConsGrp2Cod,",
              "\t\t\t\t\t\tProduct_2.ConsGrp2Des,",
              "\t\t\t\t\t\tProduct_2.ConsTrgCod,",
              "\t\t\t\t\t\tProduct_2.ConsTrgDes,",
              "\t\t\t\t\t\tProduct_2.FitRefCod,",
              "\t\t\t\t\t\tProduct_2.FitRefDes,",
              "\t\t\t\t\t\tProduct_2.GlFitPlat,",
              "\t\t\t\t\t\tProduct_2.ProdLineCod,",
              "\t\t\t\t\t\tProduct_2.ProdLineDes,",
              "\t\t\t\t\t\tProduct_2.ProdName,",
              "\t\t\t\t\t\tProduct_2.ProgCod,",
              "\t\t\t\t\t\tProduct_2.ProgDes,",
              "\t\t\t\t\t\tProduct_2.SubClass,",
              "\t\t\t\t\t\tProduct_2.SustCod,",
              "\t\t\t\t\t\tProduct_2.SustDes,",
              "\t\t\t\t\t\tProduct_2.TecnoCod,",
              "\t\t\t\t\t\tProduct_2.TecnoDes,",
              "\t\t\t\t\t\tProduct_2.TierCod,",
              "\t\t\t\t\t\tProduct_2.TierDes,",
              "\t\t\t\t\t\tProduct_2.ClassCod,",
              "\t\t\t\t\t\tProduct_2.ClassDes",
              "\t\t\t\tFROM\tsales.Product AS Product_2 INNER JOIN  sales.SellOut ",
              "\t\t\t\t\t\tON Product_2.ProductId = SellOut.ProductId",
              ") AS Product</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Prenda",
        "columns": [
          {
            "name": "Clothing Piece Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "ClothingPieceId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PrendaOld",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Prenda",
            "dataType": "string",
            "sourceColumn": "LongDescription",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Codigo Prenda",
            "dataType": "string",
            "sourceColumn": "ClothingPieceCode",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "_Prenda",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ",
                "   ClothingPieceId, ",
                "   ISNULL(LongDescription, Description) AS Description, ",
                "   LongDescription, ",
                "   ClothingPieceCode",
                "FROM sales.ClothingPiece"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "   ClothingPieceId, ",
                  "   ISNULL(LongDescription, Description) AS Description, ",
                  "   LongDescription, ",
                  "   ClothingPieceCode",
                  "FROM sales.ClothingPiece</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "   ClothingPieceId, ",
              "   ISNULL(LongDescription, Description) AS Description, ",
              "   LongDescription, ",
              "   ClothingPieceCode",
              "FROM sales.ClothingPiece"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "_Prenda"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "   ClothingPieceId, ",
              "   ISNULL(LongDescription, Description) AS Description, ",
              "   LongDescription, ",
              "   ClothingPieceCode",
              "FROM sales.ClothingPiece</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Org Venta",
        "columns": [
          {
            "name": "Sale Organisation Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "SaleOrganisationId",
            "sourceProviderType": "int"
          },
          {
            "name": "Org Venta",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Codigo Org Venta",
            "dataType": "string",
            "sourceColumn": "SaleOrganisationCode",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Pais",
            "dataType": "string",
            "sourceColumn": "Country",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "_Org Venta",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[SaleOrganisation].* FROM [sales].[SaleOrganisation] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[SaleOrganisation].* FROM [sales].[SaleOrganisation] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "SaleOrganisation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Tipo Venta",
        "columns": [
          {
            "name": "Sale Type Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "SaleTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "Tipo Venta",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "SaleType",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[SaleType].* FROM [sales].[SaleType] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[SaleType].* FROM [sales].[SaleType] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "SaleType"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Tipo Documento",
        "columns": [
          {
            "name": "Document Type Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "DocumentTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "Tipo Documento",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Tipo Documento Code",
            "dataType": "string",
            "sourceColumn": "DocumentCode",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "_Tipo Documento",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[DocumentType].* FROM [sales].[DocumentType] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[DocumentType].* FROM [sales].[DocumentType] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DocumentType"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Producto Generico",
        "columns": [
          {
            "name": "Product Generic Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "ProductGenericId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Descripcion Generico",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Codigo Generico",
            "dataType": "string",
            "sourceColumn": "GenericCode",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "_Producto Generico",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT",
                "    ProductGenericId, ",
                "    ISNULL(Description, GenericCode) AS Description, ",
                "    case when LEN(GenericCode) >= 10 then RIGHT(GenericCode,10) ",
                "\telse REPLICATE('0',10-LEN(GenericCode))+GenericCode end AS GenericCode",
                "",
                "FROM  sales.ProductGeneric"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
                  "    ProductGenericId, ",
                  "    ISNULL(Description, GenericCode) AS Description, ",
                  "    case when LEN(GenericCode) >= 10 then RIGHT(GenericCode,10) ",
                  "\telse REPLICATE('0',10-LEN(GenericCode))+GenericCode end AS GenericCode",
                  "",
                  "FROM  sales.ProductGeneric</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT",
              "    ProductGenericId, ",
              "    ISNULL(Description, GenericCode) AS Description, ",
              "    case when LEN(GenericCode) >= 10 then RIGHT(GenericCode,10) ",
              "\telse REPLICATE('0',10-LEN(GenericCode))+GenericCode end AS GenericCode",
              "",
              "FROM  sales.ProductGeneric"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "_Producto Generico"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
              "    ProductGenericId, ",
              "    ISNULL(Description, GenericCode) AS Description, ",
              "    case when LEN(GenericCode) >= 10 then RIGHT(GenericCode,10) ",
              "\telse REPLICATE('0',10-LEN(GenericCode))+GenericCode end AS GenericCode",
              "",
              "FROM  sales.ProductGeneric</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Producto Grado Moda",
        "columns": [
          {
            "name": "Product Fashion Grade Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "ProductFashionGradeId",
            "sourceProviderType": "int"
          },
          {
            "name": "Grado Moda",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Codigo Grado Moda",
            "dataType": "string",
            "sourceColumn": "FashionGradeCode",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "_Producto Grado Moda",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[ProductFashionGrade].* FROM [sales].[ProductFashionGrade] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[ProductFashionGrade].* FROM [sales].[ProductFashionGrade] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ProductFashionGrade"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Producto Temporada Moda",
        "columns": [
          {
            "name": "Product Fashion Season Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "ProductFashionSeasonId",
            "sourceProviderType": "int"
          },
          {
            "name": "Temporada Moda",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Codigo Temporada Moda",
            "dataType": "string",
            "sourceColumn": "FashionSeasonCode",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "_Producto Temporada Moda",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[ProductFashionSeason].* FROM [sales].[ProductFashionSeason] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[ProductFashionSeason].* FROM [sales].[ProductFashionSeason] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ProductFashionSeason"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Hora",
        "columns": [
          {
            "name": "Hour Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "HourId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Hora",
            "dataType": "dateTime",
            "sourceColumn": "InitialHour",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "EndHour",
            "dataType": "dateTime",
            "sourceColumn": "EndHour",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Hour Range15 Minutes",
            "dataType": "string",
            "sourceColumn": "HourRange15Minutes",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Hour Range30 Minutes",
            "dataType": "string",
            "sourceColumn": "HourRange30Minutes",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Hour Range60 Minutes",
            "dataType": "string",
            "sourceColumn": "HourRange60Minutes",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "_Hora",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ",
                "   HourId, ",
                "   InitialHour, ",
                "   EndHour, ",
                "   HourRange AS HourRange15Minutes, ",
                "   HourRange30Minutes, ",
                "   HourRange60Minutes",
                "FROM sales.Hour"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "   HourId, ",
                  "   InitialHour, ",
                  "   EndHour, ",
                  "   HourRange AS HourRange15Minutes, ",
                  "   HourRange30Minutes, ",
                  "   HourRange60Minutes",
                  "FROM sales.Hour</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "   HourId, ",
              "   InitialHour, ",
              "   EndHour, ",
              "   HourRange AS HourRange15Minutes, ",
              "   HourRange30Minutes, ",
              "   HourRange60Minutes",
              "FROM sales.Hour"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "_Hora"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "   HourId, ",
              "   InitialHour, ",
              "   EndHour, ",
              "   HourRange AS HourRange15Minutes, ",
              "   HourRange30Minutes, ",
              "   HourRange60Minutes",
              "FROM sales.Hour</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Almacen",
        "columns": [
          {
            "name": "Warehouse Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "WarehouseId",
            "sourceProviderType": "int"
          },
          {
            "name": "Almacen",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "varchar"
          },
          {
            "name": "OrderBy",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "OrderBy",
            "sourceProviderType": "int"
          },
          {
            "name": "Descripcion Larga",
            "dataType": "string",
            "sourceColumn": "LongDescription",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "_Almacen",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[Warehouse].* FROM [sales].[Warehouse] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[Warehouse].* FROM [sales].[Warehouse] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Warehouse"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Periodo",
        "columns": [
          {
            "name": "Time Period Id",
            "dataType": "dateTime",
            "isKey": true,
            "sourceColumn": "TimePeriodId",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date",
            "formatString": "dd-MM-yyyy",
            "sourceProviderType": "VarChar",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"13322\" Group=\"ShortDate\" FormatString=\"dd-MM-yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Date Name",
            "dataType": "string",
            "sourceColumn": "DateName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Day Name Of Week",
            "dataType": "string",
            "sourceColumn": "DayNameOfWeek",
            "sortByColumn": "Day Number Of Week",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Day Of Month",
            "dataType": "int64",
            "sourceColumn": "DayOfMonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Day Number Of Week",
            "dataType": "int64",
            "sourceColumn": "DayNumberOfWeek",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Day Of Month Name",
            "dataType": "string",
            "sourceColumn": "DayOfMonthName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Month",
            "dataType": "int64",
            "sourceColumn": "Month",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Previous Half Year Date",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PreviousHalfYearDate",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Previous Half Year Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PreviousHalfYearName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Previous Month Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "PreviousMonthDate",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Previous Month Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PreviousMonthName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Previous Trimester Date",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PreviousTrimesterDate",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Previous Trimester Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PreviousTrimesterName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Previous Week Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "PreviousWeekDate",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Previous Week Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PreviousWeekName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Previous Year",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PreviousYear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Previous Year Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "PreviousYearDate",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Previous Year Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PreviousYearName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Quarter",
            "dataType": "int64",
            "sourceColumn": "Quarter",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Trimester",
            "dataType": "int64",
            "sourceColumn": "Trimester",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Week",
            "dataType": "int64",
            "sourceColumn": "Week",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "Year",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Date_YMD",
            "dataType": "string",
            "sourceColumn": "Date_YMD"
          },
          {
            "name": "Fiscal_Date_Full",
            "dataType": "string",
            "sourceColumn": "Fiscal_Date_Full"
          },
          {
            "name": "Fiscal_Date_Name",
            "dataType": "string",
            "sourceColumn": "Fiscal_Date_Name"
          },
          {
            "name": "Fiscal_Day_Name",
            "dataType": "string",
            "sourceColumn": "Fiscal_Day_Name"
          },
          {
            "name": "Fiscal_Half_Year",
            "dataType": "string",
            "sourceColumn": "Fiscal_Half_Year"
          },
          {
            "name": "Fiscal_Month_Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal_Month_Date",
            "formatString": "General Date"
          },
          {
            "name": "Fiscal_Month_Name",
            "dataType": "string",
            "sourceColumn": "Fiscal_Month_Name",
            "sortByColumn": "Fiscal_Month_Date"
          },
          {
            "name": "Fiscal_Quarter_Name",
            "dataType": "string",
            "sourceColumn": "Fiscal_Quarter_Name"
          },
          {
            "name": "Fiscal_Week_Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal_Week_Date"
          },
          {
            "name": "Fiscal_Week_Name",
            "dataType": "string",
            "sourceColumn": "Fiscal_Week_Name"
          },
          {
            "name": "Fiscal_Year",
            "dataType": "string",
            "sourceColumn": "Fiscal_Year"
          },
          {
            "name": "Half_Year",
            "dataType": "int64",
            "sourceColumn": "Half_Year"
          },
          {
            "name": "Half_Year_Date",
            "dataType": "string",
            "sourceColumn": "Half_Year_Date"
          },
          {
            "name": "Half_Year_Name",
            "dataType": "string",
            "sourceColumn": "Half_Year_Name"
          },
          {
            "name": "Month_Date",
            "dataType": "dateTime",
            "sourceColumn": "Month_Date"
          },
          {
            "name": "Month_Date_YMD",
            "dataType": "dateTime",
            "sourceColumn": "Month_Date_YMD"
          },
          {
            "name": "Month_Name",
            "dataType": "string",
            "sourceColumn": "Month_Name"
          },
          {
            "name": "Month_Name_YMD_RPT",
            "dataType": "string",
            "sourceColumn": "Month_Name_YMD_RPT"
          },
          {
            "name": "Previous Date",
            "dataType": "dateTime",
            "sourceColumn": "Previous_Date"
          },
          {
            "name": "Quarter_Date",
            "dataType": "string",
            "sourceColumn": "Quarter_Date"
          },
          {
            "name": "Quarter_Name",
            "dataType": "string",
            "sourceColumn": "Quarter_Name"
          },
          {
            "name": "Trimester_Date",
            "dataType": "string",
            "sourceColumn": "Trimester_Date"
          },
          {
            "name": "Trimester_Name",
            "dataType": "string",
            "sourceColumn": "Trimester_Name"
          },
          {
            "name": "Week_Date",
            "dataType": "dateTime",
            "sourceColumn": "Week_Date"
          },
          {
            "name": "Week_Name",
            "dataType": "string",
            "sourceColumn": "Week_Name"
          },
          {
            "name": "Week_Range",
            "dataType": "string",
            "sourceColumn": "Week_Range"
          },
          {
            "name": "Year_Date",
            "dataType": "dateTime",
            "sourceColumn": "Year_Date"
          },
          {
            "name": "Year_Date_YMD",
            "dataType": "dateTime",
            "sourceColumn": "Year_Date_YMD"
          },
          {
            "name": "Year_Name",
            "dataType": "string",
            "sourceColumn": "Year_Name"
          },
          {
            "name": "Year_Name_YMD_RPT",
            "dataType": "string",
            "sourceColumn": "Year_Name_YMD_RPT"
          },
          {
            "name": "InicioMesFical",
            "dataType": "dateTime",
            "sourceColumn": "InicioMesFical"
          },
          {
            "name": "Ant1",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Ant1"
          },
          {
            "name": "Ant2",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Ant2"
          },
          {
            "name": "w_Ant1",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "w_Ant1"
          },
          {
            "name": "InicioQuarterFiscal",
            "dataType": "dateTime",
            "sourceColumn": "InicioQuarterFiscal"
          },
          {
            "name": "q_ant1",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "q_ant1"
          },
          {
            "name": "InicioAnoFiscal",
            "dataType": "dateTime",
            "sourceColumn": "InicioAnoFiscal"
          },
          {
            "name": "y_ant1",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "y_ant1"
          },
          {
            "name": "FechaIniWeekAnt1",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt1"
          },
          {
            "name": "FechaFinWeekAnt1",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt1"
          },
          {
            "name": "FechaIniWeekAnt2",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt2"
          },
          {
            "name": "FechaFinWeekAnt2",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt2"
          },
          {
            "name": "FechaIniWeekAnt3",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt3"
          },
          {
            "name": "FechaFinWeekAnt3",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt3"
          },
          {
            "name": "FechaIniWeekAnt4",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt4"
          },
          {
            "name": "FechaFinWeekAnt4",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt4"
          },
          {
            "name": "FechaIniWeekAnt5",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt5"
          },
          {
            "name": "FechaFinWeekAnt5",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt5"
          },
          {
            "name": "FechaIniWeekAnt6",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt6"
          },
          {
            "name": "FechaFinWeekAnt6",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt6"
          },
          {
            "name": "FechaIniWeekAnt7",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt7"
          },
          {
            "name": "FechaFinWeekAnt7",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt7"
          },
          {
            "name": "FechaIniWeekAnt8",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt8"
          },
          {
            "name": "FechaFinWeekAnt8",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt8"
          },
          {
            "name": "FechaIniWeekAnt9",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt9"
          },
          {
            "name": "FechaFinWeekAnt9",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt9"
          },
          {
            "name": "FechaIniWeekAnt10",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt10"
          },
          {
            "name": "FechaFinWeekAnt10",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt10"
          },
          {
            "name": "FechaIniWeekAnt11",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt11"
          },
          {
            "name": "FechaFinWeekAnt11",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt11"
          },
          {
            "name": "FechaIniWeekAnt12",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaIniWeekAnt12"
          },
          {
            "name": "FechaFinWeekAnt12",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FechaFinWeekAnt12"
          }
        ],
        "partitions": [
          {
            "name": "_Periodo",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT        ",
                "TimePeriodId, ",
                "Date, ",
                "DateName, ",
                "Date as Date_YMD,",
                "SUBSTRING(DateName, 1, CHARINDEX(',', DateName) - 1) AS DayNameOfWeek, ",
                "DayOfMonth, ",
                "CASE WHEN DATEPART(dw, Date) = 1 THEN 8 ELSE DATEPART(dw, Date) ",
                "END - 1 AS DayNumberOfWeek, ",
                "DayOfMonthName, ",
                "DateName as Fiscal_Date_Full,",
                "Date as Fiscal_Date_Name,",
                "SUBSTRING(DateName, 1, CHARINDEX(',', DateName) - 1) AS Fiscal_Day_Name,",
                "FiscalHalfYear as Fiscal_Half_Year, ",
                "FiscalMonthDate as Fiscal_Month_Date, ",
                "FiscalMonthName as Fiscal_Month_Name, ",
                "FiscalQuarterName as Fiscal_Quarter_Name, ",
                "FiscalWeekDate as Fiscal_Week_Date,",
                "--FiscalWeekName as Fiscal_Week_Name, ",
                "",
                "case when CHARINDEX(',',fiscalweekname) = 7 then CONCAT(substring(fiscalweekname, 1,5),'0',(substring(fiscalweekname, 6,1))) else substring(fiscalweekname, 1,7) end as Fiscal_Week_Name, ",
                "",
                "FiscalYear as Fiscal_Year, ",
                "",
                "",
                "",
                "",
                "HalfYear as Half_Year , ",
                "HalfYearDate as Half_Year_Date, ",
                "HalfYearName as Half_Year_Name, ",
                "",
                "Month, ",
                "MonthDate as Month_Date, ",
                "MonthDate as Month_Date_YMD,",
                "MonthName as Month_Name, ",
                "MonthName as Month_Name_YMD_RPT,",
                "",
                "PreviousDate as Previous_Date, ",
                "Quarter, ",
                "QuarterDate as Quarter_Date, ",
                "QuarterName as Quarter_Name, ",
                "",
                "Trimester, ",
                "TrimesterDate as Trimester_Date,  ",
                "TrimesterName as Trimester_Name, ",
                "",
                "Week, ",
                "WeekDate as Week_Date, ",
                "WeekName as Week_Name, ",
                "WeekRange as Week_Range, ",
                "",
                "Year, ",
                "YearDate as Year_Date, ",
                "YearDate as Year_Date_YMD, ",
                "YearName as Year_Name, ",
                "YearName as Year_Name_YMD_RPT,",
                "",
                "PreviousHalfYearDate, ",
                "PreviousHalfYearName, ",
                "PreviousMonthDate, ",
                "PreviousMonthName, ",
                "PreviousTrimesterDate, ",
                "PreviousTrimesterName, ",
                "PreviousWeekDate, ",
                "PreviousWeekName, ",
                "PreviousYear, ",
                "PreviousYearDate, ",
                "PreviousYearName,",
                "InicioMesFical,",
                "ant1,",
                "ant2 ,",
                "w_ant1,",
                "InicioQuarterFiscal,",
                "q_ant1,",
                "InicioAnoFiscal,",
                "y_ant1,",
                "dateadd(day, -7, FiscalWeekDate)  as FechaIniWeekAnt1,",
                "dateadd(day, -1, FiscalWeekDate)  as FechaFinWeekAnt1,",
                "dateadd(day, -14, FiscalWeekDate) as FechaIniWeekAnt2,",
                "dateadd(day, -8, FiscalWeekDate)  as FechaFinWeekAnt2,",
                "dateadd(day, -21, FiscalWeekDate) as FechaIniWeekAnt3,",
                "dateadd(day, -15, FiscalWeekDate) as FechaFinWeekAnt3,",
                "dateadd(day, -28, FiscalWeekDate) as FechaIniWeekAnt4,",
                "dateadd(day, -22, FiscalWeekDate) as FechaFinWeekAnt4,",
                "dateadd(day, -35, FiscalWeekDate) as FechaIniWeekAnt5,",
                "dateadd(day, -29, FiscalWeekDate) as FechaFinWeekAnt5,",
                "dateadd(day, -42, FiscalWeekDate) as FechaIniWeekAnt6,",
                "dateadd(day, -36, FiscalWeekDate) as FechaFinWeekAnt6,",
                "dateadd(day, -49, FiscalWeekDate) as FechaIniWeekAnt7,",
                "dateadd(day, -43, FiscalWeekDate) as FechaFinWeekAnt7,",
                "",
                "dateadd(day, -56, FiscalWeekDate) as FechaIniWeekAnt8,",
                "dateadd(day, -50, FiscalWeekDate) as FechaFinWeekAnt8,",
                "dateadd(day, -63, FiscalWeekDate) as FechaIniWeekAnt9,",
                "dateadd(day, -57, FiscalWeekDate) as FechaFinWeekAnt9,",
                "dateadd(day, -70, FiscalWeekDate) as FechaIniWeekAnt10,",
                "dateadd(day, -64, FiscalWeekDate) as FechaFinWeekAnt10,",
                "dateadd(day, -77, FiscalWeekDate) as FechaIniWeekAnt11,",
                "dateadd(day, -71, FiscalWeekDate) as FechaFinWeekAnt11,",
                "dateadd(day, -84, FiscalWeekDate) as FechaIniWeekAnt12,",
                "dateadd(day, -78, FiscalWeekDate) as FechaFinWeekAnt12",
                "",
                "FROM            sales.TimePeriod",
                "WHERE        (TimePeriodId >= '20170101') AND (TimePeriodId <= Format(GETDATE(), 'yyyy-MM-dd'))",
                "order by TimePeriodid"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT        ",
                  "TimePeriodId, ",
                  "Date, ",
                  "DateName, ",
                  "Date as Date_YMD,",
                  "SUBSTRING(DateName, 1, CHARINDEX(',', DateName) - 1) AS DayNameOfWeek, ",
                  "DayOfMonth, ",
                  "CASE WHEN DATEPART(dw, Date) = 1 THEN 8 ELSE DATEPART(dw, Date) ",
                  "END - 1 AS DayNumberOfWeek, ",
                  "DayOfMonthName, ",
                  "DateName as Fiscal_Date_Full,",
                  "Date as Fiscal_Date_Name,",
                  "SUBSTRING(DateName, 1, CHARINDEX(',', DateName) - 1) AS Fiscal_Day_Name,",
                  "FiscalHalfYear as Fiscal_Half_Year, ",
                  "FiscalMonthDate as Fiscal_Month_Date, ",
                  "FiscalMonthName as Fiscal_Month_Name, ",
                  "FiscalQuarterName as Fiscal_Quarter_Name, ",
                  "FiscalWeekDate as Fiscal_Week_Date,",
                  "--FiscalWeekName as Fiscal_Week_Name, ",
                  "",
                  "case when CHARINDEX(',',fiscalweekname) = 7 then CONCAT(substring(fiscalweekname, 1,5),'0',(substring(fiscalweekname, 6,1))) else substring(fiscalweekname, 1,7) end as Fiscal_Week_Name, ",
                  "",
                  "FiscalYear as Fiscal_Year, ",
                  "",
                  "",
                  "",
                  "",
                  "HalfYear as Half_Year , ",
                  "HalfYearDate as Half_Year_Date, ",
                  "HalfYearName as Half_Year_Name, ",
                  "",
                  "Month, ",
                  "MonthDate as Month_Date, ",
                  "MonthDate as Month_Date_YMD,",
                  "MonthName as Month_Name, ",
                  "MonthName as Month_Name_YMD_RPT,",
                  "",
                  "PreviousDate as Previous_Date, ",
                  "Quarter, ",
                  "QuarterDate as Quarter_Date, ",
                  "QuarterName as Quarter_Name, ",
                  "",
                  "Trimester, ",
                  "TrimesterDate as Trimester_Date,  ",
                  "TrimesterName as Trimester_Name, ",
                  "",
                  "Week, ",
                  "WeekDate as Week_Date, ",
                  "WeekName as Week_Name, ",
                  "WeekRange as Week_Range, ",
                  "",
                  "Year, ",
                  "YearDate as Year_Date, ",
                  "YearDate as Year_Date_YMD, ",
                  "YearName as Year_Name, ",
                  "YearName as Year_Name_YMD_RPT,",
                  "",
                  "PreviousHalfYearDate, ",
                  "PreviousHalfYearName, ",
                  "PreviousMonthDate, ",
                  "PreviousMonthName, ",
                  "PreviousTrimesterDate, ",
                  "PreviousTrimesterName, ",
                  "PreviousWeekDate, ",
                  "PreviousWeekName, ",
                  "PreviousYear, ",
                  "PreviousYearDate, ",
                  "PreviousYearName,",
                  "InicioMesFical,",
                  "ant1,",
                  "ant2 ,",
                  "w_ant1,",
                  "InicioQuarterFiscal,",
                  "q_ant1,",
                  "InicioAnoFiscal,",
                  "y_ant1,",
                  "dateadd(day, -7, FiscalWeekDate)  as FechaIniWeekAnt1,",
                  "dateadd(day, -1, FiscalWeekDate)  as FechaFinWeekAnt1,",
                  "dateadd(day, -14, FiscalWeekDate) as FechaIniWeekAnt2,",
                  "dateadd(day, -8, FiscalWeekDate)  as FechaFinWeekAnt2,",
                  "dateadd(day, -21, FiscalWeekDate) as FechaIniWeekAnt3,",
                  "dateadd(day, -15, FiscalWeekDate) as FechaFinWeekAnt3,",
                  "dateadd(day, -28, FiscalWeekDate) as FechaIniWeekAnt4,",
                  "dateadd(day, -22, FiscalWeekDate) as FechaFinWeekAnt4,",
                  "dateadd(day, -35, FiscalWeekDate) as FechaIniWeekAnt5,",
                  "dateadd(day, -29, FiscalWeekDate) as FechaFinWeekAnt5,",
                  "dateadd(day, -42, FiscalWeekDate) as FechaIniWeekAnt6,",
                  "dateadd(day, -36, FiscalWeekDate) as FechaFinWeekAnt6,",
                  "dateadd(day, -49, FiscalWeekDate) as FechaIniWeekAnt7,",
                  "dateadd(day, -43, FiscalWeekDate) as FechaFinWeekAnt7,",
                  "",
                  "dateadd(day, -56, FiscalWeekDate) as FechaIniWeekAnt8,",
                  "dateadd(day, -50, FiscalWeekDate) as FechaFinWeekAnt8,",
                  "dateadd(day, -63, FiscalWeekDate) as FechaIniWeekAnt9,",
                  "dateadd(day, -57, FiscalWeekDate) as FechaFinWeekAnt9,",
                  "dateadd(day, -70, FiscalWeekDate) as FechaIniWeekAnt10,",
                  "dateadd(day, -64, FiscalWeekDate) as FechaFinWeekAnt10,",
                  "dateadd(day, -77, FiscalWeekDate) as FechaIniWeekAnt11,",
                  "dateadd(day, -71, FiscalWeekDate) as FechaFinWeekAnt11,",
                  "dateadd(day, -84, FiscalWeekDate) as FechaIniWeekAnt12,",
                  "dateadd(day, -78, FiscalWeekDate) as FechaFinWeekAnt12",
                  "",
                  "FROM            sales.TimePeriod",
                  "WHERE        (TimePeriodId >= '20170101') AND (TimePeriodId <= Format(GETDATE(), 'yyyy-MM-dd'))",
                  "order by TimePeriodid</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "Jerarquia Año Fiscal",
            "levels": [
              {
                "name": "Fiscal_Year",
                "ordinal": 0,
                "column": "Fiscal_Year"
              },
              {
                "name": "Fiscal_Quarter_Name",
                "ordinal": 1,
                "column": "Fiscal_Quarter_Name"
              },
              {
                "name": "Fiscal_Month_Name",
                "ordinal": 2,
                "column": "Fiscal_Month_Name"
              },
              {
                "name": "Fiscal_Week_Name",
                "ordinal": 3,
                "column": "Fiscal_Week_Name"
              },
              {
                "name": "Fiscal_Date_Name",
                "ordinal": 4,
                "column": "Fiscal_Date_Name"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT        ",
              "TimePeriodId, ",
              "Date, ",
              "DateName, ",
              "Date as Date_YMD,",
              "SUBSTRING(DateName, 1, CHARINDEX(',', DateName) - 1) AS DayNameOfWeek, ",
              "DayOfMonth, ",
              "CASE WHEN DATEPART(dw, Date) = 1 THEN 8 ELSE DATEPART(dw, Date) ",
              "END - 1 AS DayNumberOfWeek, ",
              "DayOfMonthName, ",
              "DateName as Fiscal_Date_Full,",
              "Date as Fiscal_Date_Name,",
              "SUBSTRING(DateName, 1, CHARINDEX(',', DateName) - 1) AS Fiscal_Day_Name,",
              "FiscalHalfYear as Fiscal_Half_Year, ",
              "FiscalMonthDate as Fiscal_Month_Date, ",
              "FiscalMonthName as Fiscal_Month_Name, ",
              "FiscalQuarterName as Fiscal_Quarter_Name, ",
              "FiscalWeekDate as Fiscal_Week_Date,",
              "--FiscalWeekName as Fiscal_Week_Name, ",
              "",
              "case when CHARINDEX(',',fiscalweekname) = 7 then CONCAT(substring(fiscalweekname, 1,5),'0',(substring(fiscalweekname, 6,1))) else substring(fiscalweekname, 1,7) end as Fiscal_Week_Name, ",
              "",
              "FiscalYear as Fiscal_Year, ",
              "",
              "",
              "",
              "",
              "HalfYear as Half_Year , ",
              "HalfYearDate as Half_Year_Date, ",
              "HalfYearName as Half_Year_Name, ",
              "",
              "Month, ",
              "MonthDate as Month_Date, ",
              "MonthDate as Month_Date_YMD,",
              "MonthName as Month_Name, ",
              "MonthName as Month_Name_YMD_RPT,",
              "",
              "PreviousDate as Previous_Date, ",
              "Quarter, ",
              "QuarterDate as Quarter_Date, ",
              "QuarterName as Quarter_Name, ",
              "",
              "Trimester, ",
              "TrimesterDate as Trimester_Date,  ",
              "TrimesterName as Trimester_Name, ",
              "",
              "Week, ",
              "WeekDate as Week_Date, ",
              "WeekName as Week_Name, ",
              "WeekRange as Week_Range, ",
              "",
              "Year, ",
              "YearDate as Year_Date, ",
              "YearDate as Year_Date_YMD, ",
              "YearName as Year_Name, ",
              "YearName as Year_Name_YMD_RPT,",
              "",
              "PreviousHalfYearDate, ",
              "PreviousHalfYearName, ",
              "PreviousMonthDate, ",
              "PreviousMonthName, ",
              "PreviousTrimesterDate, ",
              "PreviousTrimesterName, ",
              "PreviousWeekDate, ",
              "PreviousWeekName, ",
              "PreviousYear, ",
              "PreviousYearDate, ",
              "PreviousYearName,",
              "InicioMesFical,",
              "ant1,",
              "ant2 ,",
              "w_ant1,",
              "InicioQuarterFiscal,",
              "q_ant1,",
              "InicioAnoFiscal,",
              "y_ant1,",
              "dateadd(day, -7, FiscalWeekDate)  as FechaIniWeekAnt1,",
              "dateadd(day, -1, FiscalWeekDate)  as FechaFinWeekAnt1,",
              "dateadd(day, -14, FiscalWeekDate) as FechaIniWeekAnt2,",
              "dateadd(day, -8, FiscalWeekDate)  as FechaFinWeekAnt2,",
              "dateadd(day, -21, FiscalWeekDate) as FechaIniWeekAnt3,",
              "dateadd(day, -15, FiscalWeekDate) as FechaFinWeekAnt3,",
              "dateadd(day, -28, FiscalWeekDate) as FechaIniWeekAnt4,",
              "dateadd(day, -22, FiscalWeekDate) as FechaFinWeekAnt4,",
              "dateadd(day, -35, FiscalWeekDate) as FechaIniWeekAnt5,",
              "dateadd(day, -29, FiscalWeekDate) as FechaFinWeekAnt5,",
              "dateadd(day, -42, FiscalWeekDate) as FechaIniWeekAnt6,",
              "dateadd(day, -36, FiscalWeekDate) as FechaFinWeekAnt6,",
              "dateadd(day, -49, FiscalWeekDate) as FechaIniWeekAnt7,",
              "dateadd(day, -43, FiscalWeekDate) as FechaFinWeekAnt7,",
              "",
              "dateadd(day, -56, FiscalWeekDate) as FechaIniWeekAnt8,",
              "dateadd(day, -50, FiscalWeekDate) as FechaFinWeekAnt8,",
              "dateadd(day, -63, FiscalWeekDate) as FechaIniWeekAnt9,",
              "dateadd(day, -57, FiscalWeekDate) as FechaFinWeekAnt9,",
              "dateadd(day, -70, FiscalWeekDate) as FechaIniWeekAnt10,",
              "dateadd(day, -64, FiscalWeekDate) as FechaFinWeekAnt10,",
              "dateadd(day, -77, FiscalWeekDate) as FechaIniWeekAnt11,",
              "dateadd(day, -71, FiscalWeekDate) as FechaFinWeekAnt11,",
              "dateadd(day, -84, FiscalWeekDate) as FechaIniWeekAnt12,",
              "dateadd(day, -78, FiscalWeekDate) as FechaFinWeekAnt12",
              "",
              "FROM            sales.TimePeriod",
              "WHERE        (TimePeriodId >= '20170101') AND (TimePeriodId <= Format(GETDATE(), 'yyyy-MM-dd'))",
              "order by TimePeriodid"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "_Periodo"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT        ",
              "TimePeriodId, ",
              "Date, ",
              "DateName, ",
              "Date as Date_YMD,",
              "SUBSTRING(DateName, 1, CHARINDEX(',', DateName) - 1) AS DayNameOfWeek, ",
              "DayOfMonth, ",
              "CASE WHEN DATEPART(dw, Date) = 1 THEN 8 ELSE DATEPART(dw, Date) ",
              "END - 1 AS DayNumberOfWeek, ",
              "DayOfMonthName, ",
              "DateName as Fiscal_Date_Full,",
              "Date as Fiscal_Date_Name,",
              "SUBSTRING(DateName, 1, CHARINDEX(',', DateName) - 1) AS Fiscal_Day_Name,",
              "FiscalHalfYear as Fiscal_Half_Year, ",
              "FiscalMonthDate as Fiscal_Month_Date, ",
              "FiscalMonthName as Fiscal_Month_Name, ",
              "FiscalQuarterName as Fiscal_Quarter_Name, ",
              "FiscalWeekDate as Fiscal_Week_Date,",
              "--FiscalWeekName as Fiscal_Week_Name, ",
              "",
              "case when CHARINDEX(',',fiscalweekname) = 7 then CONCAT(substring(fiscalweekname, 1,5),'0',(substring(fiscalweekname, 6,1))) else substring(fiscalweekname, 1,7) end as Fiscal_Week_Name, ",
              "",
              "FiscalYear as Fiscal_Year, ",
              "",
              "",
              "",
              "",
              "HalfYear as Half_Year , ",
              "HalfYearDate as Half_Year_Date, ",
              "HalfYearName as Half_Year_Name, ",
              "",
              "Month, ",
              "MonthDate as Month_Date, ",
              "MonthDate as Month_Date_YMD,",
              "MonthName as Month_Name, ",
              "MonthName as Month_Name_YMD_RPT,",
              "",
              "PreviousDate as Previous_Date, ",
              "Quarter, ",
              "QuarterDate as Quarter_Date, ",
              "QuarterName as Quarter_Name, ",
              "",
              "Trimester, ",
              "TrimesterDate as Trimester_Date,  ",
              "TrimesterName as Trimester_Name, ",
              "",
              "Week, ",
              "WeekDate as Week_Date, ",
              "WeekName as Week_Name, ",
              "WeekRange as Week_Range, ",
              "",
              "Year, ",
              "YearDate as Year_Date, ",
              "YearDate as Year_Date_YMD, ",
              "YearName as Year_Name, ",
              "YearName as Year_Name_YMD_RPT,",
              "",
              "PreviousHalfYearDate, ",
              "PreviousHalfYearName, ",
              "PreviousMonthDate, ",
              "PreviousMonthName, ",
              "PreviousTrimesterDate, ",
              "PreviousTrimesterName, ",
              "PreviousWeekDate, ",
              "PreviousWeekName, ",
              "PreviousYear, ",
              "PreviousYearDate, ",
              "PreviousYearName,",
              "InicioMesFical,",
              "ant1,",
              "ant2 ,",
              "w_ant1,",
              "InicioQuarterFiscal,",
              "q_ant1,",
              "InicioAnoFiscal,",
              "y_ant1,",
              "dateadd(day, -7, FiscalWeekDate)  as FechaIniWeekAnt1,",
              "dateadd(day, -1, FiscalWeekDate)  as FechaFinWeekAnt1,",
              "dateadd(day, -14, FiscalWeekDate) as FechaIniWeekAnt2,",
              "dateadd(day, -8, FiscalWeekDate)  as FechaFinWeekAnt2,",
              "dateadd(day, -21, FiscalWeekDate) as FechaIniWeekAnt3,",
              "dateadd(day, -15, FiscalWeekDate) as FechaFinWeekAnt3,",
              "dateadd(day, -28, FiscalWeekDate) as FechaIniWeekAnt4,",
              "dateadd(day, -22, FiscalWeekDate) as FechaFinWeekAnt4,",
              "dateadd(day, -35, FiscalWeekDate) as FechaIniWeekAnt5,",
              "dateadd(day, -29, FiscalWeekDate) as FechaFinWeekAnt5,",
              "dateadd(day, -42, FiscalWeekDate) as FechaIniWeekAnt6,",
              "dateadd(day, -36, FiscalWeekDate) as FechaFinWeekAnt6,",
              "dateadd(day, -49, FiscalWeekDate) as FechaIniWeekAnt7,",
              "dateadd(day, -43, FiscalWeekDate) as FechaFinWeekAnt7,",
              "",
              "dateadd(day, -56, FiscalWeekDate) as FechaIniWeekAnt8,",
              "dateadd(day, -50, FiscalWeekDate) as FechaFinWeekAnt8,",
              "dateadd(day, -63, FiscalWeekDate) as FechaIniWeekAnt9,",
              "dateadd(day, -57, FiscalWeekDate) as FechaFinWeekAnt9,",
              "dateadd(day, -70, FiscalWeekDate) as FechaIniWeekAnt10,",
              "dateadd(day, -64, FiscalWeekDate) as FechaFinWeekAnt10,",
              "dateadd(day, -77, FiscalWeekDate) as FechaIniWeekAnt11,",
              "dateadd(day, -71, FiscalWeekDate) as FechaFinWeekAnt11,",
              "dateadd(day, -84, FiscalWeekDate) as FechaIniWeekAnt12,",
              "dateadd(day, -78, FiscalWeekDate) as FechaFinWeekAnt12",
              "",
              "FROM            sales.TimePeriod",
              "WHERE        (TimePeriodId >= '20170101') AND (TimePeriodId <= Format(GETDATE(), 'yyyy-MM-dd'))",
              "order by TimePeriodid</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Moneda",
        "columns": [
          {
            "name": "CurrencyId",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "CurrencyId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Moneda",
            "dataType": "string",
            "sourceColumn": "moneda",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Pais",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Pais",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "Moneda",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select Currency.CurrencyId,",
                "         Currency.ShortDescription as moneda,",
                "         SaleOrganisation.Country as Pais",
                "",
                "from Sales.Currency inner join Sales.SaleOrganisation",
                "          on Currency.SaleOrganisationId = SaleOrganisation.SaleOrganisationId"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select Currency.CurrencyId,",
                  "         Currency.ShortDescription as moneda,",
                  "         SaleOrganisation.Country as Pais",
                  "",
                  "from Sales.Currency inner join Sales.SaleOrganisation",
                  "          on Currency.SaleOrganisationId = SaleOrganisation.SaleOrganisationId</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select Currency.CurrencyId,",
              "         Currency.ShortDescription as moneda,",
              "         SaleOrganisation.Country as Pais",
              "",
              "from Sales.Currency inner join Sales.SaleOrganisation",
              "          on Currency.SaleOrganisationId = SaleOrganisation.SaleOrganisationId"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Moneda"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select Currency.CurrencyId,",
              "         Currency.ShortDescription as moneda,",
              "         SaleOrganisation.Country as Pais",
              "",
              "from Sales.Currency inner join Sales.SaleOrganisation",
              "          on Currency.SaleOrganisationId = SaleOrganisation.SaleOrganisationId</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Tienda",
        "columns": [
          {
            "name": "Agrupador Centro",
            "dataType": "string",
            "sourceColumn": "Agrupador_Centro",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Agrupador Tienda",
            "dataType": "string",
            "sourceColumn": "Agrupador_Tienda",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Canal",
            "dataType": "string",
            "sourceColumn": "Canal",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Codigo Tienda",
            "dataType": "string",
            "sourceColumn": "Codigo_Tienda",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "District",
            "dataType": "string",
            "sourceColumn": "District",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Estado Apertura",
            "dataType": "string",
            "sourceColumn": "Estado_Apertura",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "M2",
            "dataType": "int64",
            "sourceColumn": "M2",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Orden Tipo Tienda",
            "dataType": "string",
            "sourceColumn": "Orden_Tipo_Tienda",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Pais",
            "dataType": "string",
            "sourceColumn": "Pais",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "StoreId",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "StoreId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Tienda",
            "dataType": "string",
            "sourceColumn": "Tienda",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Tienda Nombre Corto",
            "dataType": "string",
            "sourceColumn": "Tienda_Nombre_Corto",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Tipo Tienda",
            "dataType": "string",
            "sourceColumn": "Tipo_Tienda",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Visible",
            "dataType": "int64",
            "sourceColumn": "Visible",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Latitud",
            "dataType": "double",
            "sourceColumn": "Latitud",
            "formatString": "0.0000000000"
          },
          {
            "name": "Longitud",
            "dataType": "double",
            "sourceColumn": "Longitud",
            "formatString": "0.0000000000"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status"
          },
          {
            "name": "RE_Status",
            "dataType": "string",
            "sourceColumn": "RE_Status"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region"
          },
          {
            "name": "Country_Group",
            "dataType": "string",
            "sourceColumn": "Country_Group"
          },
          {
            "name": "Centro_Costos",
            "dataType": "string",
            "sourceColumn": "Centro_Costos"
          },
          {
            "name": "State",
            "dataType": "string",
            "sourceColumn": "State"
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City"
          },
          {
            "name": "Mall_Name",
            "dataType": "string",
            "sourceColumn": "Mall_Name"
          },
          {
            "name": "Mall_Group",
            "dataType": "string",
            "sourceColumn": "Mall_Group"
          },
          {
            "name": "District_Manager",
            "dataType": "string",
            "sourceColumn": "District_Manager"
          },
          {
            "name": "Format",
            "dataType": "string",
            "sourceColumn": "Format"
          },
          {
            "name": "Business_Model",
            "dataType": "string",
            "sourceColumn": "Business_Model"
          },
          {
            "name": "Store_Brand",
            "dataType": "string",
            "sourceColumn": "Store_Brand"
          },
          {
            "name": "Partner_Name",
            "dataType": "string",
            "sourceColumn": "Partner_Name"
          },
          {
            "name": "Open_Date",
            "dataType": "dateTime",
            "sourceColumn": "Open_Date"
          },
          {
            "name": "Close_Date",
            "dataType": "dateTime",
            "sourceColumn": "Close_Date"
          },
          {
            "name": "Comp_Reset",
            "dataType": "dateTime",
            "sourceColumn": "Comp_Reset"
          },
          {
            "name": "Gross_Selling_Size",
            "dataType": "double",
            "sourceColumn": "Gross_Selling_Size",
            "formatString": "0.00"
          },
          {
            "name": "Stock_Capacity",
            "dataType": "double",
            "sourceColumn": "Stock_Capacity",
            "formatString": "0.00"
          },
          {
            "type": "calculated",
            "name": "Comp Store",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var fechainicio = max(Periodo[InicioMesFical])",
              "var fechaApertura = min(Tienda[Open_Date])",
              "",
              "return  IF( ISBLANK(Tienda[Open_Date]), \"Non comp\", IF( value(fechainicio) - value(Tienda[Open_Date]) >= 365, \"Comp\", \"Non comp\") )",
              ""
            ]
          }
        ],
        "partitions": [
          {
            "name": "Tienda",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "Agrupador_Centro,",
                " Agrupador_Tienda,",
                " Canal,",
                " Codigo_Tienda,",
                " District,",
                " Estado_Apertura,",
                " M2,",
                " Orden_Tipo_Tienda,",
                "Pais,",
                " StoreId,",
                "Tienda,",
                " Tienda_Nombre_Corto,",
                "Tipo_Tienda,",
                " Visible,",
                " Status,",
                " --Comp_Store,",
                " RE_Status,",
                "Region,",
                " Country_Group,",
                " Centro_Costos,",
                "State,",
                " City,",
                " Mall_Name,",
                " Mall_Group,",
                "District_Manager,",
                " Format,",
                "Business_Model,",
                "Store_Brand,",
                " Partner_Name,",
                " Open_Date,",
                " Close_Date,",
                " Comp_Reset,",
                " Gross_Selling_Size2 as Gross_Selling_Size,",
                " Stock_Capacity,",
                " Latitud2 as Latitud,",
                " Longitud2 as Longitud",
                "from ",
                "[sales].[DIM_TIENDAS]"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "Agrupador_Centro,",
                  " Agrupador_Tienda,",
                  " Canal,",
                  " Codigo_Tienda,",
                  " District,",
                  " Estado_Apertura,",
                  " M2,",
                  " Orden_Tipo_Tienda,",
                  "Pais,",
                  " StoreId,",
                  "Tienda,",
                  " Tienda_Nombre_Corto,",
                  "Tipo_Tienda,",
                  " Visible,",
                  " Status,",
                  " --Comp_Store,",
                  " RE_Status,",
                  "Region,",
                  " Country_Group,",
                  " Centro_Costos,",
                  "State,",
                  " City,",
                  " Mall_Name,",
                  " Mall_Group,",
                  "District_Manager,",
                  " Format,",
                  "Business_Model,",
                  "Store_Brand,",
                  " Partner_Name,",
                  " Open_Date,",
                  " Close_Date,",
                  " Comp_Reset,",
                  " Gross_Selling_Size2 as Gross_Selling_Size,",
                  " Stock_Capacity,",
                  " Latitud2 as Latitud,",
                  " Longitud2 as Longitud",
                  "from ",
                  "[sales].[DIM_TIENDAS]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Gross Size",
            "expression": [
              "",
              "\tsum(Tienda[Gross_Selling_Size])"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Comp Trx Trf",
            "expression": [
              " ",
              "\tIF(AND([Transacciones Actual] > 0, [Trafico Actual] > 0), \"Comp\", \"Non comp\" )",
              ""
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "Agrupador_Centro,",
              " Agrupador_Tienda,",
              " Canal,",
              " Codigo_Tienda,",
              " District,",
              " Estado_Apertura,",
              " M2,",
              " Orden_Tipo_Tienda,",
              "Pais,",
              " StoreId,",
              "Tienda,",
              " Tienda_Nombre_Corto,",
              "Tipo_Tienda,",
              " Visible,",
              " Status,",
              " --Comp_Store,",
              " RE_Status,",
              "Region,",
              " Country_Group,",
              " Centro_Costos,",
              "State,",
              " City,",
              " Mall_Name,",
              " Mall_Group,",
              "District_Manager,",
              " Format,",
              "Business_Model,",
              "Store_Brand,",
              " Partner_Name,",
              " Open_Date,",
              " Close_Date,",
              " Comp_Reset,",
              " Gross_Selling_Size2 as Gross_Selling_Size,",
              " Stock_Capacity,",
              " Latitud2 as Latitud,",
              " Longitud2 as Longitud",
              "from ",
              "[sales].[DIM_TIENDAS]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Tienda"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "Agrupador_Centro,",
              " Agrupador_Tienda,",
              " Canal,",
              " Codigo_Tienda,",
              " District,",
              " Estado_Apertura,",
              " M2,",
              " Orden_Tipo_Tienda,",
              "Pais,",
              " StoreId,",
              "Tienda,",
              " Tienda_Nombre_Corto,",
              "Tipo_Tienda,",
              " Visible,",
              " Status,",
              " --Comp_Store,",
              " RE_Status,",
              "Region,",
              " Country_Group,",
              " Centro_Costos,",
              "State,",
              " City,",
              " Mall_Name,",
              " Mall_Group,",
              "District_Manager,",
              " Format,",
              "Business_Model,",
              "Store_Brand,",
              " Partner_Name,",
              " Open_Date,",
              " Close_Date,",
              " Comp_Reset,",
              " Gross_Selling_Size2 as Gross_Selling_Size,",
              " Stock_Capacity,",
              " Latitud2 as Latitud,",
              " Longitud2 as Longitud",
              "from ",
              "[sales].[DIM_TIENDAS]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Tipo Cambio",
        "columns": [
          {
            "name": "TipoCambioId",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "TipoCambioId",
            "sourceProviderType": "int"
          },
          {
            "name": "Año",
            "dataType": "int64",
            "sourceColumn": "Año",
            "sourceProviderType": "int"
          },
          {
            "name": "Descripcion",
            "dataType": "string",
            "sourceColumn": "Descripcion",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "TipoCambio",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[TipoCambio].* FROM [sales].[TipoCambio] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[TipoCambio].* FROM [sales].[TipoCambio] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "TipoCambio"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Venta",
        "columns": [
          {
            "name": "TransactionDate",
            "dataType": "dateTime",
            "sourceColumn": "TransactionDate",
            "formatString": "Short Date",
            "sourceProviderType": "datetime2",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "AuditTrailId",
            "dataType": "int64",
            "sourceColumn": "AuditTrailId",
            "sourceProviderType": "int"
          },
          {
            "name": "TimePeriodId",
            "dataType": "dateTime",
            "sourceColumn": "TimePeriodId",
            "formatString": "Short Date",
            "sourceProviderType": "datetime2",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "SaleOrganisationId",
            "dataType": "int64",
            "sourceColumn": "SaleOrganisationId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleChannelId",
            "dataType": "int64",
            "sourceColumn": "SaleChannelId",
            "sourceProviderType": "int"
          },
          {
            "name": "CustomerId",
            "dataType": "int64",
            "sourceColumn": "CustomerId",
            "sourceProviderType": "int"
          },
          {
            "name": "StoreId",
            "dataType": "int64",
            "sourceColumn": "StoreId",
            "sourceProviderType": "int"
          },
          {
            "name": "BrandId",
            "dataType": "int64",
            "sourceColumn": "BrandId",
            "sourceProviderType": "int"
          },
          {
            "name": "QualityId",
            "dataType": "int64",
            "sourceColumn": "QualityId",
            "sourceProviderType": "int"
          },
          {
            "name": "GenderId",
            "dataType": "int64",
            "sourceColumn": "GenderId",
            "sourceProviderType": "int"
          },
          {
            "name": "LineId",
            "dataType": "int64",
            "sourceColumn": "LineId",
            "sourceProviderType": "int"
          },
          {
            "name": "ClothingPieceTypeId",
            "dataType": "int64",
            "sourceColumn": "ClothingPieceTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "ClothingPieceId",
            "dataType": "int64",
            "sourceColumn": "ClothingPieceId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductId",
            "dataType": "int64",
            "sourceColumn": "ProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "Revenues",
            "dataType": "double",
            "sourceColumn": "Revenues",
            "sourceProviderType": "decimal"
          },
          {
            "name": "NetSale",
            "dataType": "double",
            "sourceColumn": "NetSale",
            "sourceProviderType": "decimal"
          },
          {
            "name": "SaleCost",
            "dataType": "double",
            "sourceColumn": "SaleCost",
            "sourceProviderType": "decimal"
          },
          {
            "name": "SaleQuantity",
            "dataType": "double",
            "sourceColumn": "SaleQuantity",
            "sourceProviderType": "decimal"
          },
          {
            "name": "SalesM2",
            "dataType": "double",
            "sourceColumn": "SalesM2",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Discount1",
            "dataType": "double",
            "sourceColumn": "Discount1",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Discount2",
            "dataType": "double",
            "sourceColumn": "Discount2",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Discount3",
            "dataType": "double",
            "sourceColumn": "Discount3",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Discount4",
            "dataType": "double",
            "sourceColumn": "Discount4",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Discount5",
            "dataType": "double",
            "sourceColumn": "Discount5",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Discount6",
            "dataType": "double",
            "sourceColumn": "Discount6",
            "sourceProviderType": "numeric"
          },
          {
            "name": "Discount7",
            "dataType": "double",
            "sourceColumn": "Discount7",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Discount8",
            "dataType": "double",
            "sourceColumn": "Discount8",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Discount9",
            "dataType": "double",
            "sourceColumn": "Discount9",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Discount10",
            "dataType": "double",
            "sourceColumn": "Discount10",
            "sourceProviderType": "decimal"
          },
          {
            "name": "ShimId",
            "dataType": "int64",
            "sourceColumn": "ShimId",
            "sourceProviderType": "int"
          },
          {
            "name": "Venta",
            "dataType": "double",
            "sourceColumn": "Venta",
            "sourceProviderType": "decimal"
          },
          {
            "name": "MarginInterCompany",
            "dataType": "double",
            "sourceColumn": "MarginInterCompany",
            "sourceProviderType": "decimal"
          },
          {
            "name": "BusinessClasificationId",
            "dataType": "int64",
            "sourceColumn": "BusinessClasificationId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductModelId",
            "dataType": "int64",
            "sourceColumn": "ProductModelId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductGenericId",
            "dataType": "int64",
            "sourceColumn": "ProductGenericId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductFashionSeasonId",
            "dataType": "int64",
            "sourceColumn": "ProductFashionSeasonId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductFashionGradeId",
            "dataType": "int64",
            "sourceColumn": "ProductFashionGradeId",
            "sourceProviderType": "int"
          },
          {
            "name": "CurrencyId",
            "dataType": "int64",
            "sourceColumn": "CurrencyId",
            "sourceProviderType": "int"
          },
          {
            "name": "TipoCambioId",
            "dataType": "int64",
            "sourceColumn": "TipoCambioId",
            "sourceProviderType": "int"
          },
          {
            "name": "SellerId",
            "dataType": "int64",
            "sourceColumn": "SellerId"
          },
          {
            "name": "RetailDocument",
            "dataType": "string",
            "sourceColumn": "RetailDocument"
          },
          {
            "name": "CapWamId",
            "dataType": "int64",
            "sourceColumn": "CapWamId"
          },
          {
            "name": "ConsGrp2Id",
            "dataType": "int64",
            "sourceColumn": "ConsGrp2Id"
          },
          {
            "name": "ConsTrgId",
            "dataType": "int64",
            "sourceColumn": "ConsTrgId"
          },
          {
            "name": "FitRefId",
            "dataType": "int64",
            "sourceColumn": "FitRefId"
          },
          {
            "name": "ProdLineId",
            "dataType": "int64",
            "sourceColumn": "ProdLineId"
          },
          {
            "name": "ProgId",
            "dataType": "int64",
            "sourceColumn": "ProgId"
          },
          {
            "name": "SustId",
            "dataType": "int64",
            "sourceColumn": "SustId"
          },
          {
            "name": "TecnoId",
            "dataType": "int64",
            "sourceColumn": "TecnoId"
          },
          {
            "name": "TierId",
            "dataType": "int64",
            "sourceColumn": "TierId"
          },
          {
            "name": "ClassId",
            "dataType": "int64",
            "sourceColumn": "ClassId"
          },
          {
            "name": "SellerIdOrig",
            "dataType": "string",
            "sourceColumn": "SellerIdOrig"
          },
          {
            "name": "Atr. GlFitPlat Hist",
            "dataType": "string",
            "sourceColumn": "GlFitPlat"
          },
          {
            "name": "Atr. ProdName Hist",
            "dataType": "string",
            "sourceColumn": "ProdName"
          },
          {
            "name": "Atr. SubClass Hist",
            "dataType": "string",
            "sourceColumn": "SubClass"
          },
          {
            "name": "Atr. Capsulas WAM Codigo Hist",
            "dataType": "string",
            "sourceColumn": "CAP_WAM"
          },
          {
            "name": "Atr. Capsulas WAM Desc Hist",
            "dataType": "string",
            "sourceColumn": "D_CAP_WAM"
          },
          {
            "name": "Atr. Consumer Group Codigo Hist",
            "dataType": "string",
            "sourceColumn": "CONS_GRP_2"
          },
          {
            "name": "Atr. Consumer Group Desc Hist",
            "dataType": "string",
            "sourceColumn": "D_CONS_GRP_2"
          },
          {
            "name": "Atr. Consumer Target Codigo Hist",
            "dataType": "string",
            "sourceColumn": "CONS_TRG"
          },
          {
            "name": "Atr. Consumer Target Desc Hist",
            "dataType": "string",
            "sourceColumn": "D_CONS_TRG"
          },
          {
            "name": "Atr. Fit Reference Codigo Hist",
            "dataType": "string",
            "sourceColumn": "FIT_REF"
          },
          {
            "name": "Atr. Fit Reference Desc Hist",
            "dataType": "string",
            "sourceColumn": "D_FIT_REF"
          },
          {
            "name": "Atr. Product Line Codigo Hist",
            "dataType": "string",
            "sourceColumn": "PROD_LINE"
          },
          {
            "name": "Atr. Product Line Desc Hist",
            "dataType": "string",
            "sourceColumn": "D_PROD_LINE"
          },
          {
            "name": "Atr. Program Codigo Hist",
            "dataType": "string",
            "sourceColumn": "PROG"
          },
          {
            "name": "Atr. Program Desc Hist",
            "dataType": "string",
            "sourceColumn": "D_PROG"
          },
          {
            "name": "Atr. Sustentabilidad Codigo Hist",
            "dataType": "string",
            "sourceColumn": "SUST"
          },
          {
            "name": "Atr. Sustentabilidad Desc Hist",
            "dataType": "string",
            "sourceColumn": "D_SUST"
          },
          {
            "name": "Atr. Tecno Codigo Hist",
            "dataType": "string",
            "sourceColumn": "TECNO"
          },
          {
            "name": "Atr. Tecno Desc Hist",
            "dataType": "string",
            "sourceColumn": "D_TECNO"
          },
          {
            "name": "Atr. Tier Codigo Hist",
            "dataType": "string",
            "sourceColumn": "TIER"
          },
          {
            "name": "Atr. Tier Desc Hist",
            "dataType": "string",
            "sourceColumn": "D_TIER"
          },
          {
            "name": "Atr. Class Codigo Hist",
            "dataType": "string",
            "sourceColumn": "CLASS"
          },
          {
            "name": "Atr. Class Desc Hist",
            "dataType": "string",
            "sourceColumn": "D_CLASS"
          },
          {
            "name": "Promocion Codigo",
            "dataType": "string",
            "sourceColumn": "PROMO"
          },
          {
            "name": "Promocion Descripcion",
            "dataType": "string",
            "sourceColumn": "D_PROMO"
          }
        ],
        "partitions": [
          {
            "name": "vw_Sale_2019",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                "where timeperiodid>='2019-01-01' and timeperiodid<='2019-12-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                  "where timeperiodid>='2019-01-01' and timeperiodid<='2019-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Sale_2020_1",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                "where timeperiodid>='2020-01-01' and timeperiodid<='2020-04-30'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                  "where timeperiodid>='2020-01-01' and timeperiodid<='2020-04-30'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Sale_2020_2",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                "where timeperiodid>='2020-05-01' and timeperiodid<='2020-08-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                  "where timeperiodid>='2020-05-01' and timeperiodid<='2020-08-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Sale_2020_3",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                "where timeperiodid>='2020-09-01' and timeperiodid<='2020-12-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                  "where timeperiodid>='2020-09-01' and timeperiodid<='2020-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Sale_2021",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                "where timeperiodid>='2021-01-01' and timeperiodid<='2021-12-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                  "where timeperiodid>='2021-01-01' and timeperiodid<='2021-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Sale_2022_1",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                "where timeperiodid>='2022-01-01' and timeperiodid<='2022-05-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                  "where timeperiodid>='2022-01-01' and timeperiodid<='2022-05-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Sale_2022_2",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                "where timeperiodid>='2022-06-01'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
                  "where timeperiodid>='2022-06-01'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Cantidad Ventas",
            "expression": "COUNTROWS(Venta)",
            "formatString": "#,0"
          },
          {
            "name": "UPT",
            "expression": "if('Retail Venta'[Transacciones]= 0 ,blank(),if (Venta[Unidades]=0, blank(),Venta[Unidades]/'Retail Venta'[Transacciones]))",
            "formatString": "#,0.00"
          },
          {
            "name": "AUR",
            "expression": "Venta[Ventas]/Venta[Unidades]",
            "formatString": "#,0.0"
          },
          {
            "name": "ATV",
            "expression": "Venta[Ventas]/'Retail Venta'[Transacciones]",
            "formatString": "#,0"
          },
          {
            "name": "Venta Bruta",
            "expression": "Venta[Ventas]+Venta[Desc Cliente]+Venta[Desc Close Out]+Venta[Desc Consignacion]+Venta[Desc Personal]+Venta[Desc Promocion]+Venta[Desc Pronto Pago]",
            "formatString": "#,0"
          },
          {
            "name": "COGS Unit",
            "expression": "Venta[Costos]/Venta[Unidades]",
            "formatString": "#,0"
          },
          {
            "name": "Precio Bruto",
            "expression": "Venta[Venta Bruta]/Venta[Unidades]",
            "formatString": "#,0"
          },
          {
            "name": "Vta to Plan %",
            "expression": "(Venta[Ventas]/'Venta AFP IP'[Venta IP]) - 1",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "ADS",
            "expression": "Venta[Ventas]/'Retail Venta'[Transacciones]",
            "formatString": "#,0"
          },
          {
            "name": "Costos",
            "expression": "SUM([SaleCost])",
            "formatString": "#,0"
          },
          {
            "name": "Unidades",
            "expression": "SUM([SaleQuantity])",
            "formatString": "#,0"
          },
          {
            "name": "Ventas M2",
            "expression": "SUM([SalesM2])",
            "formatString": "#,0"
          },
          {
            "name": "Desc Consignacion",
            "expression": "SUM([Discount1])",
            "formatString": "#,0"
          },
          {
            "name": "Desc Consignacion %",
            "expression": "Venta[Desc Consignacion]/Venta[Suma Ingreso2]",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Descuento Total",
            "expression": "Venta[Desc Cliente]+Venta[Desc Close Out]+Venta[Desc Consignacion]+Venta[Desc Personal]+Venta[Desc Promocion]+Venta[Desc Pronto Pago]",
            "formatString": "#,0"
          },
          {
            "name": "Desc Promocion",
            "expression": "SUM([Discount2])",
            "formatString": "#,0"
          },
          {
            "name": "Desc Promocion %",
            "expression": "Venta[Desc Promocion]/Venta[Suma Ingreso2]",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Desc Close Out",
            "expression": "SUM([Discount3])",
            "formatString": "#,0"
          },
          {
            "name": "Desc Close Out %",
            "expression": "Venta[Desc Close Out]/Venta[Suma Ingreso2]",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Desc Pronto Pago",
            "expression": "SUM([Discount4])",
            "formatString": "#,0"
          },
          {
            "name": "Desc Pronto Pago %",
            "expression": "Venta[Desc Pronto Pago]/Venta[Suma Ingreso2]",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Desc Personal",
            "expression": "SUM([Discount5])",
            "formatString": "#,0"
          },
          {
            "name": "Desc Personal %",
            "expression": "Venta[Desc Personal]/Venta[Suma Ingreso2]",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Desc Cliente",
            "expression": "SUM([Discount6])",
            "formatString": "#,0"
          },
          {
            "name": "Desc Cliente %",
            "expression": "Venta[Desc Cliente]/Venta[Suma Ingreso2]",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Ventas",
            "expression": "SUM([Venta])",
            "formatString": "#,0"
          },
          {
            "name": "Margen",
            "expression": "SUM([MarginInterCompany])",
            "formatString": "#,0"
          },
          {
            "name": "Margen %",
            "expression": "Venta[Margen]/Venta[Ventas]",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Costo Promedio",
            "expression": [
              "if(ISBLANK([Unidades]), BLANK(),",
              "if([Unidades]=0, BLANK(), [Costos]/[Unidades])",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ingresos",
            "expression": "SUM(Venta[Revenues])",
            "formatString": "#,0"
          },
          {
            "name": "Suma Ingreso2",
            "expression": "Venta[Descuento Total]+[Ingresos]",
            "isHidden": true
          },
          {
            "name": "Venta Actual",
            "expression": "SUM([Venta])",
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (SUM([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen Actual",
            "expression": "SUM([MarginInterCompany])",
            "formatString": "#,0"
          },
          {
            "name": "Margen Actual WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE (sum([MarginInterCompany]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen Actual MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (SUM([MarginInterCompany]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen Actual QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([MarginInterCompany]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen Actual YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([MarginInterCompany]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE (sum([MarginInterCompany]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen Anterior WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([MarginInterCompany]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen Anterior MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([MarginInterCompany]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen Anterior QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([MarginInterCompany]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen Anterior YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([MarginInterCompany]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Unidades Actual",
            "expression": "SUM([SaleQuantity])",
            "formatString": "#,0"
          },
          {
            "name": "Unidades Actual WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE (sum([SaleQuantity]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Unidades Actual MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (SUM([SaleQuantity]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Unidades Actual QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([SaleQuantity]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Unidades Actual YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([SaleQuantity]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Unidades Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE (sum([SaleQuantity]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Unidades Anterior WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleQuantity]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Unidades Anterior MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleQuantity]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Unidades Anterior QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleQuantity]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Unidades Anterior YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleQuantity]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen % Actual",
            "expression": "sum(Venta[MarginInterCompany])/sum(Venta[Venta])",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Margen % Actual WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE (sum(Venta[MarginInterCompany])/sum(Venta[Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Margen % Actual MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum(Venta[MarginInterCompany])/sum(Venta[Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Margen % Actual QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum(Venta[MarginInterCompany])/sum(Venta[Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              ""
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Margen % Actual YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum(Venta[MarginInterCompany])/sum(Venta[Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Margen % Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE (sum(Venta[MarginInterCompany])/sum(Venta[Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Margen % Anterior WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (sum(Venta[MarginInterCompany])/sum(Venta[Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Margen % Anterior MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (sum(Venta[MarginInterCompany])/sum(Venta[Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Margen % Anterior QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (sum(Venta[MarginInterCompany])/sum(Venta[Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Margen % Anterior YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (sum(Venta[MarginInterCompany])/sum(Venta[Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "UPT Actual",
            "expression": "if('Retail Venta'[Transacciones]= 0 ,blank(),if (Venta[Unidades]=0, blank(),Venta[Unidades]/'Retail Venta'[Transacciones]))",
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Actual WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE (Venta[UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Actual MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (Venta[UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Actual QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (Venta[UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Actual YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (Venta[UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE (Venta[UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Anterior WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (Venta[UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Anterior MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (Venta[UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Anterior QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (Venta[UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Anterior YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (Venta[UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "ATV Actual",
            "expression": "Venta[Ventas]/'Retail Venta'[Transacciones]",
            "formatString": "#,0"
          },
          {
            "name": "ATV Actual WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE (Venta[ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ATV Actual MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (Venta[ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ATV Actual QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (Venta[ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ATV Actual YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (Venta[ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ATV Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE (Venta[ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ATV Anterior WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (Venta[ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ATV Anterior MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (Venta[ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ATV Anterior QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (Venta[ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ATV Anterior YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (Venta[ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "AUR Actual",
            "expression": "Venta[Ventas]/Venta[Unidades]",
            "formatString": "#,0.0"
          },
          {
            "name": "AUR Actual WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": "AUR Actual MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": "AUR Actual QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": "AUR Actual YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": "AUR Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": "AUR Anterior WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": "AUR Anterior MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": "AUR Anterior QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": "AUR Anterior YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0"
          },
          {
            "name": "Var % a Vental Actual",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "var denominador = CALCULATE ([Venta Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "var numerador = [Venta Actual]",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Vental Actual MTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioMesFical])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador =  CALCULATE ([Venta Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "",
              "var fechainicio_2 = min(Periodo[Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Vental Actual QTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Venta Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Q_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Vental Actual WTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Venta Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[w_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Vental Actual YTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioAnoFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Venta Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Y_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Margen Actual",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "var denominador = CALCULATE ([Margen Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "var numerador = [Margen Actual]",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Margen Actual MTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioMesFical])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador =  CALCULATE ([Margen Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "",
              "var fechainicio_2 = min(Periodo[Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Margen Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Margen Actual QTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Margen Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Q_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Margen Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Margen Actual WTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Margen Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[w_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Margen Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Margen Actual YTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioAnoFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Margen Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Y_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Margen Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Unidades Actual",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "var denominador = CALCULATE ([Unidades Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "var numerador = [Unidades Actual]",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Unidades Actual MTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioMesFical])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador =  CALCULATE ([Unidades Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "",
              "var fechainicio_2 = min(Periodo[Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Unidades Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Unidades Actual QTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Unidades Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Q_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Unidades Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Unidades Actual WTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Unidades Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[w_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Unidades Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Unidades Actual YTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioAnoFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Unidades Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Y_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Unidades Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Conversion Actual",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "var denominador = CALCULATE ([Conversion Actual] ,datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "var numerador = [Conversion Actual]",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Conversion Actual MTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioMesFical])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador =  CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "",
              "var fechainicio_2 = min(Periodo[Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Conversion Actual QTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Q_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Conversion Actual WTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[w_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Conversion Actual YTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioAnoFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Y_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a UPT Actual",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "var denominador = CALCULATE ([UPT Actual] ,datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "var numerador = [UPT Actual]",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a UPT Actual MTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioMesFical])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador =  CALCULATE ([UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "",
              "var fechainicio_2 = min(Periodo[Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a UPT Actual QTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Q_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a UPT Actual WTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[w_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a UPT Actual YTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioAnoFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Y_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([UPT Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a AUR Actual",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "var denominador = CALCULATE ([AUR Actual] ,datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "var numerador = [AUR Actual]",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a AUR Actual MTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioMesFical])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador =  CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "",
              "var fechainicio_2 = min(Periodo[Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a AUR Actual QTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Q_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a AUR Actual WTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[w_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a AUR Actual YTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioAnoFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Y_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([AUR Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a ATV Actual",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "var denominador = CALCULATE ([ATV Actual] ,datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "var numerador = [ATV Actual]",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a ATV Actual MTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioMesFical])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador =  CALCULATE ([ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "",
              "var fechainicio_2 = min(Periodo[Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a ATV Actual QTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Q_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a ATV Actual WTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[w_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a ATV Actual YTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioAnoFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Y_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([ATV Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Costo Actual",
            "expression": "SUM([SaleCost])",
            "formatString": "#,0"
          },
          {
            "name": "Costo Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE (sum(Venta[SaleCost]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Desc Consignacion Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Desc Consignacion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Desc Promocion Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Desc Promocion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Desc Close Out Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Desc Close Out],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Desc Pronto Pago Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Desc Pronto Pago],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Desc Personal Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Desc Personal],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Desc Cliente Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Desc Cliente],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Descuento Total Actual",
            "expression": "Venta[Desc Cliente]+Venta[Desc Close Out]+Venta[Desc Consignacion]+Venta[Desc Personal]+Venta[Desc Promocion]+Venta[Desc Pronto Pago]",
            "formatString": "#,0"
          },
          {
            "name": "Descuento Total Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Descuento Total Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ingresos Actual",
            "expression": "SUM(Venta[Revenues])",
            "formatString": "#,0"
          },
          {
            "name": "Ingresos Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Ingresos Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Costos Promedio Actual",
            "expression": "[Costo Promedio]",
            "formatString": "#,0"
          },
          {
            "name": "Costo Promedio Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Costos Promedio Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Precio Promedio Actual",
            "expression": "calculate([Venta Actual]/[Unidades Actual],FILTER(Tienda,Tienda[Agrupador Tienda]<>\"D\"))",
            "formatString": "#,0"
          },
          {
            "name": "Descuento Total %",
            "expression": " [Descuento Total]/[Suma Ingreso2]",
            "formatString": "0.0 %;-0.0 %;0.0 %"
          },
          {
            "name": "AOV Actual",
            "expression": [
              " ",
              "",
              "var numerador = [Venta Actual]",
              "var denominador = [Transacciones Ecom]",
              "",
              "var resultado = if(denominador = BLANK() || denominador=0,BLANK(),DIVIDE(numerador,denominador))",
              "return resultado",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "AOV Actual WTD",
            "expression": [
              " ",
              "var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE ([AOV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "UPT Ecom Prev Week-1",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt1])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt1])",
              "",
              "var calculo =  CALCULATE ([UPT Ecom Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Ecom Prev Week-2",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt2])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt2])",
              "",
              "var calculo =  CALCULATE ([UPT Ecom Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Ecom Prev Week-3",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt3])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt3])",
              "",
              "var calculo =  CALCULATE ([UPT Ecom Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo",
              ""
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "Ventas Prev Week-1",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt1])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt1])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ventas Prev Week-2",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt2])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt2])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ventas Prev Week-3",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt3])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt3])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen% Prev Week-1",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt1])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt1])",
              "",
              "",
              "",
              "var calculo =  CALCULATE ([Margen %],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.0 %;-0.0 %;0.0 %"
          },
          {
            "name": "Margen% Prev Week-2",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt2])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt2])",
              "",
              "",
              "",
              "var calculo =  CALCULATE ([Margen %],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.0 %;-0.0 %;0.0 %"
          },
          {
            "name": "Margen% Prev Week-3",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt3])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt3])",
              "",
              "",
              "",
              "var calculo =  CALCULATE ([Margen %],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.0 %;-0.0 %;0.0 %"
          },
          {
            "name": "GrossSales",
            "expression": " CALCULATE(Venta[Venta Actual],Venta[SaleQuantity]>=0)",
            "formatString": "#,0"
          },
          {
            "name": "Returns %",
            "expression": " if ( or ( [Returns $] = BLANK(), [Returns $]=0), BLANK(), IF ( OR ([GrossSales]=0, [GrossSales]=BLANK()), BLANK(), DIVIDE([Returns $],[GrossSales]) ) )",
            "formatString": "0.0 %;-0.0 %;0.0 %"
          },
          {
            "name": "Returns $",
            "expression": " CALCULATE(Venta[Venta Actual],Venta[SaleQuantity]<0) ",
            "formatString": "#,0"
          },
          {
            "name": "SOT Venta sobre el Trafico",
            "expression": " if(or([Venta Actual]=0, [Venta Actual]=BLANK()),BLANK(), if(or([Trafico Actual]=0, [Trafico Actual]=BLANK()),BLANK(),DIVIDE([Venta Actual], [Trafico Actual]) ))",
            "formatString": "#,0"
          },
          {
            "name": "Margen por metro cuadrado %",
            "expression": " if( or([Margen % Actual]=0, [Margen % Actual]=BLANK()), BLANK(), IF( OR('Tienda'[Gross Size]=0, 'Tienda'[Gross Size]=BLANK() ),BLANK(), DIVIDE('Venta'[Margen % Actual] , 'Tienda'[Gross Size] ) ) )",
            "formatString": "0.0 %;-0.0 %;0.0 %"
          },
          {
            "name": "Margen por metro cuadrado $",
            "expression": " if( or ([Margen Actual]=0, [Margen Actual]=BLANK()),BLANK(),  if ( or( 'Tienda'[Gross Size]=0,  'Tienda'[Gross Size]=BLANK() ) , BLANK(), DIVIDE('Venta'[Margen Actual] , 'Tienda'[Gross Size]) ) ) ",
            "formatString": "#,0"
          },
          {
            "name": "SVT %",
            "expression": " 'Venta'[Var % a Vental Actual] - 'Retail Traffic'[Var % a Trafico Actual]",
            "formatString": "0.0 %;-0.0 %;0.0 %"
          },
          {
            "name": "Venta por metro cuadrado",
            "expression": " if ( or( [Venta Actual]=0, [Venta Actual]=BLANK() ),BLANK(), IF( OR( [Gross Size]=0, [Gross Size]=BLANK() ), BLANK(), DIVIDE( [Venta Actual] , [Gross Size] ) ))",
            "formatString": "#,0"
          },
          {
            "name": "Ventas Prev Week-4",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt4])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt4])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ventas Prev Week-5",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt5])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt5])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ventas Prev Week-6",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt6])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt6])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ventas Prev Week-7",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt7])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt7])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "AOV Ecom Prev Week-1",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt1])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt1])",
              "",
              "var calculo =  CALCULATE ([AOV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "AOV Ecom Prev Week-2",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt2])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt2])",
              "",
              "var calculo =  CALCULATE ([AOV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "AOV Ecom Prev Week-3",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt3])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt3])",
              "",
              "var calculo =  CALCULATE ([AOV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "UPT Ecom Prev Week-4",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt4])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt4])",
              "",
              "var calculo =  CALCULATE ([UPT Ecom Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo",
              ""
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Ecom Prev Week-5",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt5])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt5])",
              "",
              "var calculo =  CALCULATE ([UPT Ecom Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo",
              ""
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Prev Week-1",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt1])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt1])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT Prev Week-2",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt2])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt2])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT Prev Week-3",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt3])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt3])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT Prev Week-4",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt4])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt4])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT Prev Week-5",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt5])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt5])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT Prev Week-6",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt6])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt6])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT Prev Week-7",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt7])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt7])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT Prev Week-8",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt8])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt8])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT Prev Week-9",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt9])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt9])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT Prev Week-10",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt10])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt10])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT Prev Week-11",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt11])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt11])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT Prev Week-12",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt12])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt12])",
              "",
              "var calculo =  CALCULATE ([UPT],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "UPT AVG Prev Week-1_to_12",
            "expression": [
              "",
              "",
              "var calculo =( ",
              "IFERROR('Venta'[UPT Prev Week-1],0)+ ",
              "IFERROR('Venta'[UPT Prev Week-2],0)+ ",
              "IFERROR('Venta'[UPT Prev Week-3],0)+ ",
              "IFERROR('Venta'[UPT Prev Week-4],0)+ ",
              "IFERROR('Venta'[UPT Prev Week-5],0)+ ",
              "IFERROR('Venta'[UPT Prev Week-6],0)+ ",
              "IFERROR('Venta'[UPT Prev Week-7],0)+ ",
              "IFERROR('Venta'[UPT Prev Week-8],0)+ ",
              "IFERROR('Venta'[UPT Prev Week-9],0)+ ",
              "IFERROR('Venta'[UPT Prev Week-10],0)+",
              "IFERROR('Venta'[UPT Prev Week-11],0)+",
              "IFERROR('Venta'[UPT Prev Week-12],0)) / 12",
              "return calculo"
            ],
            "formatString": "0.00"
          },
          {
            "name": "ADS Prev Week-1",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt1])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt1])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS Prev Week-2",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt2])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt2])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS Prev Week-3",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt3])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt3])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS Prev Week-4",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt4])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt4])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS Prev Week-5",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt5])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt5])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS Prev Week-6",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt6])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt6])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS Prev Week-7",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt7])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt7])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS Prev Week-8",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt8])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt8])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS Prev Week-9",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt9])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt9])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS Prev Week-10",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt10])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt10])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS Prev Week-11",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt11])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt11])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS Prev Week-12",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt12])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt12])",
              "",
              "var calculo =  CALCULATE ([ADS],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "ADS AVG Prev Week-1_to_12",
            "expression": [
              "",
              "",
              "var calculo =( ",
              "IFERROR('Venta'[ADS Prev Week-1],0)+ ",
              "IFERROR('Venta'[ADS Prev Week-2],0)+ ",
              "IFERROR('Venta'[ADS Prev Week-3],0)+ ",
              "IFERROR('Venta'[ADS Prev Week-4],0)+ ",
              "IFERROR('Venta'[ADS Prev Week-5],0)+ ",
              "IFERROR('Venta'[ADS Prev Week-6],0)+ ",
              "IFERROR('Venta'[ADS Prev Week-7],0)+ ",
              "IFERROR('Venta'[ADS Prev Week-8],0)+ ",
              "IFERROR('Venta'[ADS Prev Week-9],0)+ ",
              "IFERROR('Venta'[ADS Prev Week-10],0)+",
              "IFERROR('Venta'[ADS Prev Week-11],0)+",
              "IFERROR('Venta'[ADS Prev Week-12],0)) / 12",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ventas Prev Week-8",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt8])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt8])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ventas Prev Week-9",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt9])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt9])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ventas Prev Week-10",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt10])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt10])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ventas Prev Week-11",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt11])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt11])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ventas Prev Week-12",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt12])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt12])",
              "",
              "var calculo =  CALCULATE (sum([Venta]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Ventas AVG Prev Week-1_to_12",
            "expression": [
              "",
              "",
              "var calculo =( ",
              "IFERROR('Venta'[Ventas Prev Week-1],0)+ ",
              "IFERROR('Venta'[Ventas Prev Week-2],0)+ ",
              "IFERROR('Venta'[Ventas Prev Week-3],0)+ ",
              "IFERROR('Venta'[Ventas Prev Week-4],0)+ ",
              "IFERROR('Venta'[Ventas Prev Week-5],0)+ ",
              "IFERROR('Venta'[Ventas Prev Week-6],0)+ ",
              "IFERROR('Venta'[Ventas Prev Week-7],0)+ ",
              "IFERROR('Venta'[Ventas Prev Week-8],0)+ ",
              "IFERROR('Venta'[Ventas Prev Week-9],0)+ ",
              "IFERROR('Venta'[Ventas Prev Week-10],0)+",
              "IFERROR('Venta'[Ventas Prev Week-11],0)+",
              "IFERROR('Venta'[Ventas Prev Week-12],0)) / 12",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "AOV Ecom Prev Week-4",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt4])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt4])",
              "",
              "var calculo =  CALCULATE ([AOV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "TransaccionesSitio",
            "expression": [
              " ",
              "SWITCH(",
              " SELECTEDVALUE(Marca[Marca]),",
              "\"Levis\",calculate([Transacciones],'Retail Venta'[StoreId]=249),",
              "\"Dockers\",calculate([Transacciones],'Retail Venta'[StoreId]=32743),",
              " BLANK()",
              ")",
              ""
            ]
          },
          {
            "name": "AOV Ecom Prev Week-5",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt5])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt5])",
              "",
              "var calculo =  CALCULATE ([AOV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "AOV Ecom Prev Week-6",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt6])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt6])",
              "",
              "var calculo =  CALCULATE ([AOV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "AOV Ecom Prev Week-7",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt7])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt7])",
              "",
              "var calculo =  CALCULATE ([AOV Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "UPT Ecom Actual",
            "expression": "if('Retail Venta'[Transacciones Ecom]= 0 ,blank(),if (Venta[Unidades]=0, blank(),Venta[Unidades]/'Retail Venta'[Transacciones Ecom]))",
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Ecom Actual WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE (Venta[UPT Ecom Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Ecom Prev Week-6",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt6])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt6])",
              "",
              "var calculo =  CALCULATE ([UPT Ecom Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo",
              ""
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "UPT Ecom Prev Week-7",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt7])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt7])",
              "",
              "var calculo =  CALCULATE ([UPT Ecom Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo",
              ""
            ],
            "formatString": "#,0.00"
          },
          {
            "name": "Margen% Prev Week-4",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt4])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt4])",
              "",
              "",
              "",
              "var calculo =  CALCULATE ([Margen %],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.0 %;-0.0 %;0.0 %"
          },
          {
            "name": "Margen% Prev Week-5",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt5])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt5])",
              "",
              "",
              "",
              "var calculo =  CALCULATE ([Margen %],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.0 %;-0.0 %;0.0 %"
          },
          {
            "name": "Margen% Prev Week-6",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt6])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt6])",
              "",
              "",
              "",
              "var calculo =  CALCULATE ([Margen %],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.0 %;-0.0 %;0.0 %"
          },
          {
            "name": "Margen% Prev Week-7",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt7])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt7])",
              "",
              "",
              "",
              "var calculo =  CALCULATE ([Margen %],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "0.0 %;-0.0 %;0.0 %"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
              "where timeperiodid>='2019-01-01' and timeperiodid<='2019-12-31'"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "vw_Sale"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Sale_v5].* FROM [sales].[vw_Sale_v5]",
              "where timeperiodid>='2019-01-01' and timeperiodid<='2019-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Venta AFP IP",
        "columns": [
          {
            "name": "TransactionDate",
            "dataType": "dateTime",
            "sourceColumn": "TransactionDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime2"
          },
          {
            "name": "AuditTrailId",
            "dataType": "int64",
            "sourceColumn": "AuditTrailId",
            "sourceProviderType": "int"
          },
          {
            "name": "TimePeriodId",
            "dataType": "dateTime",
            "sourceColumn": "TimePeriodId",
            "formatString": "General Date",
            "sourceProviderType": "datetime2"
          },
          {
            "name": "SaleOrganisationId",
            "dataType": "int64",
            "sourceColumn": "SaleOrganisationId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleChannelId",
            "dataType": "int64",
            "sourceColumn": "SaleChannelId",
            "sourceProviderType": "int"
          },
          {
            "name": "StoreId",
            "dataType": "int64",
            "sourceColumn": "StoreId",
            "sourceProviderType": "int"
          },
          {
            "name": "CurrencyId",
            "dataType": "int64",
            "sourceColumn": "CurrencyId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleAFP",
            "dataType": "double",
            "sourceColumn": "SaleAFP",
            "sourceProviderType": "decimal"
          },
          {
            "name": "SaleIP",
            "dataType": "double",
            "sourceColumn": "SaleIP",
            "sourceProviderType": "decimal"
          },
          {
            "name": "ProductId",
            "dataType": "int64",
            "sourceColumn": "ProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "BrandId",
            "dataType": "int64",
            "sourceColumn": "BrandId",
            "sourceProviderType": "int"
          },
          {
            "name": "TipoCambioId",
            "dataType": "int64",
            "sourceColumn": "TipoCambioId"
          }
        ],
        "partitions": [
          {
            "name": "vw_Venta_AFP_IP_2019_2021",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_Venta_AFP_IP_v2].* FROM [sales].[vw_Venta_AFP_IP_v2]",
                "where timeperiodid >='2019-01-01' and timeperiodid<='2021-12-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Venta_AFP_IP_v2].* FROM [sales].[vw_Venta_AFP_IP_v2]",
                  "where timeperiodid >='2019-01-01' and timeperiodid<='2021-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Venta_AFP_IP_2022_1",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_Venta_AFP_IP_v2].* FROM [sales].[vw_Venta_AFP_IP_v2]",
                "where timeperiodid>='2022-01-01'  and timeperiodid<='2022-05-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Venta_AFP_IP_v2].* FROM [sales].[vw_Venta_AFP_IP_v2]",
                  "where timeperiodid>='2022-01-01'  and timeperiodid<='2022-05-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Venta_AFP_IP_2022_2",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_Venta_AFP_IP_v2].* FROM [sales].[vw_Venta_AFP_IP_v2]",
                "where timeperiodid>='2022-06-01'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Venta_AFP_IP_v2].* FROM [sales].[vw_Venta_AFP_IP_v2]",
                  "where timeperiodid>='2022-06-01'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Venta AFP",
            "expression": "SUM([SaleAFP])",
            "formatString": "#,0"
          },
          {
            "name": "Venta IP",
            "expression": "SUM([SaleIP])",
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual AFP",
            "expression": "SUM([SaleAFP])",
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual AFP WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE (sum([SaleAFP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual AFP MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (SUM([SaleAFP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual AFP QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([SaleAFP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual AFP YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([SaleAFP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior AFP",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE (sum([SaleAFP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior AFP WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleAFP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior AFP MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleAFP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior AFP QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleAFP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior AFP YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleAFP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual IP",
            "expression": "SUM([SaleIP])",
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual IP WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE (sum([SaleIP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual IP MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (SUM([SaleIP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual IP QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([SaleIP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Actual IP YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([SaleIP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior IP",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE (sum([SaleIP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior IP WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleIP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior IP MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleIP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta Anterior IP QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleIP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta AnteriorIP YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([SaleIP]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Var % a Venta Actual AFP",
            "expression": [
              "",
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "var denominador = CALCULATE ([Venta Actual AFP],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "var numerador = [Venta Actual AFP]",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Venta Actual AFP MTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioMesFical])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador =  CALCULATE ([Venta Actual AFP],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "",
              "var fechainicio_2 = min(Periodo[Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual AFP],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Venta Actual AFP QTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Venta Actual AFP],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Q_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual AFP],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Venta Actual AFP WTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Venta Actual AFP],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[w_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual AFP],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Venta Actual AFP YTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioAnoFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Venta Actual AFP],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Y_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual AFP],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Venta Actual IP",
            "expression": [
              "",
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "var denominador = CALCULATE ([Venta Actual IP],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "var numerador = [Venta Actual IP]",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Venta Actual IP MTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioMesFical])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador =  CALCULATE ([Venta Actual IP],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "",
              "var fechainicio_2 = min(Periodo[Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual IP],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Venta Actual IP QTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Venta Actual IP],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Q_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual IP],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Venta Actual IP WTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Venta Actual IP],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[w_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual IP],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Venta Actual IP YTD",
            "expression": [
              "",
              "var fechainicio_1 = min(Periodo[InicioAnoFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Venta Actual IP],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Y_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Venta Actual IP],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % Venta to AFP Actual",
            "expression": [
              "",
              "var denominador = [Venta Actual AFP]",
              "var numerador = SUM(Venta[Venta])",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % Venta to IP Actual",
            "expression": [
              "",
              "var denominador = [Venta Actual IP]",
              "var numerador = SUM(Venta[Venta])",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [sales].[vw_Venta_AFP_IP_v2].* FROM [sales].[vw_Venta_AFP_IP_v2]",
              "where timeperiodid >='2019-01-01' and timeperiodid<='2021-12-31'"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "vw_Venta_AFP_IP"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Venta_AFP_IP_v2].* FROM [sales].[vw_Venta_AFP_IP_v2]",
              "where timeperiodid >='2019-01-01' and timeperiodid<='2021-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Venta ABP",
        "columns": [
          {
            "name": "AuditTrailId",
            "dataType": "int64",
            "sourceColumn": "AuditTrailId",
            "sourceProviderType": "int"
          },
          {
            "name": "BrandId",
            "dataType": "int64",
            "sourceColumn": "BrandId",
            "sourceProviderType": "int"
          },
          {
            "name": "ClothingPieceId",
            "dataType": "int64",
            "sourceColumn": "ClothingPieceId",
            "sourceProviderType": "int"
          },
          {
            "name": "ClothingPieceTypeId",
            "dataType": "int64",
            "sourceColumn": "ClothingPieceTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "CostABP",
            "dataType": "double",
            "sourceColumn": "CostABP",
            "sourceProviderType": "decimal"
          },
          {
            "name": "CustomerId",
            "dataType": "int64",
            "sourceColumn": "CustomerId",
            "sourceProviderType": "int"
          },
          {
            "name": "GenderId",
            "dataType": "int64",
            "sourceColumn": "GenderId",
            "sourceProviderType": "int"
          },
          {
            "name": "LineId",
            "dataType": "int64",
            "sourceColumn": "LineId",
            "sourceProviderType": "int"
          },
          {
            "name": "MarginABP",
            "dataType": "double",
            "sourceColumn": "MarginABP",
            "sourceProviderType": "decimal"
          },
          {
            "name": "QualityId",
            "dataType": "int64",
            "sourceColumn": "QualityId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleChannelId",
            "dataType": "int64",
            "sourceColumn": "SaleChannelId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleOrganisationId",
            "dataType": "int64",
            "sourceColumn": "SaleOrganisationId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleQuantityABP",
            "dataType": "double",
            "sourceColumn": "SaleQuantityABP",
            "sourceProviderType": "decimal"
          },
          {
            "name": "SalesABP",
            "dataType": "double",
            "sourceColumn": "SalesABP",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StoreId",
            "dataType": "int64",
            "sourceColumn": "StoreId",
            "sourceProviderType": "int"
          },
          {
            "name": "TimePeriodId",
            "dataType": "dateTime",
            "sourceColumn": "TimePeriodId",
            "formatString": "General Date",
            "sourceProviderType": "datetime2"
          },
          {
            "name": "TransactionDate",
            "dataType": "dateTime",
            "sourceColumn": "TransactionDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime2"
          },
          {
            "name": "ProductId",
            "dataType": "int64",
            "sourceColumn": "ProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductModelId",
            "dataType": "int64",
            "sourceColumn": "ProductModelId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductGenericId",
            "dataType": "int64",
            "sourceColumn": "ProductGenericId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductFashionSeasonId",
            "dataType": "int64",
            "sourceColumn": "ProductFashionSeasonId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductFashionGradeId",
            "dataType": "int64",
            "sourceColumn": "ProductFashionGradeId",
            "sourceProviderType": "int"
          },
          {
            "name": "CurrencyId",
            "dataType": "int64",
            "sourceColumn": "CurrencyId",
            "sourceProviderType": "int"
          }
        ],
        "partitions": [
          {
            "name": "vw_SaleABP_2017_2021",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_SaleABP_v2].* FROM [sales].[vw_SaleABP_v2]",
                "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_SaleABP_v2].* FROM [sales].[vw_SaleABP_v2]",
                  "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_SaleABP_2022_1",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_SaleABP_v2].* FROM [sales].[vw_SaleABP_v2]",
                "where timeperiodid>='2022-01-01' and timeperiodid<='2022-05-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_SaleABP_v2].* FROM [sales].[vw_SaleABP_v2]",
                  "where timeperiodid>='2022-01-01' and timeperiodid<='2022-05-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_SaleABP_2022_2",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_SaleABP_v2].* FROM [sales].[vw_SaleABP_v2]",
                "where timeperiodid>='2022-06-01'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_SaleABP_v2].* FROM [sales].[vw_SaleABP_v2]",
                  "where timeperiodid>='2022-06-01'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Costo ABP",
            "expression": "SUM([CostABP])",
            "formatString": "#,0"
          },
          {
            "name": "Margen ABP",
            "expression": "SUM([MarginABP])",
            "formatString": "#,0"
          },
          {
            "name": "Unidades ABP",
            "expression": "SUM([SaleQuantityABP])",
            "formatString": "#,0"
          },
          {
            "name": "Venta ABP",
            "expression": "SUM([SalesABP])",
            "formatString": "#,0"
          },
          {
            "name": "Unidades ABP Actual",
            "expression": "SUM([SaleQuantityABP])",
            "formatString": "#,0"
          },
          {
            "name": "Unidades ABP Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Unidades ABP Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Venta ABP Actual",
            "expression": "SUM([SalesABP])",
            "formatString": "#,0"
          },
          {
            "name": "Venta ABP Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Venta ABP Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Costo ABP Actual",
            "expression": "SUM([CostABP])",
            "formatString": "#,0"
          },
          {
            "name": "Costo ABP Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Costo ABP Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen ABP Actual",
            "expression": "SUM([MarginABP])",
            "formatString": "#,0"
          },
          {
            "name": "Margen ABP Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Margen ABP Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Costo Promedio ABP",
            "expression": [
              "",
              "",
              "var resultado= IF([Unidades ABP Actual]=0 || ISBLANK([Unidades ABP Actual]),BLANK(),",
              "CALCULATE([Costo ABP Actual]/[Unidades ABP Actual],FILTER(Tienda,Tienda[Agrupador Centro]<>\"D\" || Tienda[Tienda]<>\"Centro de Distribución Fashion\" || Tienda[Tienda]<>\"Centro de Distribución\")))",
              "",
              "return resultado"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen % ABP Actual",
            "expression": [
              "",
              "",
              "var resultado =",
              "if([Venta ABP Actual]=0 || ISBLANK([Venta ABP Actual]), BLANK(),[Margen ABP Actual]/[Venta ABP Actual])",
              "return resultado"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Precio Promedio ABP",
            "expression": [
              "",
              "var resultado =",
              "if([Unidades ABP Actual]=0 || ISBLANK([Unidades ABP Actual]),BLANK(),CALCULATE([Venta ABP Actual]/[Unidades ABP Actual],FILTER(Tienda,Tienda[Agrupador Centro]<>\"DC\")))",
              "return resultado"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Margen % ABP Anterior",
            "expression": [
              "",
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "return CALCULATE ([Margen % ABP Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [sales].[vw_SaleABP_v2].* FROM [sales].[vw_SaleABP_v2]",
              "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "vw_SaleABP"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_SaleABP_v2].* FROM [sales].[vw_SaleABP_v2]",
              "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Retail Venta",
        "columns": [
          {
            "name": "RetailDocumentId",
            "dataType": "int64",
            "sourceColumn": "RetailDocumentId",
            "sourceProviderType": "int"
          },
          {
            "name": "TimePeriodId",
            "dataType": "dateTime",
            "sourceColumn": "TimePeriodId",
            "formatString": "General Date",
            "sourceProviderType": "datetime2"
          },
          {
            "name": "Total",
            "dataType": "double",
            "sourceColumn": "Total",
            "sourceProviderType": "numeric"
          },
          {
            "name": "DocumentTypeId",
            "dataType": "int64",
            "sourceColumn": "DocumentTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "StoreId",
            "dataType": "int64",
            "sourceColumn": "StoreId",
            "sourceProviderType": "int"
          },
          {
            "name": "HourId",
            "dataType": "int64",
            "sourceColumn": "HourId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleOrganisationId",
            "dataType": "int64",
            "sourceColumn": "SaleOrganisationId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleChannelId",
            "dataType": "int64",
            "sourceColumn": "SaleChannelId",
            "sourceProviderType": "int"
          },
          {
            "name": "CustomerId",
            "dataType": "int64",
            "sourceColumn": "CustomerId",
            "sourceProviderType": "int"
          },
          {
            "name": "BrandId",
            "dataType": "int64",
            "sourceColumn": "BrandId"
          },
          {
            "name": "RetailDocumentId2",
            "dataType": "int64",
            "sourceColumn": "RetailDocumentId2"
          },
          {
            "name": "ProductGenericId",
            "dataType": "int64",
            "sourceColumn": "ProductGenericId"
          },
          {
            "name": "SellerId",
            "dataType": "int64",
            "sourceColumn": "SellerId"
          }
        ],
        "partitions": [
          {
            "name": "vw_Retail_Venta_2017_2021",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_RetailSale_v5].* FROM [sales].[vw_RetailSale_v5]",
                "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_RetailSale_v5].* FROM [sales].[vw_RetailSale_v5]",
                  "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Retail_Venta_2022_1",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_RetailSale_v5].* FROM [sales].[vw_RetailSale_v5]",
                "where timeperiodid>='2022-01-01' and timeperiodid<='2022-05-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_RetailSale_v5].* FROM [sales].[vw_RetailSale_v5]",
                  "where timeperiodid>='2022-01-01' and timeperiodid<='2022-05-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Retail_Venta_2022_2",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_RetailSale_v5].* FROM [sales].[vw_RetailSale_v5]",
                "where timeperiodid>='2022-06-01'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_RetailSale_v5].* FROM [sales].[vw_RetailSale_v5]",
                  "where timeperiodid>='2022-06-01'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Transacciones",
            "expression": " DISTINCTCOUNT('Retail Venta'[RetailDocumentId2])",
            "formatString": "#,0"
          },
          {
            "name": "Conversion",
            "expression": "'Retail Venta'[Transacciones]/'Retail Traffic'[Trafico]",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Venta Neta Retail",
            "expression": "SUM([Total])",
            "formatString": "#,0"
          },
          {
            "name": "Transacciones Actual",
            "expression": " [Transacciones]",
            "formatString": "#,0"
          },
          {
            "name": "Transacciones Actual WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE ([Transacciones],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Transacciones Actual MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE ([Transacciones],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Transacciones Actual QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE ([Transacciones],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Transacciones Actual YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE ([Transacciones],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Transacciones Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Transacciones],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Transacciones Anterior WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([Transacciones],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Transacciones Anterior MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([Transacciones],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Transacciones Anterior QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([Transacciones],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Transacciones Anterior YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([Transacciones],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Conversion Actual",
            "expression": "'Retail Venta'[Transacciones]/'Retail Traffic'[Trafico]",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Actual WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Actual MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Actual QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Actual YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Anterior WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Anterior MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Anterior QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Anterior YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE ([Conversion Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Transacciones Actual",
            "expression": [
              "",
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "var denominador = CALCULATE ([Transacciones Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "var numerador = [Transacciones Actual]",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Transacciones Actual MTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioMesFical])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador =  CALCULATE ([Transacciones Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "",
              "var fechainicio_2 = min(Periodo[Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Transacciones Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Transacciones Actual QTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Transacciones Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Q_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Transacciones Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Transacciones Actual WTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Transacciones Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[w_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Transacciones Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Transacciones Actual YTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioAnoFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Transacciones Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Y_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Transacciones Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Ecom Prev Week-1",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt1])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt1])",
              "",
              "var calculo =  CALCULATE ([Tasa Conversion Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %"
          },
          {
            "name": "Conversion Ecom Prev Week-2",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt2])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt2])",
              "",
              "var calculo =  CALCULATE ([Tasa Conversion Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %"
          },
          {
            "name": "Conversion Ecom Prev Week-3",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt3])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt3])",
              "",
              "var calculo =  CALCULATE ([Tasa Conversion Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %"
          },
          {
            "name": "Conversion Ecom Prev Week-4",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt4])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt4])",
              "",
              "var calculo =  CALCULATE ([Tasa Conversion Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %"
          },
          {
            "name": "Conversion Ecom Prev Week-5",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt5])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt5])",
              "",
              "var calculo =  CALCULATE ([Tasa Conversion Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %"
          },
          {
            "name": "Conversion Prev Week-1",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt1])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt1])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Prev Week-2",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt2])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt2])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Prev Week-3",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt3])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt3])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Prev Week-4",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt4])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt4])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Prev Week-5",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt5])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt5])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Prev Week-6",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt6])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt6])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Prev Week-7",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt7])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt7])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Prev Week-8",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt8])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt8])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Prev Week-9",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt9])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt9])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Prev Week-10",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt10])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt10])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Prev Week-11",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt11])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt11])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion Prev Week-12",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt12])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt12])",
              "",
              "var calculo =  CALCULATE ([Conversion],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Conversion AVG Prev Week-1_to_12",
            "expression": [
              "",
              "",
              "var calculo =( ",
              "IFERROR('Retail Venta'[Conversion Prev Week-1],0)+ ",
              "IFERROR('Retail Venta'[Conversion Prev Week-2],0)+ ",
              "IFERROR('Retail Venta'[Conversion Prev Week-3],0)+ ",
              "IFERROR('Retail Venta'[Conversion Prev Week-4],0)+ ",
              "IFERROR('Retail Venta'[Conversion Prev Week-5],0)+ ",
              "IFERROR('Retail Venta'[Conversion Prev Week-6],0)+ ",
              "IFERROR('Retail Venta'[Conversion Prev Week-7],0)+ ",
              "IFERROR('Retail Venta'[Conversion Prev Week-8],0)+ ",
              "IFERROR('Retail Venta'[Conversion Prev Week-9],0)+ ",
              "IFERROR('Retail Venta'[Conversion Prev Week-10],0)+",
              "IFERROR('Retail Venta'[Conversion Prev Week-11],0)+",
              "IFERROR('Retail Venta'[Conversion Prev Week-12],0)) / 12",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Transacciones Ecom",
            "expression": [
              "",
              "",
              "SWITCH(",
              "    SELECTEDVALUE('Org Venta'[Pais]),",
              "    \"Chile\",calculate([Transacciones Ecom Chile]),",
              "    \"Peru\",calculate([Transacciones Ecom Peru])",
              ")"
            ]
          },
          {
            "name": "Transacciones Ecom Chile",
            "expression": [
              " ",
              "SWITCH(",
              " SELECTEDVALUE(Marca[Marca]),",
              "\"Levis\",calculate([Transacciones],'Retail Venta'[StoreId]=249),",
              "\"Dockers\",calculate([Transacciones],'Retail Venta'[StoreId]=32743),",
              " BLANK()",
              ")",
              ""
            ]
          },
          {
            "name": "Transacciones Ecom Peru",
            "expression": [
              " ",
              "SWITCH(",
              "        SELECTEDVALUE(Marca[Marca]),",
              "            \"Levis\",calculate([Transacciones],'Retail Venta'[StoreId]=72127),",
              "            \"Dockers\",calculate([Transacciones],'Retail Venta'[StoreId]=72402)",
              "            )"
            ]
          },
          {
            "name": "Tasa Conversion",
            "expression": [
              " ",
              "",
              "var numerador = Venta[TransaccionesSitio]",
              "var denominador = Google_Analytics[G_Sessions]",
              "",
              "var calculo = IF(numerador = 0, BLANK() , if(denominador = 0, BLANK(), divide(numerador,denominador)))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %"
          },
          {
            "name": "Tasa Conversion Actual WTD",
            "expression": [
              " ",
              "var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE ([Conversion Ecom Prev Week-4],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %"
          },
          {
            "name": "Conversion Ecom Prev Week-6",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt6])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt6])",
              "",
              "var calculo =  CALCULATE ([Tasa Conversion Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %"
          },
          {
            "name": "Conversion Ecom Prev Week-7",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt7])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt7])",
              "",
              "var calculo =  CALCULATE ([Tasa Conversion Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %"
          },
          {
            "name": "Tasa Conversion Ecom Actual WTD",
            "expression": [
              " ",
              "var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE ([Tasa Conversion Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %"
          },
          {
            "name": "Tasa Conversion Ecom",
            "expression": [
              " ",
              "",
              "var numerador = 'Retail Venta'[Transacciones Ecom]",
              "var denominador = Google_Analytics[G_Sessions]",
              "",
              "var calculo = IF(numerador = 0, BLANK() , if(denominador = 0, BLANK(), divide(numerador,denominador)))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.00 %;-#,0.00 %;#,0.00 %"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [sales].[vw_RetailSale_v5].* FROM [sales].[vw_RetailSale_v5]",
              "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "vw_RetailSale"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_RetailSale_v5].* FROM [sales].[vw_RetailSale_v5]",
              "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Retail Traffic",
        "columns": [
          {
            "name": "StoreId",
            "dataType": "int64",
            "sourceColumn": "StoreId",
            "sourceProviderType": "int"
          },
          {
            "name": "TimePeriodId",
            "dataType": "dateTime",
            "sourceColumn": "TimePeriodId",
            "formatString": "General Date",
            "sourceProviderType": "datetime2"
          },
          {
            "name": "Traffic",
            "dataType": "int64",
            "sourceColumn": "Traffic",
            "formatString": "0",
            "sourceProviderType": "int"
          },
          {
            "name": "HourId",
            "dataType": "int64",
            "sourceColumn": "HourId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleOrganisationId",
            "dataType": "int64",
            "sourceColumn": "SaleOrganisationId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleChannelId",
            "dataType": "int64",
            "sourceColumn": "SaleChannelId",
            "sourceProviderType": "int"
          }
        ],
        "partitions": [
          {
            "name": "vw_Retail_Traffic_2017_2021",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_RetailTraffic_v2].* FROM [sales].[vw_RetailTraffic_v2]",
                "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_RetailTraffic_v2].* FROM [sales].[vw_RetailTraffic_v2]",
                  "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Retail_Traffic_2022_1",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_RetailTraffic_v2].* FROM [sales].[vw_RetailTraffic_v2]",
                "where timeperiodid>='2022-01-01'  and timeperiodid<='2022-05-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_RetailTraffic_v2].* FROM [sales].[vw_RetailTraffic_v2]",
                  "where timeperiodid>='2022-01-01'  and timeperiodid<='2022-05-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Retail_Traffic_2022_2",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_RetailTraffic_v2].* FROM [sales].[vw_RetailTraffic_v2]",
                "where timeperiodid>='2022-06-01'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_RetailTraffic_v2].* FROM [sales].[vw_RetailTraffic_v2]",
                  "where timeperiodid>='2022-06-01'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Trafico",
            "expression": "SUM([Traffic])",
            "formatString": "#,0"
          },
          {
            "name": "Trafico Actual",
            "expression": "SUM([Traffic])",
            "formatString": "#,0"
          },
          {
            "name": "Trafico Actual WTD",
            "expression": [
              " var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE (sum([Traffic]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Actual MTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioMesFical])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (SUM([Traffic]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Actual QTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([Traffic]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Actual YTD",
            "expression": [
              "var fechainicio = min(Periodo[InicioAnoFiscal])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "return CALCULATE (sum([Traffic]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Anterior",
            "expression": [
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "",
              "return CALCULATE (sum([Traffic]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Anterior WTD",
            "expression": [
              "var fechainicio = min(Periodo[w_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([Traffic]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Anterior MTD",
            "expression": [
              "var fechainicio = min(Periodo[Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([Traffic]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Anterior QTD",
            "expression": [
              "var fechainicio = min(Periodo[Q_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([Traffic]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Anterior YTD",
            "expression": [
              "var fechainicio = min(Periodo[Y_Ant1])",
              "var fechafinal  = max(Periodo[Ant2])",
              "return CALCULATE (SUM([Traffic]),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Var % a Trafico Actual",
            "expression": [
              "",
              "",
              "var fechainicio = min(Periodo[Ant2])",
              "var fechafinal  = max(Periodo[Ant2])",
              "",
              "var denominador = CALCULATE ([Trafico Actual],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "var numerador = [Trafico Actual]",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Trafico Actual MTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioMesFical])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador =  CALCULATE ([Trafico Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "",
              "var fechainicio_2 = min(Periodo[Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Trafico Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Trafico Actual QTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioQuarterFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Trafico Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Q_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Trafico Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Trafico Actual WTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Trafico Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[w_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Trafico Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Var % a Trafico Actual YTD",
            "expression": [
              "",
              "",
              "var fechainicio_1 = min(Periodo[InicioAnoFiscal])",
              "var fechafinal_1  = max(Periodo[Time Period Id])",
              "var numerador = CALCULATE ([Trafico Actual],datesbetween(Periodo[Time Period Id],fechainicio_1,fechafinal_1))",
              "",
              "var fechainicio_2 = min(Periodo[Y_Ant1])",
              "var fechafinal_2  = max(Periodo[Ant2])",
              "var denominador = CALCULATE ([Trafico Actual],datesbetween(Periodo[Time Period Id],fechainicio_2,fechafinal_2))",
              "",
              "var calculo = IF(or(numerador = BLANK(),numerador = 0) ,BLANK() ,divide(numerador-denominador,denominador))",
              "",
              "return calculo"
            ],
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "name": "Trafico Actual Tailor",
            "expression": [
              "",
              "IF( NOT( ISBLANK( [Venta Actual] )),",
              "\tSUM([Traffic]))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Anterior Tailor",
            "expression": [
              "",
              "IF( NOT( ISBLANK( [Venta Anterior] )),",
              "\tSUM([Traffic]))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Var % a Trafico Actual Tailor",
            "expression": [
              "",
              "IF( NOT( ISBLANK( [Venta Actual] )),",
              "\t[Var % a Trafico Actual] )"
            ],
            "formatString": "0.0 %;-0.0 %;0.0 %"
          },
          {
            "name": "Trafico Ecom Prev Week-1",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt1])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt1])",
              "",
              "var calculo =  CALCULATE ([Trafico Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Ecom Prev Week-2",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt2])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt2])",
              "",
              "var calculo =  CALCULATE ([Trafico Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Ecom Prev Week-3",
            "expression": [
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt3])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt3])",
              "",
              "var calculo =  CALCULATE ([Trafico Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Ecom Prev Week-4",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt4])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt4])",
              "",
              "var calculo =  CALCULATE ([Trafico Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Ecom Prev Week-5",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt5])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt5])",
              "",
              "var calculo =  CALCULATE ([Trafico Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-1",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt1])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt1])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-2",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt2])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt2])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-3",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt3])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt3])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-4",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt4])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt4])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-5",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt5])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt5])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-6",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt6])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt6])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-7",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt7])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt7])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-8",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt8])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt8])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-9",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt9])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt9])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-10",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt10])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt10])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-11",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt11])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt11])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Prev Week-12",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt12])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt12])",
              "",
              "var calculo =  CALCULATE ([Trafico],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico AVG Prev Week-1_to_12",
            "expression": [
              "",
              "",
              "var calculo =( ",
              "IFERROR('Retail Traffic'[Trafico Prev Week-1],0)+ ",
              "IFERROR('Retail Traffic'[Trafico Prev Week-2],0)+ ",
              "IFERROR('Retail Traffic'[Trafico Prev Week-3],0)+ ",
              "IFERROR('Retail Traffic'[Trafico Prev Week-4],0)+ ",
              "IFERROR('Retail Traffic'[Trafico Prev Week-5],0)+ ",
              "IFERROR('Retail Traffic'[Trafico Prev Week-6],0)+ ",
              "IFERROR('Retail Traffic'[Trafico Prev Week-7],0)+ ",
              "IFERROR('Retail Traffic'[Trafico Prev Week-8],0)+ ",
              "IFERROR('Retail Traffic'[Trafico Prev Week-9],0)+ ",
              "IFERROR('Retail Traffic'[Trafico Prev Week-10],0)+",
              "IFERROR('Retail Traffic'[Trafico Prev Week-11],0)+",
              "IFERROR('Retail Traffic'[Trafico Prev Week-12],0)) / 12",
              "",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Ecom",
            "expression": [
              "",
              "SUM(Google_Analytics[Sessions])"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Ecom Actual WTD",
            "expression": [
              "",
              "var fechainicio = min(Periodo[Fiscal_Week_Date])",
              "var fechafinal  = max(Periodo[Time Period Id])",
              "",
              "var calculo =  CALCULATE ('Retail Traffic'[Trafico Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Ecom Prev Week-6",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt6])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt6])",
              "",
              "var calculo =  CALCULATE ([Trafico Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Trafico Ecom Prev Week-7",
            "expression": [
              "",
              "",
              "var fechainicio = MIN(Periodo[FechaIniWeekAnt7])",
              "var fechafinal  = MAX(Periodo[FechaFinWeekAnt7])",
              "",
              "var calculo =  CALCULATE ([Trafico Ecom],datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
              "return calculo"
            ],
            "formatString": "#,0"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [sales].[vw_RetailTraffic_v2].* FROM [sales].[vw_RetailTraffic_v2]",
              "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "vw_RetailTraffic"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_RetailTraffic_v2].* FROM [sales].[vw_RetailTraffic_v2]",
              "where timeperiodid>='2017-01-01' and timeperiodid<='2021-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Inventario",
        "columns": [
          {
            "name": "BrandId",
            "dataType": "int64",
            "sourceColumn": "BrandId",
            "sourceProviderType": "int"
          },
          {
            "name": "ClothingPieceId",
            "dataType": "int64",
            "sourceColumn": "ClothingPieceId",
            "sourceProviderType": "int"
          },
          {
            "name": "ClothingPieceTypeId",
            "dataType": "int64",
            "sourceColumn": "ClothingPieceTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "GenderId",
            "dataType": "int64",
            "sourceColumn": "GenderId",
            "sourceProviderType": "int"
          },
          {
            "name": "LineId",
            "dataType": "int64",
            "sourceColumn": "LineId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductId",
            "dataType": "int64",
            "sourceColumn": "ProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "QualityId",
            "dataType": "int64",
            "sourceColumn": "QualityId",
            "sourceProviderType": "int"
          },
          {
            "name": "ShimId",
            "dataType": "int64",
            "sourceColumn": "ShimId",
            "sourceProviderType": "int"
          },
          {
            "name": "Stock",
            "dataType": "double",
            "sourceColumn": "Stock",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StoreId",
            "dataType": "int64",
            "sourceColumn": "StoreId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductFashionGradeId",
            "dataType": "int64",
            "sourceColumn": "ProductFashionGradeId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductFashionSeasonId",
            "dataType": "int64",
            "sourceColumn": "ProductFashionSeasonId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductGenericId",
            "dataType": "int64",
            "sourceColumn": "ProductGenericId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductModelId",
            "dataType": "int64",
            "sourceColumn": "ProductModelId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleOrganisationId",
            "dataType": "int64",
            "sourceColumn": "SaleOrganisationId",
            "sourceProviderType": "int"
          },
          {
            "name": "WarehouseId",
            "dataType": "int64",
            "sourceColumn": "WarehouseId",
            "sourceProviderType": "int"
          },
          {
            "name": "Coverage",
            "dataType": "double",
            "sourceColumn": "Coverage",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StockValued",
            "dataType": "double",
            "sourceColumn": "StockValued",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StockAvailable",
            "dataType": "double",
            "sourceColumn": "StockAvailable",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StockConf",
            "dataType": "double",
            "sourceColumn": "StockConf",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StockDelivery",
            "dataType": "double",
            "sourceColumn": "StockDelivery",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StockLocked",
            "dataType": "double",
            "sourceColumn": "StockLocked",
            "sourceProviderType": "decimal"
          },
          {
            "name": "CustomerId",
            "dataType": "int64",
            "sourceColumn": "CustomerId",
            "sourceProviderType": "int"
          }
        ],
        "partitions": [
          {
            "name": "vw_Inventory",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT [sales].[vw_Inventory_v2].* FROM [sales].[vw_Inventory_v2]",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Inventory_v2].* FROM [sales].[vw_Inventory_v2]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Inventario",
            "expression": "SUM([Stock])",
            "formatString": "#,0"
          },
          {
            "name": "Inventario Valorizado",
            "expression": "SUM([StockValued])",
            "formatString": "#,0"
          },
          {
            "name": "Stock Disponible",
            "expression": "SUM([StockAvailable])",
            "formatString": "#,0"
          },
          {
            "name": "Stock Conf",
            "expression": "SUM([StockConf])",
            "formatString": "#,0"
          },
          {
            "name": "Stock Entrega",
            "expression": "SUM([StockDelivery])",
            "formatString": "#,0"
          },
          {
            "name": "Stock Bloqueado",
            "expression": "SUM([StockLocked])",
            "formatString": "#,0"
          },
          {
            "name": "Stock_",
            "expression": "SUM([Stock])",
            "formatString": "#,0"
          },
          {
            "name": "Semana_Inventario",
            "expression": [
              "",
              "",
              "var denominador= CALCULATE(",
              "    [Unidades],",
              "     DATESBETWEEN(",
              "        Periodo[Time Period Id],",
              "      MAXX( DATEADD(Periodo[Time Period Id], -28, DAY), [Time Period Id]),",
              "        MAX(Periodo[Time Period Id])",
              "    )",
              "   ",
              ")",
              "",
              "var numerador=Inventario[Inventario]",
              "",
              "var resultado = if(or(denominador=BLANK(),denominador=0),BLANK(),(DIVIDE(numerador,denominador))/4)",
              "",
              "return resultado"
            ],
            "formatString": "0.0"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT [sales].[vw_Inventory_v2].* FROM [sales].[vw_Inventory_v2]"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "vw_Inventory"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_Inventory_v2].* FROM [sales].[vw_Inventory_v2]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "Inventario Historico",
        "columns": [
          {
            "name": "BrandId",
            "dataType": "int64",
            "sourceColumn": "BrandId",
            "sourceProviderType": "int"
          },
          {
            "name": "ClothingPieceId",
            "dataType": "int64",
            "sourceColumn": "ClothingPieceId",
            "sourceProviderType": "int"
          },
          {
            "name": "ClothingPieceTypeId",
            "dataType": "int64",
            "sourceColumn": "ClothingPieceTypeId",
            "sourceProviderType": "int"
          },
          {
            "name": "Coverage",
            "dataType": "double",
            "sourceColumn": "Coverage",
            "sourceProviderType": "decimal"
          },
          {
            "name": "GenderId",
            "dataType": "int64",
            "sourceColumn": "GenderId",
            "sourceProviderType": "int"
          },
          {
            "name": "LineId",
            "dataType": "int64",
            "sourceColumn": "LineId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductId",
            "dataType": "int64",
            "sourceColumn": "ProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "QualityId",
            "dataType": "int64",
            "sourceColumn": "QualityId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleQuantity",
            "dataType": "double",
            "sourceColumn": "SaleQuantity",
            "sourceProviderType": "decimal"
          },
          {
            "name": "ShimId",
            "dataType": "int64",
            "sourceColumn": "ShimId",
            "sourceProviderType": "int"
          },
          {
            "name": "Stock",
            "dataType": "double",
            "sourceColumn": "Stock",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StoreId",
            "dataType": "int64",
            "sourceColumn": "StoreId",
            "sourceProviderType": "int"
          },
          {
            "name": "TimePeriodId",
            "dataType": "dateTime",
            "sourceColumn": "TimePeriodId",
            "formatString": "General Date",
            "sourceProviderType": "datetime2"
          },
          {
            "name": "ProductFashionGradeId",
            "dataType": "int64",
            "sourceColumn": "ProductFashionGradeId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductFashionSeasonId",
            "dataType": "int64",
            "sourceColumn": "ProductFashionSeasonId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductGenericId",
            "dataType": "int64",
            "sourceColumn": "ProductGenericId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductModelId",
            "dataType": "int64",
            "sourceColumn": "ProductModelId",
            "sourceProviderType": "int"
          },
          {
            "name": "NetSale",
            "dataType": "double",
            "sourceColumn": "NetSale",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StockValued",
            "dataType": "double",
            "sourceColumn": "StockValued",
            "sourceProviderType": "decimal"
          },
          {
            "name": "NetSaleUSD",
            "dataType": "double",
            "sourceColumn": "NetSaleUSD",
            "sourceProviderType": "decimal"
          },
          {
            "name": "SaleOrganisationId",
            "dataType": "int64",
            "sourceColumn": "SaleOrganisationId",
            "sourceProviderType": "int"
          },
          {
            "name": "WarehouseId",
            "dataType": "int64",
            "sourceColumn": "WarehouseId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleChannelId",
            "dataType": "int64",
            "sourceColumn": "SaleChannelId",
            "sourceProviderType": "int"
          },
          {
            "name": "CustomerId",
            "dataType": "int64",
            "sourceColumn": "CustomerId",
            "sourceProviderType": "int"
          },
          {
            "name": "Margin",
            "dataType": "double",
            "sourceColumn": "Margin",
            "sourceProviderType": "decimal"
          },
          {
            "name": "SaleCost",
            "dataType": "double",
            "sourceColumn": "SaleCost",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StockAvailable",
            "dataType": "double",
            "sourceColumn": "StockAvailable",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StockConf",
            "dataType": "double",
            "sourceColumn": "StockConf",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StockDelivery",
            "dataType": "double",
            "sourceColumn": "StockDelivery",
            "sourceProviderType": "decimal"
          },
          {
            "name": "StockLocked",
            "dataType": "double",
            "sourceColumn": "StockLocked",
            "sourceProviderType": "decimal"
          }
        ],
        "partitions": [
          {
            "name": "vw_Inventario_Historico_2020_2021",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_StoreCoverage_v4].* FROM [sales].[vw_StoreCoverage_v4]",
                "where timeperiodid>='2020-01-01' and timeperiodid<='2021-12-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_StoreCoverage_v4].* FROM [sales].[vw_StoreCoverage_v4]",
                  "where timeperiodid>='2020-01-01' and timeperiodid<='2021-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Inventario_Historico_2022_1_2_3",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_StoreCoverage_v4].* FROM [sales].[vw_StoreCoverage_v4]",
                "where timeperiodid>='2022-02-01' and timeperiodid<='2022-03-31'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_StoreCoverage_v4].* FROM [sales].[vw_StoreCoverage_v4]",
                  "where timeperiodid>='2022-02-01' and timeperiodid<='2022-03-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Inventario_Historico_2022_4",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_StoreCoverage_v4].* FROM [sales].[vw_StoreCoverage_v4]",
                "where timeperiodid>='2022-04-01' and timeperiodid<='2022-06-30'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_StoreCoverage_v4].* FROM [sales].[vw_StoreCoverage_v4]",
                  "where timeperiodid>='2022-04-01' and timeperiodid<='2022-06-30'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "vw_Inventario_Historico_2022_5",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [sales].[vw_StoreCoverage_v4].* FROM [sales].[vw_StoreCoverage_v4]",
                "where timeperiodid>='2022-07-01'"
              ],
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_StoreCoverage_v4].* FROM [sales].[vw_StoreCoverage_v4]",
                  "where timeperiodid>='2022-07-01'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Hist Inventario",
            "expression": "SUM([Stock])",
            "formatString": "#,0"
          },
          {
            "name": "Hist Inventario Valorizado",
            "expression": "SUM([StockValued])",
            "formatString": "#,0"
          },
          {
            "name": "Hist Stock Disponible",
            "expression": "SUM([StockAvailable])",
            "formatString": "#,0"
          },
          {
            "name": "Hist Stock Conf",
            "expression": "SUM([StockConf])",
            "formatString": "#,0"
          },
          {
            "name": "Hist Stock Entrega",
            "expression": "SUM([StockDelivery])",
            "formatString": "#,0"
          },
          {
            "name": "Hist Stock Bloqueado",
            "expression": "SUM([StockLocked])",
            "formatString": "#,0"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [sales].[vw_StoreCoverage_v4].* FROM [sales].[vw_StoreCoverage_v4]",
              "where timeperiodid>='2020-01-01' and timeperiodid<='2021-12-31'"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "vw_StoreCoverage"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_StoreCoverage_v4].* FROM [sales].[vw_StoreCoverage_v4]",
              "where timeperiodid>='2020-01-01' and timeperiodid<='2021-12-31'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Google_Analytics",
        "columns": [
          {
            "name": "fecha",
            "dataType": "dateTime",
            "sourceColumn": "fecha"
          },
          {
            "name": "activeUsers",
            "dataType": "int64",
            "sourceColumn": "activeUsers"
          },
          {
            "name": "engagedSessions",
            "dataType": "int64",
            "sourceColumn": "engagedSessions"
          },
          {
            "name": "eventCount",
            "dataType": "int64",
            "sourceColumn": "eventCount"
          },
          {
            "name": "newUsers",
            "dataType": "int64",
            "sourceColumn": "newUsers"
          },
          {
            "name": "Sessions",
            "dataType": "int64",
            "sourceColumn": "Sessions"
          },
          {
            "name": "totalRevenue",
            "dataType": "double",
            "sourceColumn": "totalRevenue"
          },
          {
            "name": "totalUsers",
            "dataType": "int64",
            "sourceColumn": "totalUsers"
          },
          {
            "name": "marca",
            "dataType": "string",
            "sourceColumn": "marca"
          },
          {
            "name": "Brandid",
            "dataType": "int64",
            "sourceColumn": "Brandid"
          },
          {
            "name": "SaleOrganisationId",
            "dataType": "int64",
            "sourceColumn": "SaleOrganisationId"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/edw-prd-ondemand sql azuresynapse net;consumption\",",
                "    google_analytics_vw_google_analytics = Source{[Schema=\"google_analytics\",Item=\"vw_google_analytics\"]}[Data]",
                "in",
                "    google_analytics_vw_google_analytics"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "G_UsuariosActivos",
            "expression": "sum(Google_Analytics[activeUsers])",
            "formatString": "#,0"
          },
          {
            "name": "G_EngagedSessions",
            "expression": "sum(Google_Analytics[engagedSessions])",
            "formatString": "#,0"
          },
          {
            "name": "G_ContadorEventos",
            "expression": "sum(Google_Analytics[eventCount])",
            "formatString": "#,0"
          },
          {
            "name": "G_UsuariosNuevos",
            "expression": "sum(Google_Analytics[newUsers])",
            "formatString": "#,0"
          },
          {
            "name": "G_Sessions",
            "expression": "sum(Google_Analytics[Sessions])",
            "formatString": "#,0"
          },
          {
            "name": "G_TotalVenta",
            "expression": "sum(Google_Analytics[totalRevenue])",
            "formatString": "#,0"
          },
          {
            "name": "G_TotalUsuarios",
            "expression": "sum(Google_Analytics[totalUsers])",
            "formatString": "#,0"
          },
          {
            "name": "TasaRebote",
            "expression": "([G_Sessions]-[G_EngagedSessions])/[G_Sessions]",
            "formatString": "0.0 %;-0.0 %;0.0 %"
          }
        ]
      },
      {
        "name": "__Reportes_PowerBI",
        "columns": [
          {
            "name": "Column_1",
            "dataType": "int64",
            "sourceColumn": "Column_1",
            "sourceProviderType": "int"
          }
        ],
        "partitions": [
          {
            "name": "__Reportes_PowerBI",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[__Reportes_PowerBI].* FROM [sales].[__Reportes_PowerBI] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[__Reportes_PowerBI].* FROM [sales].[__Reportes_PowerBI] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "__Reportes_PowerBI"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Calculos Temporales",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "Actual",
              "expression": "SELECTEDMEASURE()"
            },
            {
              "name": "Actual Ant",
              "expression": [
                "var fechainicio = min(Periodo[Ant2])",
                "var fechafinal  = max(Periodo[Ant2])",
                "",
                "",
                "return CALCULATE (SELECTEDMEASURE(),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
              ]
            },
            {
              "name": "MTD",
              "expression": [
                "var fechainicio = min(Periodo[InicioMesFical])",
                "var fechafinal  = max(Periodo[Time Period Id])",
                "",
                "return CALCULATE (SELECTEDMEASURE(),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
              ]
            },
            {
              "name": "MTD Ant",
              "expression": [
                "var fechainicio = min(Periodo[Ant1])",
                "var fechafinal  = max(Periodo[Ant2])",
                "",
                "",
                "return CALCULATE (SELECTEDMEASURE(),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
              ]
            },
            {
              "name": "QTD",
              "expression": [
                "var fechainicio = min(Periodo[InicioQuarterFiscal])",
                "var fechafinal  = max(Periodo[Time Period Id])",
                "",
                "return CALCULATE (SELECTEDMEASURE(),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
              ]
            },
            {
              "name": "QTD Ant",
              "expression": [
                "var fechainicio = min(Periodo[Q_Ant1])",
                "var fechafinal  = max(Periodo[Ant2])",
                "",
                "",
                "return CALCULATE (SELECTEDMEASURE(),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
              ]
            },
            {
              "name": "WTD",
              "expression": [
                "var fechainicio = min(Periodo[Fiscal_Week_Date])",
                "var fechafinal  = max(Periodo[Time Period Id])",
                "",
                "var calculo =  CALCULATE (SELECTEDMEASURE(),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))",
                "return calculo"
              ]
            },
            {
              "name": "WTD Ant",
              "expression": [
                "var fechainicio = min(Periodo[w_Ant1])",
                "var fechafinal  = max(Periodo[Ant2])",
                "",
                "",
                "return CALCULATE (SELECTEDMEASURE(),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
              ]
            },
            {
              "name": "YTD",
              "expression": [
                "var fechainicio = min(Periodo[InicioAnoFiscal])",
                "var fechafinal  = max(Periodo[Time Period Id])",
                "",
                "return CALCULATE (SELECTEDMEASURE(),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
              ]
            },
            {
              "name": "YTD Ant",
              "expression": [
                "var fechainicio = min(Periodo[Y_Ant1])",
                "var fechafinal  = max(Periodo[Ant2])",
                "",
                "",
                "return CALCULATE (SELECTEDMEASURE(),datesbetween(Periodo[Time Period Id],fechainicio,fechafinal))"
              ]
            }
          ]
        },
        "columns": [
          {
            "name": "Calculo",
            "dataType": "string",
            "sourceColumn": "Name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "Vendedor",
        "columns": [
          {
            "name": "Seller Id",
            "dataType": "int64",
            "sourceColumn": "SellerId",
            "sourceProviderType": "int"
          },
          {
            "name": "Pais",
            "dataType": "string",
            "sourceColumn": "Pais",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Codigo Org Venta",
            "dataType": "int64",
            "sourceColumn": "COD_SOCIEDAD",
            "sourceProviderType": "int"
          },
          {
            "name": "Identificador",
            "dataType": "string",
            "sourceColumn": "Identifier",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Nombres",
            "dataType": "string",
            "sourceColumn": "Name",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Apellidos",
            "dataType": "string",
            "sourceColumn": "LastName",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Enabled",
            "dataType": "int64",
            "sourceColumn": "Enabled",
            "sourceProviderType": "int"
          },
          {
            "name": "Descripcion Posicion",
            "dataType": "string",
            "sourceColumn": "PositionDescription",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Email",
            "dataType": "string",
            "sourceColumn": "Email",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "ContractDate",
            "dataType": "dateTime",
            "sourceColumn": "ContractDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime2"
          },
          {
            "name": "EndContractDate",
            "dataType": "dateTime",
            "sourceColumn": "EndContractDate",
            "formatString": "General Date",
            "sourceProviderType": "datetime2"
          },
          {
            "name": "Sale Organisation Id",
            "dataType": "int64",
            "sourceColumn": "SaleOrganisationId",
            "sourceProviderType": "int"
          },
          {
            "name": "Nombre Completo",
            "dataType": "string",
            "sourceColumn": "NameLastName"
          }
        ],
        "partitions": [
          {
            "name": "Seller",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[Seller].* FROM [sales].[Seller] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"TableWidgetSerialization\"><AnnotationContent><![CDATA[<?xml version=\"1.0\"?>",
                  "<TableWidgetGridSerialization xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">",
                  "  <ColumnSuggestedType />",
                  "  <ColumnFormat />",
                  "  <ColumnAccuracy />",
                  "  <ColumnCurrencySymbol />",
                  "  <ColumnPositivePattern />",
                  "  <ColumnNegativePattern />",
                  "  <ColumnWidths>",
                  "    <item>",
                  "      <key>",
                  "        <string>SellerId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>66</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Pais</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>49</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>COD_SOCIEDAD</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>110</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Identifier</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>74</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Name</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>57</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>LastName</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>77</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Enabled</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>68</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>PositionDescription</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>120</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Email</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>54</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>ContractDate</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>95</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>EndContractDate</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>113</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SaleOrganisationId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>121</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>NameLastName</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>104</int>",
                  "      </value>",
                  "    </item>",
                  "  </ColumnWidths>",
                  "  <ColumnDisplayIndex>",
                  "    <item>",
                  "      <key>",
                  "        <string>SellerId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>0</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Pais</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>1</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>COD_SOCIEDAD</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>2</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Identifier</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>3</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Name</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>4</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>LastName</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>5</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Enabled</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>6</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>PositionDescription</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>7</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Email</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>8</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>ContractDate</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>9</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>EndContractDate</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>10</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SaleOrganisationId</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>11</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>NameLastName</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>12</int>",
                  "      </value>",
                  "    </item>",
                  "  </ColumnDisplayIndex>",
                  "  <ColumnFrozen />",
                  "  <ColumnChecked>",
                  "    <item>",
                  "      <key>",
                  "        <string>NameLastName</string>",
                  "      </key>",
                  "      <value>",
                  "        <boolean>true</boolean>",
                  "      </value>",
                  "    </item>",
                  "  </ColumnChecked>",
                  "  <ColumnFilter />",
                  "  <SelectionFilter />",
                  "  <FilterParameters />",
                  "  <IsSortDescending>false</IsSortDescending>",
                  "</TableWidgetGridSerialization>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[Seller].* FROM [sales].[Seller] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Seller"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          },
          {
            "name": "TableWidgetSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"TableWidgetSerialization\"><AnnotationContent><![CDATA[<?xml version=\"1.0\"?>",
              "<TableWidgetGridSerialization xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">",
              "  <ColumnSuggestedType />",
              "  <ColumnFormat />",
              "  <ColumnAccuracy />",
              "  <ColumnCurrencySymbol />",
              "  <ColumnPositivePattern />",
              "  <ColumnNegativePattern />",
              "  <ColumnWidths>",
              "    <item>",
              "      <key>",
              "        <string>SellerId</string>",
              "      </key>",
              "      <value>",
              "        <int>66</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Pais</string>",
              "      </key>",
              "      <value>",
              "        <int>49</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>COD_SOCIEDAD</string>",
              "      </key>",
              "      <value>",
              "        <int>110</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Identifier</string>",
              "      </key>",
              "      <value>",
              "        <int>74</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Name</string>",
              "      </key>",
              "      <value>",
              "        <int>57</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>LastName</string>",
              "      </key>",
              "      <value>",
              "        <int>77</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Enabled</string>",
              "      </key>",
              "      <value>",
              "        <int>68</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>PositionDescription</string>",
              "      </key>",
              "      <value>",
              "        <int>120</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Email</string>",
              "      </key>",
              "      <value>",
              "        <int>54</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>ContractDate</string>",
              "      </key>",
              "      <value>",
              "        <int>95</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>EndContractDate</string>",
              "      </key>",
              "      <value>",
              "        <int>113</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SaleOrganisationId</string>",
              "      </key>",
              "      <value>",
              "        <int>121</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>NameLastName</string>",
              "      </key>",
              "      <value>",
              "        <int>104</int>",
              "      </value>",
              "    </item>",
              "  </ColumnWidths>",
              "  <ColumnDisplayIndex>",
              "    <item>",
              "      <key>",
              "        <string>SellerId</string>",
              "      </key>",
              "      <value>",
              "        <int>0</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Pais</string>",
              "      </key>",
              "      <value>",
              "        <int>1</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>COD_SOCIEDAD</string>",
              "      </key>",
              "      <value>",
              "        <int>2</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Identifier</string>",
              "      </key>",
              "      <value>",
              "        <int>3</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Name</string>",
              "      </key>",
              "      <value>",
              "        <int>4</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>LastName</string>",
              "      </key>",
              "      <value>",
              "        <int>5</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Enabled</string>",
              "      </key>",
              "      <value>",
              "        <int>6</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>PositionDescription</string>",
              "      </key>",
              "      <value>",
              "        <int>7</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Email</string>",
              "      </key>",
              "      <value>",
              "        <int>8</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>ContractDate</string>",
              "      </key>",
              "      <value>",
              "        <int>9</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>EndContractDate</string>",
              "      </key>",
              "      <value>",
              "        <int>10</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SaleOrganisationId</string>",
              "      </key>",
              "      <value>",
              "        <int>11</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>NameLastName</string>",
              "      </key>",
              "      <value>",
              "        <int>12</int>",
              "      </value>",
              "    </item>",
              "  </ColumnDisplayIndex>",
              "  <ColumnFrozen />",
              "  <ColumnChecked>",
              "    <item>",
              "      <key>",
              "        <string>NameLastName</string>",
              "      </key>",
              "      <value>",
              "        <boolean>true</boolean>",
              "      </value>",
              "    </item>",
              "  </ColumnChecked>",
              "  <ColumnFilter />",
              "  <SelectionFilter />",
              "  <FilterParameters />",
              "  <IsSortDescending>false</IsSortDescending>",
              "</TableWidgetGridSerialization>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Libro de Asistencia",
        "columns": [
          {
            "name": "Fecha",
            "dataType": "dateTime",
            "sourceColumn": "Date",
            "formatString": "General Date",
            "sourceProviderType": "date"
          },
          {
            "name": "Pais",
            "dataType": "string",
            "sourceColumn": "Pais",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "Sale Organisation Id",
            "dataType": "int64",
            "sourceColumn": "SaleOrganisationId",
            "sourceProviderType": "int"
          },
          {
            "name": "Seller Id",
            "dataType": "int64",
            "sourceColumn": "SellerId",
            "sourceProviderType": "int"
          },
          {
            "name": "Identificador",
            "dataType": "string",
            "sourceColumn": "Identifier",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "WorkedHours",
            "dataType": "double",
            "sourceColumn": "WorkedHours",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Trabajado",
            "dataType": "string",
            "sourceColumn": "Worked",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "NonWorkedHours",
            "dataType": "double",
            "sourceColumn": "NonWorkedHours",
            "sourceProviderType": "decimal"
          },
          {
            "name": "Descripcion Grupo",
            "dataType": "string",
            "sourceColumn": "GroupDescription",
            "sourceProviderType": "nvarchar"
          }
        ],
        "partitions": [
          {
            "name": "vw_AttendanceBook",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[vw_AttendanceBook].* FROM [sales].[vw_AttendanceBook] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "measures": [
          {
            "name": "Horas Trabajadas Max",
            "expression": " MAX('Libro de Asistencia'[WorkedHours])",
            "formatString": "0.0"
          },
          {
            "name": "Horas Trabajadas Sum",
            "expression": " SUM('Libro de Asistencia'[WorkedHours])",
            "formatString": "0.0"
          },
          {
            "name": "Horas Trabajadas Prm",
            "expression": " AVERAGE('Libro de Asistencia'[WorkedHours])",
            "formatString": "0.0"
          },
          {
            "name": "Frecuencia de Venta",
            "expression": [
              " ",
              "IF(ISBLANK([Transacciones por Vendedor]), BLANK(), DIVIDE([Horas Trabajadas Sum] * 60, [Transacciones por Vendedor]))"
            ],
            "formatString": "0.0"
          },
          {
            "name": "Ventas por Hora",
            "expression": [
              " ",
              "IF( ISBLANK([Horas Trabajadas Sum]), BLANK(), DIVIDE( [Transacciones por Vendedor], [Horas Trabajadas Sum]))"
            ],
            "formatString": "0.0"
          },
          {
            "name": "Transacciones por Vendedor",
            "expression": " [Transacciones]",
            "formatString": "#,0"
          },
          {
            "name": "UPT por Vendedor",
            "expression": "if([Transacciones por Vendedor]= 0 ,blank(),if (Venta[Unidades]=0, blank(),Venta[Unidades]/[Transacciones por Vendedor]))",
            "formatString": "#,0.00"
          },
          {
            "name": "ATV por Vendedor",
            "expression": " if([Transacciones por Vendedor]= 0 ,blank(),if (Venta[Ventas]=0, blank(),Venta[Ventas]/[Transacciones por Vendedor]))",
            "formatString": "#,0"
          },
          {
            "name": "ADS por Vendedor",
            "expression": "Venta[Ventas]/[Transacciones por Vendedor]",
            "formatString": "#,0"
          },
          {
            "name": "ADS/ATV por Vendedor",
            "expression": " IF([ATV por Vendedor]=0, BLANK(), IF([ADS]=0, BLANK(), DIVIDE([ADS por Vendedor],[ATV por Vendedor])))",
            "formatString": "0.00"
          },
          {
            "name": "Cantidad de empleados",
            "expression": " DISTINCTCOUNT('Libro de Asistencia'[Identificador]) ",
            "formatString": "#,0"
          },
          {
            "name": "Retention",
            "expression": " DATEDIFF( max('Vendedor'[ContractDate] ),TODAY(), MONTH)",
            "formatString": "#,0"
          },
          {
            "name": "Ventas por Empleado",
            "expression": " if(or([Venta Actual]=0, [Venta Actual]=BLANK()),BLANK(),if(or([Cantidad de empleados]=0, [Cantidad de empleados]=BLANK()),BLANK(),DIVIDE([Venta Actual],[Cantidad de empleados])))",
            "formatString": "#,0"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[vw_AttendanceBook].* FROM [sales].[vw_AttendanceBook] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "vw_AttendanceBook"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Producto Modelo",
        "columns": [
          {
            "name": "Product Model Id",
            "dataType": "int64",
            "isKey": true,
            "sourceColumn": "ProductModelId",
            "sourceProviderType": "int"
          },
          {
            "name": "Modelo",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "varchar"
          }
        ],
        "partitions": [
          {
            "name": "ProductModel 1",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [sales].[ProductModel].* FROM [sales].[ProductModel] ",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[ProductModel].* FROM [sales].[ProductModel] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ProductModel"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          }
        ]
      },
      {
        "name": "Fact_Pedidos",
        "columns": [
          {
            "name": "ProductId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductId",
            "sourceProviderType": "int"
          },
          {
            "name": "ProductGenericId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductGenericId",
            "sourceProviderType": "int"
          },
          {
            "name": "StoreId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "StoreId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleOrganisationId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SaleOrganisationId",
            "sourceProviderType": "int"
          },
          {
            "name": "SaleChannelId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SaleChannelId",
            "sourceProviderType": "int"
          },
          {
            "name": "Fecha Extrae",
            "dataType": "dateTime",
            "sourceColumn": "FechaExtrae",
            "formatString": "General Date",
            "sourceProviderType": "date"
          },
          {
            "name": "Origen",
            "dataType": "string",
            "sourceColumn": "origen",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Pedido",
            "dataType": "string",
            "sourceColumn": "PEDIDO",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Sociedad",
            "dataType": "string",
            "sourceColumn": "SOCIEDAD",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Fecha Creacion",
            "dataType": "dateTime",
            "sourceColumn": "FEC_CREACION",
            "formatString": "General Date",
            "sourceProviderType": "date"
          },
          {
            "name": "Centro Su",
            "dataType": "string",
            "sourceColumn": "centro_su",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Clase Doc",
            "dataType": "string",
            "sourceColumn": "Clasedoc",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Posicion",
            "dataType": "string",
            "sourceColumn": "posicion",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Store Code",
            "dataType": "string",
            "sourceColumn": "StoreCode",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Customer Tax Code",
            "dataType": "string",
            "sourceColumn": "CustomerTaxCode",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Tienda Cliente",
            "dataType": "string",
            "sourceColumn": "Tienda_Cliente",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Marca",
            "dataType": "string",
            "sourceColumn": "Marca",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Tipo Local",
            "dataType": "string",
            "sourceColumn": "Tipo_Local",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Material",
            "dataType": "string",
            "sourceColumn": "material",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Cant Pedido",
            "dataType": "int64",
            "sourceColumn": "CantPedido",
            "sourceProviderType": "int"
          },
          {
            "name": "Cant Pedido Dia",
            "dataType": "int64",
            "sourceColumn": "CantPedidoDia",
            "sourceProviderType": "int"
          },
          {
            "name": "Temporada",
            "dataType": "string",
            "sourceColumn": "Temporada",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Año",
            "dataType": "string",
            "sourceColumn": "ano",
            "sourceProviderType": "varchar"
          },
          {
            "name": "Cant Entrega",
            "dataType": "int64",
            "sourceColumn": "cantEntrega",
            "sourceProviderType": "int"
          },
          {
            "name": "Cant Entrega Dia",
            "dataType": "int64",
            "sourceColumn": "cantEntregaDia",
            "sourceProviderType": "int"
          },
          {
            "name": "Cant Embalada",
            "dataType": "int64",
            "sourceColumn": "cantEmbalada",
            "sourceProviderType": "int"
          },
          {
            "name": "Cant Embalada Dia",
            "dataType": "int64",
            "sourceColumn": "cantEmbaladaDia",
            "sourceProviderType": "int"
          },
          {
            "name": "Cant Despachado",
            "dataType": "int64",
            "sourceColumn": "CantDespachado",
            "sourceProviderType": "int"
          },
          {
            "name": "Cant Despachado Dia",
            "dataType": "int64",
            "sourceColumn": "CantDespachadoDia",
            "sourceProviderType": "int"
          },
          {
            "name": "Cant Recepcionado",
            "dataType": "int64",
            "sourceColumn": "CantRecepcionado",
            "sourceProviderType": "int"
          },
          {
            "name": "Sin Entrega",
            "dataType": "int64",
            "sourceColumn": "SinEntrega",
            "sourceProviderType": "int"
          },
          {
            "name": "Cant Recepcionado Dia",
            "dataType": "int64",
            "sourceColumn": "CantRecepcionadoDia",
            "sourceProviderType": "int"
          },
          {
            "name": "En Proceso",
            "dataType": "int64",
            "sourceColumn": "enproceso",
            "sourceProviderType": "int"
          },
          {
            "name": "En Transito",
            "dataType": "int64",
            "sourceColumn": "entransito",
            "sourceProviderType": "int"
          },
          {
            "name": "Ind Borrado",
            "dataType": "string",
            "sourceColumn": "IndBorrado",
            "sourceProviderType": "char"
          },
          {
            "name": "Ind Entre Fin",
            "dataType": "string",
            "sourceColumn": "IndEntreFin",
            "sourceProviderType": "char"
          },
          {
            "name": "Tubo CD",
            "dataType": "int64",
            "sourceColumn": "tuboCD",
            "sourceProviderType": "int"
          },
          {
            "name": "WIP Embaladas",
            "dataType": "int64",
            "sourceColumn": "WIPEmbaladas",
            "sourceProviderType": "int"
          },
          {
            "name": "Contador",
            "dataType": "int64",
            "sourceColumn": "CONTADOR",
            "sourceProviderType": "int"
          },
          {
            "name": "Lead Time",
            "dataType": "int64",
            "sourceColumn": "lead_time",
            "sourceProviderType": "int"
          },
          {
            "name": "Lead Time Despacho",
            "dataType": "int64",
            "sourceColumn": "lead_time_despacho",
            "sourceProviderType": "int"
          },
          {
            "name": "Fecha Entrega",
            "dataType": "dateTime",
            "sourceColumn": "fecha_entrega",
            "formatString": "General Date",
            "sourceProviderType": "date"
          },
          {
            "name": "Fecha Embalaje",
            "dataType": "dateTime",
            "sourceColumn": "fecha_embalaje",
            "formatString": "General Date",
            "sourceProviderType": "date"
          },
          {
            "name": "Fecha Despacho",
            "dataType": "dateTime",
            "sourceColumn": "fecha_despacho",
            "formatString": "General Date",
            "sourceProviderType": "date"
          },
          {
            "name": "Fecha Movimiento",
            "dataType": "dateTime",
            "sourceColumn": "fecha_movimiento",
            "formatString": "General Date",
            "sourceProviderType": "date"
          },
          {
            "type": "calculated",
            "name": "Año Creacion",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " YEAR(fact_pedidos[Fecha Creacion])"
          },
          {
            "type": "calculated",
            "name": "Año Extrae",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " year(fact_pedidos[Fecha Extrae])"
          },
          {
            "type": "calculated",
            "name": "Año Movimiento",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " year(fact_pedidos[Fecha Movimiento])"
          },
          {
            "type": "calculated",
            "name": "Dia Creacion",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " DAY(fact_pedidos[Fecha Creacion])"
          },
          {
            "type": "calculated",
            "name": "Dia Extrae",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " day(fact_pedidos[Fecha Extrae])"
          },
          {
            "type": "calculated",
            "name": "Dia Movimiento",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " DAY(fact_pedidos[Fecha Movimiento])"
          },
          {
            "type": "calculated",
            "name": "Lead Time Total",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " [Suma de Cant Embalada Dia] * [Suma de Lead Time]"
          },
          {
            "type": "calculated",
            "name": "Mes Creacion",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " MONTH(fact_pedidos[Fecha Creacion])"
          },
          {
            "type": "calculated",
            "name": "Mes Extrae",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " month(fact_pedidos[Fecha Extrae])"
          },
          {
            "type": "calculated",
            "name": "Mes Movimiento",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " MONTH(fact_pedidos[Fecha Movimiento])"
          },
          {
            "name": "CustomerId",
            "dataType": "int64",
            "sourceColumn": "CustomerId"
          },
          {
            "name": "BrandId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BrandId"
          }
        ],
        "partitions": [
          {
            "name": "Fact_Pedidos",
            "source": {
              "type": "query",
              "query": "SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-10 and GETDATE()",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-10 and GETDATE()</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          },
          {
            "name": "Fact_Pedidos_1",
            "mode": "import",
            "source": {
              "type": "query",
              "query": "SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-20 and GETDATE()-11",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-20 and GETDATE()-11</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          },
          {
            "name": "Fact_Pedidos_2",
            "mode": "import",
            "source": {
              "type": "query",
              "query": "SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-30 and GETDATE()-19",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-30 and GETDATE()-19</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          },
          {
            "name": "Fact_Pedidos_3",
            "mode": "import",
            "source": {
              "type": "query",
              "query": "SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-40 and GETDATE()-29",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-40 and GETDATE()-29</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          },
          {
            "name": "Fact_Pedidos_4",
            "mode": "import",
            "source": {
              "type": "query",
              "query": "SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-50 and GETDATE()-39",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-50 and GETDATE()-39</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          },
          {
            "name": "Fact_Pedidos_5",
            "mode": "import",
            "source": {
              "type": "query",
              "query": "SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-60 and GETDATE()-49",
              "dataSource": "SqlAzure levi-edw-dev.sql.azuresynapse.net levi_edw_dev"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-60 and GETDATE()-49</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Suma de Cant Despachado",
            "expression": "SUM([Cant Despachado])"
          },
          {
            "name": "Suma de Cant Despachado Dia",
            "expression": "SUM([Cant Despachado Dia])"
          },
          {
            "name": "Suma de Cant Embalada",
            "expression": "SUM([Cant Embalada])"
          },
          {
            "name": "Suma de Cant Embalada Dia",
            "expression": "SUM([Cant Embalada Dia])"
          },
          {
            "name": "Suma de Cant Entrega",
            "expression": "SUM([Cant Entrega])"
          },
          {
            "name": "Suma de Cant Entrega Dia",
            "expression": "SUM([Cant Entrega Dia])"
          },
          {
            "name": "Suma de Cant Pedido",
            "expression": "SUM([Cant Pedido])"
          },
          {
            "name": "Suma de Cant Pedido Dia",
            "expression": "SUM([Cant Pedido Dia])"
          },
          {
            "name": "Suma de Cant Recepcionado",
            "expression": "SUM([Cant Recepcionado])"
          },
          {
            "name": "Suma de Cant Recepcionado Dia",
            "expression": "SUM([Cant Recepcionado Dia])"
          },
          {
            "name": "Suma de Contador",
            "expression": "SUM([Contador])"
          },
          {
            "name": "Suma de En Proceso",
            "expression": "SUM([En Proceso])"
          },
          {
            "name": "Suma de En Transito",
            "expression": "SUM([En Transito])"
          },
          {
            "name": "Suma de Fecha Extrae",
            "expression": "SUM([Fecha Extrae])",
            "formatString": "dd-MM-yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"13322\" Group=\"ShortDate\" FormatString=\"dd-MM-yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Suma de Lead Time",
            "expression": "SUM([Lead Time])"
          },
          {
            "name": "Suma de Lead Time Despacho",
            "expression": "SUM([Lead Time Despacho])"
          },
          {
            "name": "Suma de Lead Time Total",
            "expression": "sum(Fact_Pedidos[Lead Time Total])"
          },
          {
            "name": "Suma de SinEntrega",
            "expression": "SUM([Sin Entrega])"
          },
          {
            "name": "Suma de tuboCD",
            "expression": "SUM([Tubo CD])"
          },
          {
            "name": "Suma de WIPEmbaladas",
            "expression": "SUM([WIP Embaladas])"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "vw_FactPedidos"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "sales"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[vw_FactPedidos].* FROM [sales].[vw_FactPedidos] WHERE [FechaExtrae] between GETDATE()-10 and GETDATE()</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "63c522ec-f37e-4452-a0a3-fb194e1c783a",
        "fromTable": "Sale Channel Store",
        "fromColumn": "SaleChannelId",
        "toTable": "Canal",
        "toColumn": "Sale Channel Id"
      },
      {
        "name": "bc7134b5-9bbc-480f-ab56-03e69141f665",
        "fromTable": "Sale Channel Store",
        "fromColumn": "StoreId",
        "toTable": "Tienda",
        "toColumn": "StoreId"
      },
      {
        "name": "345e4f5a-b241-4003-b55a-39a9fb833e31",
        "fromTable": "Venta",
        "fromColumn": "BrandId",
        "toTable": "Marca",
        "toColumn": "Brand Id"
      },
      {
        "name": "39b5808c-5a52-4c81-bbc5-6969de8ae457",
        "fromTable": "Venta",
        "fromColumn": "BusinessClasificationId",
        "toTable": "Negocio",
        "toColumn": "Business Clasification Id"
      },
      {
        "name": "3105693b-42ff-4b75-a229-9c0fb7122873",
        "fromTable": "Venta",
        "fromColumn": "ClothingPieceId",
        "toTable": "Prenda",
        "toColumn": "Clothing Piece Id"
      },
      {
        "name": "c79ed5c7-caf1-4a4c-896c-d0f3ec29a4ae",
        "fromTable": "Venta",
        "fromColumn": "ClothingPieceTypeId",
        "toTable": "Tipo",
        "toColumn": "Clothing Piece Type Id"
      },
      {
        "name": "4ae71a0a-6551-44e6-abcb-93abdb6f06ce",
        "fromTable": "Venta",
        "fromColumn": "GenderId",
        "toTable": "Genero",
        "toColumn": "Gender Id"
      },
      {
        "name": "b77eb6b6-b569-4a1e-9a95-b42e2bd4c9ee",
        "fromTable": "Venta",
        "fromColumn": "LineId",
        "toTable": "Linea",
        "toColumn": "Line Id"
      },
      {
        "name": "d7d7963f-056c-4007-9e9b-0c12c857b898",
        "fromTable": "Venta",
        "fromColumn": "ProductFashionGradeId",
        "toTable": "Producto Grado Moda",
        "toColumn": "Product Fashion Grade Id"
      },
      {
        "name": "03f60c8a-cf87-4f17-b2d7-e9c507fec780",
        "fromTable": "Venta",
        "fromColumn": "ProductFashionSeasonId",
        "toTable": "Producto Temporada Moda",
        "toColumn": "Product Fashion Season Id"
      },
      {
        "name": "3357926c-aa16-4e95-ae19-854e90cbfb7b",
        "fromTable": "Venta",
        "fromColumn": "ProductGenericId",
        "toTable": "Producto Generico",
        "toColumn": "Product Generic Id"
      },
      {
        "name": "90324413-653f-4075-9989-bfa14b30a7c0",
        "fromTable": "Venta",
        "fromColumn": "ProductId",
        "toTable": "Producto",
        "toColumn": "Product Id"
      },
      {
        "name": "30cfe18f-e3c0-47a3-9b3d-b99014f09f17",
        "fromTable": "Venta",
        "fromColumn": "QualityId",
        "toTable": "Calidad",
        "toColumn": "Quality Id"
      },
      {
        "name": "223f99e8-0904-4d4a-a484-bb0ee0efef8e",
        "fromTable": "Venta",
        "fromColumn": "SaleChannelId",
        "toTable": "Canal",
        "toColumn": "Sale Channel Id"
      },
      {
        "name": "0ff880f4-3efa-456a-8be6-47d78cf9ca6f",
        "fromTable": "Venta",
        "fromColumn": "SaleOrganisationId",
        "toTable": "Org Venta",
        "toColumn": "Sale Organisation Id"
      },
      {
        "name": "cb8d951f-7093-4bbb-b391-2670cbf12ae3",
        "fromTable": "Venta",
        "fromColumn": "ShimId",
        "toTable": "Calce",
        "toColumn": "ShimId"
      },
      {
        "name": "2e3e6951-ed16-4c30-9b24-9c8b454620d5",
        "fromTable": "Venta",
        "fromColumn": "TimePeriodId",
        "toTable": "Periodo",
        "toColumn": "Time Period Id"
      },
      {
        "name": "f1f8890f-0dfe-4f00-a135-b26f12c555fa",
        "fromTable": "Venta AFP IP",
        "fromColumn": "BrandId",
        "toTable": "Marca",
        "toColumn": "Brand Id"
      },
      {
        "name": "d547e3f4-d658-4717-9ad3-5e8e17d8e012",
        "fromTable": "Venta AFP IP",
        "fromColumn": "CurrencyId",
        "toTable": "Moneda",
        "toColumn": "CurrencyId"
      },
      {
        "name": "634f9c4b-8e52-4291-8d26-024b2393757a",
        "fromTable": "Venta AFP IP",
        "fromColumn": "ProductId",
        "toTable": "Producto",
        "toColumn": "Product Id"
      },
      {
        "name": "dafe4b1d-857c-464b-ad8c-842b994ce3c3",
        "fromTable": "Venta AFP IP",
        "fromColumn": "SaleChannelId",
        "toTable": "Canal",
        "toColumn": "Sale Channel Id"
      },
      {
        "name": "13d64f6b-7c2d-4213-a0e6-0d5f33eae4a7",
        "fromTable": "Venta AFP IP",
        "fromColumn": "SaleOrganisationId",
        "toTable": "Org Venta",
        "toColumn": "Sale Organisation Id"
      },
      {
        "name": "3825dc81-f317-48c1-b0e0-eec4f783b54f",
        "fromTable": "Venta AFP IP",
        "fromColumn": "TimePeriodId",
        "toTable": "Periodo",
        "toColumn": "Time Period Id"
      },
      {
        "name": "1d48a1d4-68d3-4f34-8e4e-7543f6c7eb9a",
        "fromTable": "Venta ABP",
        "fromColumn": "BrandId",
        "toTable": "Marca",
        "toColumn": "Brand Id"
      },
      {
        "name": "2f98e367-7633-4710-b850-114fdb3782af",
        "fromTable": "Venta ABP",
        "fromColumn": "ClothingPieceTypeId",
        "toTable": "Tipo",
        "toColumn": "Clothing Piece Type Id"
      },
      {
        "name": "8238ff25-d791-4a0d-b66f-c4dfffb4e512",
        "fromTable": "Venta ABP",
        "fromColumn": "LineId",
        "toTable": "Linea",
        "toColumn": "Line Id"
      },
      {
        "name": "e3fadb7f-4cb0-48f0-8806-3594ca07000e",
        "fromTable": "Venta ABP",
        "fromColumn": "CurrencyId",
        "toTable": "Moneda",
        "toColumn": "CurrencyId"
      },
      {
        "name": "42501eb8-8d80-4236-bf7e-997667f64814",
        "fromTable": "Venta ABP",
        "fromColumn": "CustomerId",
        "toTable": "Cliente",
        "toColumn": "Customer Id"
      },
      {
        "name": "1800a8a8-93ef-4017-b701-35c3a0627cd4",
        "fromTable": "Venta ABP",
        "fromColumn": "GenderId",
        "toTable": "Genero",
        "toColumn": "Gender Id"
      },
      {
        "name": "c6cbe869-c0a3-4f3a-9851-6da2ac79508b",
        "fromTable": "Venta ABP",
        "fromColumn": "ClothingPieceId",
        "toTable": "Prenda",
        "toColumn": "Clothing Piece Id"
      },
      {
        "name": "4643b72e-4746-4ab1-b33b-90fd4b2cda33",
        "fromTable": "Venta ABP",
        "fromColumn": "ProductFashionGradeId",
        "toTable": "Producto Grado Moda",
        "toColumn": "Product Fashion Grade Id"
      },
      {
        "name": "9e9f2f8b-50ba-47d6-9097-a6b79ed428b0",
        "fromTable": "Venta ABP",
        "fromColumn": "ProductFashionSeasonId",
        "toTable": "Producto Temporada Moda",
        "toColumn": "Product Fashion Season Id"
      },
      {
        "name": "933bc4d5-0ed4-44a3-8be0-426ea3df0803",
        "fromTable": "Venta ABP",
        "fromColumn": "ProductGenericId",
        "toTable": "Producto Generico",
        "toColumn": "Product Generic Id"
      },
      {
        "name": "0e23be83-bc69-43d7-8c86-5067e958eb19",
        "fromTable": "Venta ABP",
        "fromColumn": "ProductId",
        "toTable": "Producto",
        "toColumn": "Product Id"
      },
      {
        "name": "b1f0b9ef-ae64-4b39-a8b0-6246637526c5",
        "fromTable": "Venta ABP",
        "fromColumn": "QualityId",
        "toTable": "Calidad",
        "toColumn": "Quality Id"
      },
      {
        "name": "ad49843c-9766-4d77-bd61-2dd35d87a1e2",
        "fromTable": "Venta ABP",
        "fromColumn": "SaleChannelId",
        "toTable": "Canal",
        "toColumn": "Sale Channel Id"
      },
      {
        "name": "f035e3e8-b140-4f24-a86f-09c5e9311892",
        "fromTable": "Venta ABP",
        "fromColumn": "SaleOrganisationId",
        "toTable": "Org Venta",
        "toColumn": "Sale Organisation Id"
      },
      {
        "name": "37ffd697-dafb-4efd-aa7b-5c1df29fb9c5",
        "fromTable": "Venta ABP",
        "fromColumn": "TimePeriodId",
        "toTable": "Periodo",
        "toColumn": "Time Period Id"
      },
      {
        "name": "ff39418b-2103-483b-85dc-a1294bd1a21e",
        "fromTable": "Retail Venta",
        "fromColumn": "CustomerId",
        "toTable": "Cliente",
        "toColumn": "Customer Id"
      },
      {
        "name": "6ba59b4a-edd9-4556-aadf-fb42a390c1b3",
        "fromTable": "Retail Venta",
        "fromColumn": "DocumentTypeId",
        "toTable": "Tipo Documento",
        "toColumn": "Document Type Id"
      },
      {
        "name": "d67bc926-4a14-484f-8268-a61c82b28bfb",
        "fromTable": "Retail Venta",
        "fromColumn": "HourId",
        "toTable": "Hora",
        "toColumn": "Hour Id"
      },
      {
        "name": "d633b54e-935a-47ec-9e9c-42f9b05bdbe6",
        "fromTable": "Retail Venta",
        "fromColumn": "SaleChannelId",
        "toTable": "Canal",
        "toColumn": "Sale Channel Id"
      },
      {
        "name": "8993f201-ae97-49a9-a569-a259f92c5fa1",
        "fromTable": "Retail Venta",
        "fromColumn": "SaleOrganisationId",
        "toTable": "Org Venta",
        "toColumn": "Sale Organisation Id"
      },
      {
        "name": "275fd1c0-fc11-45b0-a489-47e8a77fbba3",
        "fromTable": "Retail Venta",
        "fromColumn": "StoreId",
        "toTable": "Tienda",
        "toColumn": "StoreId"
      },
      {
        "name": "7decdc68-7bb5-46ae-8a46-b23da403e557",
        "fromTable": "Retail Venta",
        "fromColumn": "TimePeriodId",
        "toTable": "Periodo",
        "toColumn": "Time Period Id"
      },
      {
        "name": "b3890820-b540-4bd5-bdda-2ceb86951826",
        "fromTable": "Retail Traffic",
        "fromColumn": "HourId",
        "toTable": "Hora",
        "toColumn": "Hour Id"
      },
      {
        "name": "1d5a506c-901d-4a29-8b3a-35b2af47b667",
        "fromTable": "Retail Traffic",
        "fromColumn": "SaleChannelId",
        "toTable": "Canal",
        "toColumn": "Sale Channel Id"
      },
      {
        "name": "a9686f34-fc73-4c14-b856-afe3b7306bf6",
        "fromTable": "Retail Traffic",
        "fromColumn": "SaleOrganisationId",
        "toTable": "Org Venta",
        "toColumn": "Sale Organisation Id"
      },
      {
        "name": "555d69c9-cc14-4280-9e36-3327e76ccccd",
        "fromTable": "Retail Traffic",
        "fromColumn": "StoreId",
        "toTable": "Tienda",
        "toColumn": "StoreId"
      },
      {
        "name": "0373bca3-fdfe-444d-a174-bdd7c64e1640",
        "fromTable": "Retail Traffic",
        "fromColumn": "TimePeriodId",
        "toTable": "Periodo",
        "toColumn": "Time Period Id"
      },
      {
        "name": "775466d5-7196-453e-9232-8994e7a283a1",
        "fromTable": "Inventario",
        "fromColumn": "BrandId",
        "toTable": "Marca",
        "toColumn": "Brand Id"
      },
      {
        "name": "dfab046b-d664-4dd1-8569-72da8d8bf352",
        "fromTable": "Inventario",
        "fromColumn": "ClothingPieceId",
        "toTable": "Prenda",
        "toColumn": "Clothing Piece Id"
      },
      {
        "name": "7cf7ea9b-fab6-4aa2-9ba9-fba90de1e47e",
        "fromTable": "Inventario",
        "fromColumn": "ClothingPieceTypeId",
        "toTable": "Tipo",
        "toColumn": "Clothing Piece Type Id"
      },
      {
        "name": "4d4ffdb6-3d59-40fa-a212-2c2373613919",
        "fromTable": "Inventario",
        "fromColumn": "CustomerId",
        "toTable": "Cliente",
        "toColumn": "Customer Id"
      },
      {
        "name": "a3189e7a-500f-4ad1-acc2-d8a58dc9d786",
        "fromTable": "Inventario",
        "fromColumn": "GenderId",
        "toTable": "Genero",
        "toColumn": "Gender Id"
      },
      {
        "name": "0601e230-efb5-4e1e-b354-b6ae718320cc",
        "fromTable": "Inventario",
        "fromColumn": "LineId",
        "toTable": "Linea",
        "toColumn": "Line Id"
      },
      {
        "name": "7fb694c6-edad-46ea-a2ed-94601114caf4",
        "fromTable": "Inventario",
        "fromColumn": "ProductFashionGradeId",
        "toTable": "Producto Grado Moda",
        "toColumn": "Product Fashion Grade Id"
      },
      {
        "name": "6f04f64a-11ee-49bf-9a16-a9154f309804",
        "fromTable": "Inventario",
        "fromColumn": "ProductGenericId",
        "toTable": "Producto Generico",
        "toColumn": "Product Generic Id"
      },
      {
        "name": "d712cd5a-5833-4fe0-acbd-25533dee39fd",
        "fromTable": "Inventario",
        "fromColumn": "ProductId",
        "toTable": "Producto",
        "toColumn": "Product Id"
      },
      {
        "name": "e0e2bf2f-ccdd-40ec-923c-b2a9db16fb18",
        "fromTable": "Inventario",
        "fromColumn": "QualityId",
        "toTable": "Calidad",
        "toColumn": "Quality Id"
      },
      {
        "name": "efaf373b-af7c-4615-af68-53dca4ea2f44",
        "fromTable": "Inventario",
        "fromColumn": "SaleOrganisationId",
        "toTable": "Org Venta",
        "toColumn": "Sale Organisation Id"
      },
      {
        "name": "51a9fc4c-5dae-4032-9fed-9cf68ad50c78",
        "fromTable": "Inventario",
        "fromColumn": "ShimId",
        "toTable": "Calce",
        "toColumn": "ShimId"
      },
      {
        "name": "d8cddb6a-0076-45df-8c72-d4ca4d236d8b",
        "fromTable": "Inventario",
        "fromColumn": "StoreId",
        "toTable": "Tienda",
        "toColumn": "StoreId"
      },
      {
        "name": "8e017fd4-bf5a-4588-8c82-f286eceb3c5d",
        "fromTable": "Inventario",
        "fromColumn": "WarehouseId",
        "toTable": "Almacen",
        "toColumn": "Warehouse Id"
      },
      {
        "name": "3185daca-4216-492f-b1d0-5e584ff3fb9e",
        "fromTable": "Inventario",
        "fromColumn": "ProductFashionSeasonId",
        "toTable": "Producto Temporada Moda",
        "toColumn": "Product Fashion Season Id"
      },
      {
        "name": "d69b7e78-29cf-442b-8273-3d5b94058dbd",
        "fromTable": "Inventario Historico",
        "fromColumn": "BrandId",
        "toTable": "Marca",
        "toColumn": "Brand Id"
      },
      {
        "name": "29fbd5a4-c681-4fba-aeea-456c2f1c5fac",
        "fromTable": "Inventario Historico",
        "fromColumn": "ClothingPieceId",
        "toTable": "Prenda",
        "toColumn": "Clothing Piece Id"
      },
      {
        "name": "7ea1d231-9648-4a9f-965f-07bd1f8ee0f7",
        "fromTable": "Inventario Historico",
        "fromColumn": "ClothingPieceTypeId",
        "toTable": "Tipo",
        "toColumn": "Clothing Piece Type Id"
      },
      {
        "name": "dc90e1d1-326d-45db-8fd7-c867ca6638cc",
        "fromTable": "Inventario Historico",
        "fromColumn": "CustomerId",
        "toTable": "Cliente",
        "toColumn": "Customer Id"
      },
      {
        "name": "26bd5e60-60cb-4f4a-a70f-275ff4bfdf4c",
        "fromTable": "Inventario Historico",
        "fromColumn": "GenderId",
        "toTable": "Genero",
        "toColumn": "Gender Id"
      },
      {
        "name": "aaa53ef0-66f4-4a6b-9464-35621e82ecf8",
        "fromTable": "Inventario Historico",
        "fromColumn": "LineId",
        "toTable": "Linea",
        "toColumn": "Line Id"
      },
      {
        "name": "eda4c8be-f8f7-44fb-abbd-3b24ce55ffe8",
        "fromTable": "Inventario Historico",
        "fromColumn": "ProductFashionGradeId",
        "toTable": "Producto Grado Moda",
        "toColumn": "Product Fashion Grade Id"
      },
      {
        "name": "39613e60-9ea8-4e98-9cf3-955037da4e03",
        "fromTable": "Inventario Historico",
        "fromColumn": "ProductFashionSeasonId",
        "toTable": "Producto Temporada Moda",
        "toColumn": "Product Fashion Season Id"
      },
      {
        "name": "88137580-0402-4fb6-be67-c02dbbf85f48",
        "fromTable": "Inventario Historico",
        "fromColumn": "ProductGenericId",
        "toTable": "Producto Generico",
        "toColumn": "Product Generic Id"
      },
      {
        "name": "a23fcd3c-d9a0-4764-890c-de93d4813c58",
        "fromTable": "Inventario Historico",
        "fromColumn": "ProductId",
        "toTable": "Producto",
        "toColumn": "Product Id"
      },
      {
        "name": "e71f87b5-fd53-4ee3-8f3a-bc78b2e364d6",
        "fromTable": "Inventario Historico",
        "fromColumn": "QualityId",
        "toTable": "Calidad",
        "toColumn": "Quality Id"
      },
      {
        "name": "bb1e9fa8-6fcb-418f-b8e8-5311e12001a8",
        "fromTable": "Inventario Historico",
        "fromColumn": "SaleChannelId",
        "toTable": "Canal",
        "toColumn": "Sale Channel Id"
      },
      {
        "name": "36c8d4dc-aa3d-4518-9558-f427c745de0d",
        "fromTable": "Inventario Historico",
        "fromColumn": "SaleOrganisationId",
        "toTable": "Org Venta",
        "toColumn": "Sale Organisation Id"
      },
      {
        "name": "61d6e481-12a9-4de7-845d-ba7e2b4c2854",
        "fromTable": "Inventario Historico",
        "fromColumn": "ShimId",
        "toTable": "Calce",
        "toColumn": "ShimId"
      },
      {
        "name": "a47cb224-7d7b-42cf-be0a-5706cd873a56",
        "fromTable": "Inventario Historico",
        "fromColumn": "StoreId",
        "toTable": "Tienda",
        "toColumn": "StoreId"
      },
      {
        "name": "e566ffb5-3459-4b05-835f-e393bd913cba",
        "fromTable": "Inventario Historico",
        "fromColumn": "TimePeriodId",
        "toTable": "Periodo",
        "toColumn": "Time Period Id"
      },
      {
        "name": "07937211-7d41-4a6c-b1bb-386a84e27e5b",
        "fromTable": "Inventario Historico",
        "fromColumn": "WarehouseId",
        "toTable": "Almacen",
        "toColumn": "Warehouse Id"
      },
      {
        "name": "69211a44-d525-448a-809d-e7bd887c1589",
        "fromTable": "Google_Analytics",
        "fromColumn": "Brandid",
        "toTable": "Marca",
        "toColumn": "Brand Id"
      },
      {
        "name": "b6e85dad-4f17-4e9b-9523-41da431c0ef7",
        "fromTable": "Google_Analytics",
        "fromColumn": "fecha",
        "toTable": "Periodo",
        "toColumn": "Time Period Id"
      },
      {
        "name": "2604c8e1-6855-40de-860f-64f3078c6a49",
        "fromTable": "Venta",
        "fromColumn": "CustomerId",
        "toTable": "Cliente",
        "toColumn": "Customer Id"
      },
      {
        "name": "e8a18f55-bc28-459b-8feb-5c622145974a",
        "fromTable": "Venta",
        "fromColumn": "CurrencyId",
        "toTable": "Moneda",
        "toColumn": "CurrencyId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "dea6be1b-3b21-43ae-a788-ff516824b476",
        "fromTable": "Venta",
        "fromColumn": "StoreId",
        "toTable": "Tienda",
        "toColumn": "StoreId"
      },
      {
        "name": "1f224e77-3d75-45f2-89bd-f2c3796c0906",
        "fromTable": "Venta AFP IP",
        "fromColumn": "StoreId",
        "toTable": "Tienda",
        "toColumn": "StoreId"
      },
      {
        "name": "dcec839a-4d4f-4330-aa95-7234ea619895",
        "fromTable": "Venta ABP",
        "fromColumn": "StoreId",
        "toTable": "Tienda",
        "toColumn": "StoreId"
      },
      {
        "name": "ac4263b2-6ecb-427e-870d-2a3998b270e7",
        "fromTable": "Venta",
        "fromColumn": "TipoCambioId",
        "toTable": "Tipo Cambio",
        "toColumn": "TipoCambioId"
      },
      {
        "name": "3d2cf194-7b9f-40c5-a20c-8b54d9769a50",
        "fromTable": "Venta AFP IP",
        "fromColumn": "TipoCambioId",
        "toTable": "Tipo Cambio",
        "toColumn": "TipoCambioId"
      },
      {
        "name": "9b9349ce-19bd-4aea-8e8b-e999fe3fb141",
        "fromTable": "Venta",
        "fromColumn": "SellerId",
        "toTable": "Vendedor",
        "toColumn": "Seller Id",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "63013982-942c-4ba8-827c-6ef5d037bf27",
        "fromTable": "Libro de Asistencia",
        "fromColumn": "Seller Id",
        "toTable": "Vendedor",
        "toColumn": "Seller Id"
      },
      {
        "name": "629bcb12-91e0-4545-afb6-6ee89b4f098b",
        "fromTable": "Libro de Asistencia",
        "fromColumn": "Fecha",
        "toTable": "Periodo",
        "toColumn": "Time Period Id"
      },
      {
        "name": "5a93d4e7-951f-4d94-b3cc-12d52af7b9e8",
        "fromTable": "Libro de Asistencia",
        "fromColumn": "Sale Organisation Id",
        "toTable": "Org Venta",
        "toColumn": "Sale Organisation Id"
      },
      {
        "name": "c520fdd7-90cd-40e9-a269-7d513d9ef5f3",
        "fromTable": "Retail Venta",
        "fromColumn": "BrandId",
        "toTable": "Marca",
        "toColumn": "Brand Id"
      },
      {
        "name": "5fb21281-5719-49fd-9c09-189337c8c2bc",
        "fromTable": "Venta",
        "fromColumn": "ProductModelId",
        "toTable": "Producto Modelo",
        "toColumn": "Product Model Id"
      },
      {
        "name": "163cb518-4923-40fa-8c02-63db04057b71",
        "fromTable": "Venta ABP",
        "fromColumn": "ProductModelId",
        "toTable": "Producto Modelo",
        "toColumn": "Product Model Id"
      },
      {
        "name": "c1aa1e00-073b-411a-a3c4-6ce12e148117",
        "fromTable": "Inventario",
        "fromColumn": "ProductModelId",
        "toTable": "Producto Modelo",
        "toColumn": "Product Model Id"
      },
      {
        "name": "ae18c978-ccb6-4f05-953f-c8e32a4f4098",
        "fromTable": "Inventario Historico",
        "fromColumn": "ProductModelId",
        "toTable": "Producto Modelo",
        "toColumn": "Product Model Id"
      },
      {
        "name": "f0563dee-c7eb-41ea-b61a-efc0b05aba40",
        "fromTable": "Google_Analytics",
        "fromColumn": "SaleOrganisationId",
        "toTable": "Org Venta",
        "toColumn": "Sale Organisation Id"
      },
      {
        "name": "e7ec0b3a-e26b-4b24-99a6-4869131346b2",
        "fromTable": "Fact_Pedidos",
        "fromColumn": "StoreId",
        "toTable": "Tienda",
        "toColumn": "StoreId"
      },
      {
        "name": "59257a46-f2c2-43b1-b09c-a8b37810f2d6",
        "fromTable": "Fact_Pedidos",
        "fromColumn": "ProductGenericId",
        "toTable": "Producto Generico",
        "toColumn": "Product Generic Id"
      },
      {
        "name": "dbb8dee9-6473-40de-a5d8-e51639ac290c",
        "fromTable": "Fact_Pedidos",
        "fromColumn": "ProductId",
        "toTable": "Producto",
        "toColumn": "Product Id"
      },
      {
        "name": "08318901-7e35-4724-8762-d417a0c18f93",
        "fromTable": "Fact_Pedidos",
        "fromColumn": "SaleOrganisationId",
        "toTable": "Org Venta",
        "toColumn": "Sale Organisation Id"
      },
      {
        "name": "d1838fac-9d53-46ca-9309-83cc04f9dc57",
        "fromTable": "Fact_Pedidos",
        "fromColumn": "SaleChannelId",
        "toTable": "Canal",
        "toColumn": "Sale Channel Id"
      },
      {
        "name": "4cd08d66-6ba6-4436-b29c-06f8c2b7303a",
        "fromTable": "Fact_Pedidos",
        "fromColumn": "CustomerId",
        "toTable": "Cliente",
        "toColumn": "Customer Id"
      },
      {
        "name": "9899e32d-fc08-4641-a003-cab12aae82e8",
        "fromTable": "Fact_Pedidos",
        "fromColumn": "Fecha Creacion",
        "toTable": "Periodo",
        "toColumn": "Time Period Id"
      },
      {
        "name": "2d5b12c1-bb68-4fe7-8b61-38d94814f7ce",
        "fromTable": "Fact_Pedidos",
        "fromColumn": "BrandId",
        "toTable": "Marca",
        "toColumn": "Brand Id"
      },
      {
        "name": "f4105611-21f9-4163-858b-b2208f145f9a",
        "fromTable": "Retail Venta",
        "fromColumn": "SellerId",
        "toTable": "Vendedor",
        "toColumn": "Seller Id"
      },
      {
        "name": "7e4d1e5f-6b16-43b9-9b25-a225b97f4da1",
        "fromTable": "Retail Venta",
        "fromColumn": "ProductGenericId",
        "toTable": "Producto Generico",
        "toColumn": "Product Generic Id"
      }
    ],
    "roles": [
      {
        "name": "Visualizacion",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "jmedina1@levi.com",
            "memberId": "jmedina1@levi.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "fnazer@levi.com",
            "memberId": "fnazer@levi.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "fzuniga@levicl.onmicrosoft.com",
            "memberId": "fzuniga@levicl.onmicrosoft.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Cubo_Ventas_Group@levicl.onmicrosoft.com",
            "memberId": "Cubo_Ventas_Group@levicl.onmicrosoft.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "cubo-ventas-prd@levicl.onmicrosoft.com",
            "memberId": "cubo-ventas-prd@levicl.onmicrosoft.com",
            "identityProvider": "AzureAD"
          }
        ]
      },
      {
        "name": "Administrators",
        "modelPermission": "administrator",
        "members": [
          {
            "memberName": "admin@levicl.onmicrosoft.com",
            "memberId": "admin@levicl.onmicrosoft.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "app:3f9688ba-2de1-4f13-996c-8ac7ba3a956e@bb55b9d1-8aa4-4679-a486-ec85b9bf66c3",
            "memberId": "app:3f9688ba-2de1-4f13-996c-8ac7ba3a956e@bb55b9d1-8aa4-4679-a486-ec85b9bf66c3",
            "identityProvider": "AzureAD"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "600"
      }
    ]
  }
}